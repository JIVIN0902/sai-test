{
	"id": "ab1c9671b08263c4de5a2d8fa271007f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.23",
	"solcLongVersion": "0.4.23+commit.124ca40d",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/vox.sol": {
				"content": "/// vox.sol -- target price feed\n\n// Copyright (C) 2016, 2017  Nikolai Mushegian <nikolai@dapphub.com>\n// Copyright (C) 2016, 2017  Daniel Brockman <daniel@dapphub.com>\n// Copyright (C) 2017        Rain Break <rainbreak@riseup.net>\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.4.18;\n\nimport \"./ds-thing/thing.sol\";\n\ncontract SaiVox is DSThing {\n    uint256  _par;\n    uint256  _way;\n\n    uint256  public  fix;\n    uint256  public  how;\n    uint256  public  tau;\n\n    function SaiVox(uint par_) public {\n        _par = fix = par_;\n        _way = RAY;\n        tau  = era();\n    }\n\n    function era() public view returns (uint) {\n        return block.timestamp;\n    }\n\n    function mold(bytes32 param, uint val) public note auth {\n        if (param == 'way') _way = val;\n    }\n\n    // Dai Target Price (ref per dai)\n    function par() public returns (uint) {\n        prod();\n        return _par;\n    }\n    function way() public returns (uint) {\n        prod();\n        return _way;\n    }\n\n    function tell(uint256 ray) public note auth {\n        fix = ray;\n    }\n    function tune(uint256 ray) public note auth {\n        how = ray;\n    }\n\n    function prod() public note {\n        var age = era() - tau;\n        if (age == 0) return;  // optimised\n        tau = era();\n\n        if (_way != RAY) _par = rmul(_par, rpow(_way, age));  // optimised\n\n        if (how == 0) return;  // optimised\n        var wag = int128(how * age);\n        _way = inj(prj(_way) + (fix < _par ? wag : -wag));\n    }\n\n    function inj(int128 x) internal pure returns (uint256) {\n        return x >= 0 ? uint256(x) + RAY\n            : rdiv(RAY, RAY + uint256(-x));\n    }\n    function prj(uint256 x) internal pure returns (int128) {\n        return x >= RAY ? int128(x - RAY)\n            : int128(RAY) - int128(rdiv(RAY, x));\n    }\n}\n"
			},
			"contracts/ds-thing/thing.sol": {
				"content": "// thing.sol - `auth` with handy mixins. your things should be DSThings\n\n// Copyright (C) 2017  DappHub, LLC\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.4.13;\n\nimport '../ds-auth/auth.sol';\nimport '../ds-note/note.sol';\nimport '../ds-math/math.sol';\n\ncontract DSThing is DSAuth, DSNote, DSMath {\n\n    function S(string s) internal pure returns (bytes4) {\n        return bytes4(keccak256(s));\n    }\n\n}"
			},
			"contracts/ds-math/math.sol": {
				"content": "/// math.sol -- mixin for inline numerical wizardry\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.4.13;\n\ncontract DSMath {\n    function add(uint x, uint y) internal pure returns (uint z) {\n        require((z = x + y) >= x);\n    }\n    function sub(uint x, uint y) internal pure returns (uint z) {\n        require((z = x - y) <= x);\n    }\n    function mul(uint x, uint y) internal pure returns (uint z) {\n        require(y == 0 || (z = x * y) / y == x);\n    }\n\n    function min(uint x, uint y) internal pure returns (uint z) {\n        return x <= y ? x : y;\n    }\n    function max(uint x, uint y) internal pure returns (uint z) {\n        return x >= y ? x : y;\n    }\n    function imin(int x, int y) internal pure returns (int z) {\n        return x <= y ? x : y;\n    }\n    function imax(int x, int y) internal pure returns (int z) {\n        return x >= y ? x : y;\n    }\n\n    uint constant WAD = 10 ** 18;\n    uint constant RAY = 10 ** 27;\n\n    function wmul(uint x, uint y) internal pure returns (uint z) {\n        z = add(mul(x, y), WAD / 2) / WAD;\n    }\n    function rmul(uint x, uint y) internal pure returns (uint z) {\n        z = add(mul(x, y), RAY / 2) / RAY;\n    }\n    function wdiv(uint x, uint y) internal pure returns (uint z) {\n        z = add(mul(x, WAD), y / 2) / y;\n    }\n    function rdiv(uint x, uint y) internal pure returns (uint z) {\n        z = add(mul(x, RAY), y / 2) / y;\n    }\n\n    // This famous algorithm is called \"exponentiation by squaring\"\n    // and calculates x^n with x as fixed-point and n as regular unsigned.\n    //\n    // It's O(log n), instead of O(n) for naive repeated multiplication.\n    //\n    // These facts are why it works:\n    //\n    //  If n is even, then x^n = (x^2)^(n/2).\n    //  If n is odd,  then x^n = x * x^(n-1),\n    //   and applying the equation for even x gives\n    //    x^n = x * (x^2)^((n-1) / 2).\n    //\n    //  Also, EVM division is flooring and\n    //    floor[(n-1) / 2] = floor[n / 2].\n    //\n    function rpow(uint x, uint n) internal pure returns (uint z) {\n        z = n % 2 != 0 ? x : RAY;\n\n        for (n /= 2; n != 0; n /= 2) {\n            x = rmul(x, x);\n\n            if (n % 2 != 0) {\n                z = rmul(z, x);\n            }\n        }\n    }\n}"
			},
			"contracts/ds-note/note.sol": {
				"content": "/// note.sol -- the `note' modifier, for logging calls as events\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.4.13;\n\ncontract DSNote {\n    event LogNote(\n        bytes4   indexed  sig,\n        address  indexed  guy,\n        bytes32  indexed  foo,\n        bytes32  indexed  bar,\n        uint              wad,\n        bytes             fax\n    ) anonymous;\n\n    modifier note {\n        bytes32 foo;\n        bytes32 bar;\n\n        assembly {\n            foo := calldataload(4)\n            bar := calldataload(36)\n        }\n\n        LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data);\n\n        _;\n    }\n}"
			},
			"contracts/ds-auth/auth.sol": {
				"content": "// SPDX-License-Identifier: GNU-3\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.4.23;\n\ninterface DSAuthority {\n    function canCall(\n        address src, address dst, bytes4 sig\n    ) external view returns (bool);\n}\n\ncontract DSAuthEvents {\n    event LogSetAuthority (address indexed authority);\n    event LogSetOwner     (address indexed owner);\n}\n\ncontract DSAuth is DSAuthEvents {\n    DSAuthority public authority;\n    address public  owner;\n\n    constructor() public {\n        owner = msg.sender;\n        emit LogSetOwner(msg.sender);\n    }\n\n    function setOwner(address owner_)\n        public\n        auth\n    {\n        owner = owner_;\n        emit LogSetOwner(owner);\n    }\n\n    function setAuthority(DSAuthority authority_)\n        public\n        auth\n    {\n        authority = authority_;\n        emit LogSetAuthority(address(authority));\n    }\n\n    modifier auth {\n        require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\");\n        _;\n    }\n\n    function isAuthorized(address src, bytes4 sig) internal view returns (bool) {\n        if (src == address(this)) {\n            return true;\n        } else if (src == owner) {\n            return true;\n        } else if (authority == DSAuthority(address(0))) {\n            return false;\n        } else {\n            return authority.canCall(src, address(this), sig);\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ds-auth/auth.sol": {
				"DSAuth": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "owner_",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "authority_",
									"type": "address"
								}
							],
							"name": "setAuthority",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "authority",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "authority",
									"type": "address"
								}
							],
							"name": "LogSetAuthority",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								}
							],
							"name": "LogSetOwner",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/ds-auth/auth.sol\":967:1971  contract DSAuth is DSAuthEvents {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ds-auth/auth.sol\":1067:1161  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/ds-auth/auth.sol\":1067:1161  constructor() public {... */\n  pop\n    /* \"contracts/ds-auth/auth.sol\":1106:1116  msg.sender */\n  caller\n    /* \"contracts/ds-auth/auth.sol\":1098:1103  owner */\n  0x1\n  0x0\n    /* \"contracts/ds-auth/auth.sol\":1098:1116  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ds-auth/auth.sol\":1143:1153  msg.sender */\n  caller\n    /* \"contracts/ds-auth/auth.sol\":1131:1154  LogSetOwner(msg.sender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/ds-auth/auth.sol\":967:1971  contract DSAuth is DSAuthEvents {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ds-auth/auth.sol\":967:1971  contract DSAuth is DSAuthEvents {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x13af4035\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x7a9e5e4b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbf7e214f\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n      pop\n      tag_7\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n      pop\n      tag_10\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_11)\n    tag_10:\n      stop\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n      pop\n      tag_13\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n      pop\n      tag_16\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n    tag_8:\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_19\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_20\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_19:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_21\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"contracts/ds-auth/auth.sol\":1251:1257  owner_ */\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1243:1248  owner */\n      0x1\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1243:1257  owner = owner_ */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1284:1289  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1272:1290  LogSetOwner(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n      pop\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n    tag_11:\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_24\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_20\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_24:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_25\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"contracts/ds-auth/auth.sol\":1403:1413  authority_ */\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1391:1400  authority */\n      0x0\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1391:1413  authority = authority_ */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1452:1461  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1428:1463  LogSetAuthority(address(authority)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n      pop\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n    tag_14:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n    tag_17:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1590:1969  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n    tag_20:\n        /* \"contracts/ds-auth/auth.sol\":1660:1664  bool */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1695:1699  this */\n      address\n        /* \"contracts/ds-auth/auth.sol\":1680:1700  src == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1680:1683  src */\n      dup4\n        /* \"contracts/ds-auth/auth.sol\":1680:1700  src == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1676:1963  if (src == address(this)) {... */\n      iszero\n      tag_28\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1723:1727  true */\n      0x1\n        /* \"contracts/ds-auth/auth.sol\":1716:1727  return true */\n      swap1\n      pop\n      jump(tag_27)\n        /* \"contracts/ds-auth/auth.sol\":1676:1963  if (src == address(this)) {... */\n    tag_28:\n        /* \"contracts/ds-auth/auth.sol\":1755:1760  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1748:1760  src == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1748:1751  src */\n      dup4\n        /* \"contracts/ds-auth/auth.sol\":1748:1760  src == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1744:1963  if (src == owner) {... */\n      iszero\n      tag_30\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1783:1787  true */\n      0x1\n        /* \"contracts/ds-auth/auth.sol\":1776:1787  return true */\n      swap1\n      pop\n      jump(tag_27)\n        /* \"contracts/ds-auth/auth.sol\":1744:1963  if (src == owner) {... */\n    tag_30:\n        /* \"contracts/ds-auth/auth.sol\":1841:1842  0 */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1808:1844  authority == DSAuthority(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1808:1817  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1808:1844  authority == DSAuthority(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1804:1963  if (authority == DSAuthority(address(0))) {... */\n      iszero\n      tag_32\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1867:1872  false */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1860:1872  return false */\n      swap1\n      pop\n      jump(tag_27)\n        /* \"contracts/ds-auth/auth.sol\":1804:1963  if (authority == DSAuthority(address(0))) {... */\n    tag_32:\n        /* \"contracts/ds-auth/auth.sol\":1910:1919  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1910:1927  authority.canCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb7009613\n        /* \"contracts/ds-auth/auth.sol\":1928:1931  src */\n      dup5\n        /* \"contracts/ds-auth/auth.sol\":1941:1945  this */\n      address\n        /* \"contracts/ds-auth/auth.sol\":1948:1951  sig */\n      dup6\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_35:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_36:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1903:1952  return authority.canCall(src, address(this), sig) */\n      swap1\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1590:1969  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n    tag_27:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820d616eb64037fe5d5fa2318a6e73bf04cd78fa2b9266794f9c213a784023a85bd0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a261071d806100a46000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100675780637a9e5e4b146100aa5780638da5cb5b146100ed578063bf7e214f14610144575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019b565b005b3480156100b657600080fd5b506100eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e6565b005b3480156100f957600080fd5b5061010261042f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015057600080fd5b50610159610455565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c9336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b151561023d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b610314336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b1515610388576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104b957600190506106eb565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561051857600190506106eb565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561057757600090506106eb565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050506040513d60208110156106d757600080fd5b810190808051906020019092919050505090505b929150505600a165627a7a72305820d616eb64037fe5d5fa2318a6e73bf04cd78fa2b9266794f9c213a784023a85bd0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x71D DUP1 PUSH2 0xA4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x144 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x47A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x314 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x47A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x518 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB7009613 DUP5 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd6 AND 0xeb PUSH5 0x37FE5D5FA 0x23 XOR 0xa6 0xe7 EXTCODESIZE CREATE 0x4c 0xd7 DUP16 LOG2 0xb9 0x26 PUSH8 0x94F9C213A784023A DUP6 0xbd STOP 0x29 ",
							"sourceMap": "967:1004:0:-;;;1067:94;8:9:-1;5:2;;;30:1;27;20:12;5:2;1067:94:0;1106:10;1098:5;;:18;;;;;;;;;;;;;;;;;;1143:10;1131:23;;;;;;;;;;;;967:1004;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100675780637a9e5e4b146100aa5780638da5cb5b146100ed578063bf7e214f14610144575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019b565b005b3480156100b657600080fd5b506100eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e6565b005b3480156100f957600080fd5b5061010261042f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015057600080fd5b50610159610455565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c9336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b151561023d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b610314336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b1515610388576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104b957600190506106eb565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561051857600190506106eb565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561057757600090506106eb565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050506040513d60208110156106d757600080fd5b810190808051906020019092919050505090505b929150505600a165627a7a72305820d616eb64037fe5d5fa2318a6e73bf04cd78fa2b9266794f9c213a784023a85bd0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x144 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x47A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x314 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x47A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x518 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB7009613 DUP5 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd6 AND 0xeb PUSH5 0x37FE5D5FA 0x23 XOR 0xa6 0xe7 EXTCODESIZE CREATE 0x4c 0xd7 DUP16 LOG2 0xb9 0x26 PUSH8 0x94F9C213A784023A DUP6 0xbd STOP 0x29 ",
							"sourceMap": "967:1004:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:130;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1167:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:167;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1303:167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1039:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1039:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1005:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1005:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:130;1508:33;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1251:6;1243:5;;:14;;;;;;;;;;;;;;;;;;1284:5;;;;;;;;;;;1272:18;;;;;;;;;;;;1167:130;:::o;1303:167::-;1508:33;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1403:10;1391:9;;:22;;;;;;;;;;;;;;;;;;1452:9;;;;;;;;;;;1428:35;;;;;;;;;;;;1303:167;:::o;1039:21::-;;;;;;;;;;;;;:::o;1005:28::-;;;;;;;;;;;;;:::o;1590:379::-;1660:4;1695;1680:20;;:3;:20;;;1676:287;;;1723:4;1716:11;;;;1676:287;1755:5;;;;;;;;;;;1748:12;;:3;:12;;;1744:219;;;1783:4;1776:11;;;;1744:219;1841:1;1808:36;;:9;;;;;;;;;;;:36;;;1804:159;;;1867:5;1860:12;;;;1804:159;1910:9;;;;;;;;;;;:17;;;1928:3;1941:4;1948:3;1910:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1910:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1910:42:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1910:42:0;;;;;;;;;;;;;;;;1903:49;;1590:379;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "364200",
								"executionCost": "21825",
								"totalCost": "386025"
							},
							"external": {
								"authority()": "508",
								"owner()": "486",
								"setAuthority(address)": "infinite",
								"setOwner(address)": "infinite"
							},
							"internal": {
								"isAuthorized(address,bytes4)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 967,
									"end": 1971,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "MSTORE"
								},
								{
									"begin": 1067,
									"end": 1161,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1067,
									"end": 1161,
									"name": "POP"
								},
								{
									"begin": 1106,
									"end": 1116,
									"name": "CALLER"
								},
								{
									"begin": 1098,
									"end": 1103,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1098,
									"end": 1103,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "EXP"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP2"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SLOAD"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP2"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "MUL"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "NOT"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "AND"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SWAP1"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP4"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "AND"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "MUL"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "OR"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SWAP1"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SSTORE"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "POP"
								},
								{
									"begin": 1143,
									"end": 1153,
									"name": "CALLER"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "AND"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "MLOAD"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "MLOAD"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "DUP1"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SWAP2"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SUB"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SWAP1"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "LOG2"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "DUP1"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "CODECOPY"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820d616eb64037fe5d5fa2318a6e73bf04cd78fa2b9266794f9c213a784023a85bd0029",
									".code": [
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "MSTORE"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "LT"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "JUMPI"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "SWAP1"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "DIV"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "AND"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "DUP1"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "13AF4035"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "EQ"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "JUMPI"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "DUP1"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "7A9E5E4B"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "EQ"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "JUMPI"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "DUP1"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "EQ"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "JUMPI"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "DUP1"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "BF7E214F"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "EQ"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "JUMPI"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "JUMPDEST"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "DUP1"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "REVERT"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SUB"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "ADD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "AND"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "ADD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP3"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "STOP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SUB"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "AND"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP3"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "STOP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP3"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MSTORE"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "ADD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SUB"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "RETURN"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP3"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MSTORE"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SUB"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "RETURN"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1251,
											"end": 1257,
											"name": "DUP1"
										},
										{
											"begin": 1243,
											"end": 1248,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1243,
											"end": 1248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "EXP"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP2"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SLOAD"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP2"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "MUL"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "NOT"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "AND"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SWAP1"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP4"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "AND"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "MUL"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "OR"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SWAP1"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SSTORE"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "POP"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SLOAD"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "EXP"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "DIV"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "AND"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "AND"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "MLOAD"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "MLOAD"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "DUP1"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SWAP2"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SUB"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SWAP1"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "LOG2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1403,
											"end": 1413,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "EXP"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SLOAD"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "MUL"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "NOT"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP4"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "MUL"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "OR"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SSTORE"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "POP"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DUP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SLOAD"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "EXP"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DIV"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "AND"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "AND"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "MLOAD"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "MLOAD"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "DUP1"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SWAP2"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SUB"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SWAP1"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "LOG2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "EXP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DIV"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "EXP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DIV"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMPDEST"
										},
										{
											"begin": 1660,
											"end": 1664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1699,
											"name": "ADDRESS"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "AND"
										},
										{
											"begin": 1680,
											"end": 1683,
											"name": "DUP4"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "AND"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "EQ"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1723,
											"end": 1727,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "SWAP1"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "POP"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "JUMP"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SLOAD"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "EXP"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "DIV"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "DUP4"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "EQ"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1783,
											"end": 1787,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "SWAP1"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "POP"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "JUMP"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "DUP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SLOAD"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "EXP"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "DIV"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "EQ"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1867,
											"end": 1872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "SWAP1"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "POP"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "JUMP"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SLOAD"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "EXP"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DIV"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "PUSH",
											"value": "B7009613"
										},
										{
											"begin": 1928,
											"end": 1931,
											"name": "DUP5"
										},
										{
											"begin": 1941,
											"end": 1945,
											"name": "ADDRESS"
										},
										{
											"begin": 1948,
											"end": 1951,
											"name": "DUP6"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP5"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MUL"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP5"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP3"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "NOT"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "NOT"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SUB"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP8"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "GAS"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "CALL"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP3"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1903,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMPDEST"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "SWAP3"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "SWAP2"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"authority()": "bf7e214f",
							"owner()": "8da5cb5b",
							"setAuthority(address)": "7a9e5e4b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.23+commit.124ca40d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ds-auth/auth.sol\":\"DSAuth\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ds-auth/auth.sol\":{\"keccak256\":\"0xc02ed2267e6475942b44a1bc837d7691dc0a9febd53cdcb9b733c75a8868c551\",\"urls\":[\"bzzr://bd3fbf232b415b118f5cefe30a3a8e6853960efa6203a205522e35ab7e474eab\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"DSAuthEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "authority",
									"type": "address"
								}
							],
							"name": "LogSetAuthority",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								}
							],
							"name": "LogSetOwner",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/ds-auth/auth.sol\":834:965  contract DSAuthEvents {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/ds-auth/auth.sol\":834:965  contract DSAuthEvents {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ds-auth/auth.sol\":834:965  contract DSAuthEvents {... */\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058200b4e5b5aa61fcf9da0cfbb368d4cb76c7bc567f580b8f510883f865bd734c8fb0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a723058200b4e5b5aa61fcf9da0cfbb368d4cb76c7bc567f580b8f510883f865bd734c8fb0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SIGNEXTEND 0x4e JUMPDEST GAS 0xa6 0x1f 0xcf SWAP14 LOG0 0xcf 0xbb CALLDATASIZE DUP14 0x4c 0xb7 PUSH13 0x7BC567F580B8F510883F865BD7 CALLVALUE 0xc8 CREATE2 STOP 0x29 ",
							"sourceMap": "834:131:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;834:131:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fd00a165627a7a723058200b4e5b5aa61fcf9da0cfbb368d4cb76c7bc567f580b8f510883f865bd734c8fb0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SIGNEXTEND 0x4e JUMPDEST GAS 0xa6 0x1f 0xcf SWAP14 LOG0 0xcf 0xbb CALLDATASIZE DUP14 0x4c 0xb7 PUSH13 0x7BC567F580B8F510883F865BD7 CALLVALUE 0xc8 CREATE2 STOP 0x29 ",
							"sourceMap": "834:131:0:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "66",
								"totalCost": "10666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 834,
									"end": 965,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "MSTORE"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "POP"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "DUP1"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "CODECOPY"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058200b4e5b5aa61fcf9da0cfbb368d4cb76c7bc567f580b8f510883f865bd734c8fb0029",
									".code": [
										{
											"begin": 834,
											"end": 965,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 834,
											"end": 965,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 834,
											"end": 965,
											"name": "MSTORE"
										},
										{
											"begin": 834,
											"end": 965,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 834,
											"end": 965,
											"name": "DUP1"
										},
										{
											"begin": 834,
											"end": 965,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.23+commit.124ca40d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ds-auth/auth.sol\":\"DSAuthEvents\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ds-auth/auth.sol\":{\"keccak256\":\"0xc02ed2267e6475942b44a1bc837d7691dc0a9febd53cdcb9b733c75a8868c551\",\"urls\":[\"bzzr://bd3fbf232b415b118f5cefe30a3a8e6853960efa6203a205522e35ab7e474eab\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"DSAuthority": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "src",
									"type": "address"
								},
								{
									"name": "dst",
									"type": "address"
								},
								{
									"name": "sig",
									"type": "bytes4"
								}
							],
							"name": "canCall",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"canCall(address,address,bytes4)": "b7009613"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/ds-math/math.sol": {
				"DSMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/ds-math/math.sol\":722:2835  contract DSMath {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/ds-math/math.sol\":722:2835  contract DSMath {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ds-math/math.sol\":722:2835  contract DSMath {... */\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058208eb26c6b6bf4d435b6609b3a5c3c549e8d5a2bd6d43459fc8710beca860de9070029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a723058208eb26c6b6bf4d435b6609b3a5c3c549e8d5a2bd6d43459fc8710beca860de9070029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP15 0xb2 PUSH13 0x6B6BF4D435B6609B3A5C3C549E DUP14 GAS 0x2b 0xd6 0xd4 CALLVALUE MSIZE 0xfc DUP8 LT 0xbe 0xca DUP7 0xd 0xe9 SMOD STOP 0x29 ",
							"sourceMap": "722:2113:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;722:2113:1;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fd00a165627a7a723058208eb26c6b6bf4d435b6609b3a5c3c549e8d5a2bd6d43459fc8710beca860de9070029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP15 0xb2 PUSH13 0x6B6BF4D435B6609B3A5C3C549E DUP14 GAS 0x2b 0xd6 0xd4 CALLVALUE MSIZE 0xfc DUP8 LT 0xbe 0xca DUP7 0xd 0xe9 SMOD STOP 0x29 ",
							"sourceMap": "722:2113:1:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "66",
								"totalCost": "10666"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"imax(int256,int256)": "infinite",
								"imin(int256,int256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"rdiv(uint256,uint256)": "infinite",
								"rmul(uint256,uint256)": "infinite",
								"rpow(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"wdiv(uint256,uint256)": "infinite",
								"wmul(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 722,
									"end": 2835,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "MSTORE"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "POP"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "DUP1"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "CODECOPY"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058208eb26c6b6bf4d435b6609b3a5c3c549e8d5a2bd6d43459fc8710beca860de9070029",
									".code": [
										{
											"begin": 722,
											"end": 2835,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 722,
											"end": 2835,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 722,
											"end": 2835,
											"name": "MSTORE"
										},
										{
											"begin": 722,
											"end": 2835,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 722,
											"end": 2835,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 2835,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.23+commit.124ca40d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ds-math/math.sol\":\"DSMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ds-math/math.sol\":{\"keccak256\":\"0x961977c4d8637627cd2426212b1e457720913e52674419e910f25741f5057a11\",\"urls\":[\"bzzr://a54443c33dae485bf186455cd58593cbb5187d41231582087d4bc99157a68396\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/ds-note/note.sol": {
				"DSNote": {
					"abi": [
						{
							"anonymous": true,
							"inputs": [
								{
									"indexed": true,
									"name": "sig",
									"type": "bytes4"
								},
								{
									"indexed": true,
									"name": "guy",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "foo",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"name": "bar",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"name": "wad",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "fax",
									"type": "bytes"
								}
							],
							"name": "LogNote",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/ds-note/note.sol\":735:1227  contract DSNote {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/ds-note/note.sol\":735:1227  contract DSNote {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ds-note/note.sol\":735:1227  contract DSNote {... */\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058202a2e01236400b106d67ebf68d0f838ebd6188db942bfe084e89beb90ad3668ae0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a723058202a2e01236400b106d67ebf68d0f838ebd6188db942bfe084e89beb90ad3668ae0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x2a 0x2e ADD 0x23 PUSH5 0xB106D67E 0xbf PUSH9 0xD0F838EBD6188DB942 0xbf 0xe0 DUP5 0xe8 SWAP12 0xeb SWAP1 0xad CALLDATASIZE PUSH9 0xAE0029000000000000 ",
							"sourceMap": "735:492:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;735:492:2;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fd00a165627a7a723058202a2e01236400b106d67ebf68d0f838ebd6188db942bfe084e89beb90ad3668ae0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x2a 0x2e ADD 0x23 PUSH5 0xB106D67E 0xbf PUSH9 0xD0F838EBD6188DB942 0xbf 0xe0 DUP5 0xe8 SWAP12 0xeb SWAP1 0xad CALLDATASIZE PUSH9 0xAE0029000000000000 ",
							"sourceMap": "735:492:2:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "66",
								"totalCost": "10666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 735,
									"end": 1227,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "MSTORE"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "POP"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "DUP1"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "CODECOPY"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058202a2e01236400b106d67ebf68d0f838ebd6188db942bfe084e89beb90ad3668ae0029",
									".code": [
										{
											"begin": 735,
											"end": 1227,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 735,
											"end": 1227,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 735,
											"end": 1227,
											"name": "MSTORE"
										},
										{
											"begin": 735,
											"end": 1227,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 735,
											"end": 1227,
											"name": "DUP1"
										},
										{
											"begin": 735,
											"end": 1227,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.23+commit.124ca40d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ds-note/note.sol\":\"DSNote\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ds-note/note.sol\":{\"keccak256\":\"0xa16a36d355ac085634345bfa5fd6165736e97403ebf59de78a2f9e3025e0bbb1\",\"urls\":[\"bzzr://c712d0b3aab1e6c2dad18d3f4e0ed1aa4bdd66eedbce3f8d5a6862b9f2f19759\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/ds-thing/thing.sol": {
				"DSThing": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "owner_",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "authority_",
									"type": "address"
								}
							],
							"name": "setAuthority",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "authority",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": true,
							"inputs": [
								{
									"indexed": true,
									"name": "sig",
									"type": "bytes4"
								},
								{
									"indexed": true,
									"name": "guy",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "foo",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"name": "bar",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"name": "wad",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "fax",
									"type": "bytes"
								}
							],
							"name": "LogNote",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "authority",
									"type": "address"
								}
							],
							"name": "LogSetAuthority",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								}
							],
							"name": "LogSetOwner",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/ds-thing/thing.sol\":870:1019  contract DSThing is DSAuth, DSNote, DSMath {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ds-auth/auth.sol\":1106:1116  msg.sender */\n  caller\n    /* \"contracts/ds-auth/auth.sol\":1098:1103  owner */\n  0x1\n  0x0\n    /* \"contracts/ds-auth/auth.sol\":1098:1116  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ds-auth/auth.sol\":1143:1153  msg.sender */\n  caller\n    /* \"contracts/ds-auth/auth.sol\":1131:1154  LogSetOwner(msg.sender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/ds-thing/thing.sol\":870:1019  contract DSThing is DSAuth, DSNote, DSMath {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ds-thing/thing.sol\":870:1019  contract DSThing is DSAuth, DSNote, DSMath {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x13af4035\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x7a9e5e4b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbf7e214f\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n      pop\n      tag_7\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n      pop\n      tag_10\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_11)\n    tag_10:\n      stop\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n      pop\n      tag_13\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n      pop\n      tag_16\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n    tag_8:\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_19\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_20\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_19:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_21\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"contracts/ds-auth/auth.sol\":1251:1257  owner_ */\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1243:1248  owner */\n      0x1\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1243:1257  owner = owner_ */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1284:1289  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1272:1290  LogSetOwner(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n      pop\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n    tag_11:\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_24\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_20\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_24:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_25\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"contracts/ds-auth/auth.sol\":1403:1413  authority_ */\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1391:1400  authority */\n      0x0\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1391:1413  authority = authority_ */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1452:1461  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1428:1463  LogSetAuthority(address(authority)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n      pop\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n    tag_14:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n    tag_17:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1590:1969  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n    tag_20:\n        /* \"contracts/ds-auth/auth.sol\":1660:1664  bool */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1695:1699  this */\n      address\n        /* \"contracts/ds-auth/auth.sol\":1680:1700  src == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1680:1683  src */\n      dup4\n        /* \"contracts/ds-auth/auth.sol\":1680:1700  src == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1676:1963  if (src == address(this)) {... */\n      iszero\n      tag_28\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1723:1727  true */\n      0x1\n        /* \"contracts/ds-auth/auth.sol\":1716:1727  return true */\n      swap1\n      pop\n      jump(tag_27)\n        /* \"contracts/ds-auth/auth.sol\":1676:1963  if (src == address(this)) {... */\n    tag_28:\n        /* \"contracts/ds-auth/auth.sol\":1755:1760  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1748:1760  src == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1748:1751  src */\n      dup4\n        /* \"contracts/ds-auth/auth.sol\":1748:1760  src == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1744:1963  if (src == owner) {... */\n      iszero\n      tag_30\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1783:1787  true */\n      0x1\n        /* \"contracts/ds-auth/auth.sol\":1776:1787  return true */\n      swap1\n      pop\n      jump(tag_27)\n        /* \"contracts/ds-auth/auth.sol\":1744:1963  if (src == owner) {... */\n    tag_30:\n        /* \"contracts/ds-auth/auth.sol\":1841:1842  0 */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1808:1844  authority == DSAuthority(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1808:1817  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1808:1844  authority == DSAuthority(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1804:1963  if (authority == DSAuthority(address(0))) {... */\n      iszero\n      tag_32\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1867:1872  false */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1860:1872  return false */\n      swap1\n      pop\n      jump(tag_27)\n        /* \"contracts/ds-auth/auth.sol\":1804:1963  if (authority == DSAuthority(address(0))) {... */\n    tag_32:\n        /* \"contracts/ds-auth/auth.sol\":1910:1919  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1910:1927  authority.canCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb7009613\n        /* \"contracts/ds-auth/auth.sol\":1928:1931  src */\n      dup5\n        /* \"contracts/ds-auth/auth.sol\":1941:1945  this */\n      address\n        /* \"contracts/ds-auth/auth.sol\":1948:1951  sig */\n      dup6\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_35:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_36:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1903:1952  return authority.canCall(src, address(this), sig) */\n      swap1\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1590:1969  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n    tag_27:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820bb7db05e02bd752e455f8967e34078e3c63e65c8e29e8f28e2dfcd8fdb442fab0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a261071d806100976000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100675780637a9e5e4b146100aa5780638da5cb5b146100ed578063bf7e214f14610144575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019b565b005b3480156100b657600080fd5b506100eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e6565b005b3480156100f957600080fd5b5061010261042f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015057600080fd5b50610159610455565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c9336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b151561023d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b610314336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b1515610388576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104b957600190506106eb565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561051857600190506106eb565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561057757600090506106eb565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050506040513d60208110156106d757600080fd5b810190808051906020019092919050505090505b929150505600a165627a7a72305820bb7db05e02bd752e455f8967e34078e3c63e65c8e29e8f28e2dfcd8fdb442fab0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x71D DUP1 PUSH2 0x97 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x144 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x47A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x314 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x47A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x518 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB7009613 DUP5 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xbb PUSH30 0xB05E02BD752E455F8967E34078E3C63E65C8E29E8F28E2DFCD8FDB442FAB STOP 0x29 ",
							"sourceMap": "870:149:3:-;;;1106:10:0;1098:5;;:18;;;;;;;;;;;;;;;;;;1143:10;1131:23;;;;;;;;;;;;870:149:3;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100675780637a9e5e4b146100aa5780638da5cb5b146100ed578063bf7e214f14610144575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019b565b005b3480156100b657600080fd5b506100eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e6565b005b3480156100f957600080fd5b5061010261042f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015057600080fd5b50610159610455565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c9336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b151561023d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b610314336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b1515610388576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104b957600190506106eb565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561051857600190506106eb565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561057757600090506106eb565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050506040513d60208110156106d757600080fd5b810190808051906020019092919050505090505b929150505600a165627a7a72305820bb7db05e02bd752e455f8967e34078e3c63e65c8e29e8f28e2dfcd8fdb442fab0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x144 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x47A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x314 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x47A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x518 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB7009613 DUP5 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xbb PUSH30 0xB05E02BD752E455F8967E34078E3C63E65C8E29E8F28E2DFCD8FDB442FAB STOP 0x29 ",
							"sourceMap": "870:149:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:130:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1167:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:167;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1303:167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1039:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1039:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1005:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1005:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:130;1508:33;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1251:6;1243:5;;:14;;;;;;;;;;;;;;;;;;1284:5;;;;;;;;;;;1272:18;;;;;;;;;;;;1167:130;:::o;1303:167::-;1508:33;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1403:10;1391:9;;:22;;;;;;;;;;;;;;;;;;1452:9;;;;;;;;;;;1428:35;;;;;;;;;;;;1303:167;:::o;1039:21::-;;;;;;;;;;;;;:::o;1005:28::-;;;;;;;;;;;;;:::o;1590:379::-;1660:4;1695;1680:20;;:3;:20;;;1676:287;;;1723:4;1716:11;;;;1676:287;1755:5;;;;;;;;;;;1748:12;;:3;:12;;;1744:219;;;1783:4;1776:11;;;;1744:219;1841:1;1808:36;;:9;;;;;;;;;;;:36;;;1804:159;;;1867:5;1860:12;;;;1804:159;1910:9;;;;;;;;;;;:17;;;1928:3;1941:4;1948:3;1910:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1910:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1910:42:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1910:42:0;;;;;;;;;;;;;;;;1903:49;;1590:379;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "364200",
								"executionCost": "21801",
								"totalCost": "386001"
							},
							"external": {
								"authority()": "508",
								"owner()": "486",
								"setAuthority(address)": "infinite",
								"setOwner(address)": "infinite"
							},
							"internal": {
								"S(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 870,
									"end": 1019,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "MSTORE"
								},
								{
									"begin": 1106,
									"end": 1116,
									"name": "CALLER"
								},
								{
									"begin": 1098,
									"end": 1103,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1098,
									"end": 1103,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "EXP"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP2"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SLOAD"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP2"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "MUL"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "NOT"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "AND"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SWAP1"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP4"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "AND"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "MUL"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "OR"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SWAP1"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SSTORE"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "POP"
								},
								{
									"begin": 1143,
									"end": 1153,
									"name": "CALLER"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "AND"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "MLOAD"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "MLOAD"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "DUP1"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SWAP2"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SUB"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SWAP1"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "LOG2"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "DUP1"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "CODECOPY"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820bb7db05e02bd752e455f8967e34078e3c63e65c8e29e8f28e2dfcd8fdb442fab0029",
									".code": [
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "MSTORE"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "LT"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "JUMPI"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "SWAP1"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "DIV"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "AND"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "13AF4035"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "EQ"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "JUMPI"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "7A9E5E4B"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "EQ"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "JUMPI"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "EQ"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "JUMPI"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "BF7E214F"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "EQ"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "JUMPI"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "JUMPDEST"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "REVERT"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SUB"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "ADD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "AND"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "ADD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP3"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "STOP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SUB"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "AND"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP3"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "STOP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP3"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MSTORE"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "ADD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SUB"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "RETURN"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP3"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MSTORE"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SUB"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "RETURN"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1251,
											"end": 1257,
											"name": "DUP1"
										},
										{
											"begin": 1243,
											"end": 1248,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1243,
											"end": 1248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "EXP"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP2"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SLOAD"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP2"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "MUL"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "NOT"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "AND"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SWAP1"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP4"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "AND"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "MUL"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "OR"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SWAP1"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SSTORE"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "POP"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SLOAD"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "EXP"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "DIV"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "AND"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "AND"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "MLOAD"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "MLOAD"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "DUP1"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SWAP2"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SUB"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SWAP1"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "LOG2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1403,
											"end": 1413,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "EXP"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SLOAD"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "MUL"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "NOT"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP4"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "MUL"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "OR"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SSTORE"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "POP"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DUP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SLOAD"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "EXP"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DIV"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "AND"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "AND"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "MLOAD"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "MLOAD"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "DUP1"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SWAP2"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SUB"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SWAP1"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "LOG2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "EXP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DIV"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "EXP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DIV"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMPDEST"
										},
										{
											"begin": 1660,
											"end": 1664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1699,
											"name": "ADDRESS"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "AND"
										},
										{
											"begin": 1680,
											"end": 1683,
											"name": "DUP4"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "AND"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "EQ"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1723,
											"end": 1727,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "SWAP1"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "POP"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "JUMP"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SLOAD"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "EXP"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "DIV"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "DUP4"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "EQ"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1783,
											"end": 1787,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "SWAP1"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "POP"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "JUMP"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "DUP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SLOAD"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "EXP"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "DIV"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "EQ"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1867,
											"end": 1872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "SWAP1"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "POP"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "JUMP"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SLOAD"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "EXP"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DIV"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "PUSH",
											"value": "B7009613"
										},
										{
											"begin": 1928,
											"end": 1931,
											"name": "DUP5"
										},
										{
											"begin": 1941,
											"end": 1945,
											"name": "ADDRESS"
										},
										{
											"begin": 1948,
											"end": 1951,
											"name": "DUP6"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP5"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MUL"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP5"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP3"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "NOT"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "NOT"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SUB"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP8"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "GAS"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "CALL"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP3"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1903,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMPDEST"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "SWAP3"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "SWAP2"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"authority()": "bf7e214f",
							"owner()": "8da5cb5b",
							"setAuthority(address)": "7a9e5e4b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.23+commit.124ca40d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ds-thing/thing.sol\":\"DSThing\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ds-auth/auth.sol\":{\"keccak256\":\"0xc02ed2267e6475942b44a1bc837d7691dc0a9febd53cdcb9b733c75a8868c551\",\"urls\":[\"bzzr://bd3fbf232b415b118f5cefe30a3a8e6853960efa6203a205522e35ab7e474eab\"]},\"contracts/ds-math/math.sol\":{\"keccak256\":\"0x961977c4d8637627cd2426212b1e457720913e52674419e910f25741f5057a11\",\"urls\":[\"bzzr://a54443c33dae485bf186455cd58593cbb5187d41231582087d4bc99157a68396\"]},\"contracts/ds-note/note.sol\":{\"keccak256\":\"0xa16a36d355ac085634345bfa5fd6165736e97403ebf59de78a2f9e3025e0bbb1\",\"urls\":[\"bzzr://c712d0b3aab1e6c2dad18d3f4e0ed1aa4bdd66eedbce3f8d5a6862b9f2f19759\"]},\"contracts/ds-thing/thing.sol\":{\"keccak256\":\"0xd817e0f1080f241ec988c41287ad39700e0167690c283b0f7f238da8721a2595\",\"urls\":[\"bzzr://3dcfb82881d7931ba173dfd75267c126b4a430a347b7cd9ad26730fe95e0255a\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/vox.sol": {
				"SaiVox": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "prod",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "owner_",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "era",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "how",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "par",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "ray",
									"type": "uint256"
								}
							],
							"name": "tell",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "way",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "authority_",
									"type": "address"
								}
							],
							"name": "setAuthority",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "param",
									"type": "bytes32"
								},
								{
									"name": "val",
									"type": "uint256"
								}
							],
							"name": "mold",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "fix",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "ray",
									"type": "uint256"
								}
							],
							"name": "tune",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "authority",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "tau",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "par_",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": true,
							"inputs": [
								{
									"indexed": true,
									"name": "sig",
									"type": "bytes4"
								},
								{
									"indexed": true,
									"name": "guy",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "foo",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"name": "bar",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"name": "wad",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "fax",
									"type": "bytes"
								}
							],
							"name": "LogNote",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "authority",
									"type": "address"
								}
							],
							"name": "LogSetAuthority",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								}
							],
							"name": "LogSetOwner",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/vox.sol\":934:2421  contract SaiVox is DSThing {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/vox.sol\":1085:1195  function SaiVox(uint par_) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/vox.sol\":1085:1195  function SaiVox(uint par_) public {... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/ds-auth/auth.sol\":1106:1116  msg.sender */\n  caller\n    /* \"contracts/ds-auth/auth.sol\":1098:1103  owner */\n  0x1\n  0x0\n    /* \"contracts/ds-auth/auth.sol\":1098:1116  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ds-auth/auth.sol\":1143:1153  msg.sender */\n  caller\n    /* \"contracts/ds-auth/auth.sol\":1131:1154  LogSetOwner(msg.sender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/vox.sol\":1142:1146  par_ */\n  dup1\n    /* \"contracts/vox.sol\":1136:1139  fix */\n  0x4\n    /* \"contracts/vox.sol\":1136:1146  fix = par_ */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/vox.sol\":1129:1133  _par */\n  0x2\n    /* \"contracts/vox.sol\":1129:1146  _par = fix = par_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ds-math/math.sol\":1543:1551  10 ** 27 */\n  0x33b2e3c9fd0803ce8000000\n    /* \"contracts/vox.sol\":1156:1160  _way */\n  0x3\n    /* \"contracts/vox.sol\":1156:1166  _way = RAY */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/vox.sol\":1183:1188  era() */\n  tag_6\n    /* \"contracts/vox.sol\":1183:1186  era */\n  mul(0x100000000, tag_7)\n    /* \"contracts/vox.sol\":1183:1188  era() */\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_6:\n    /* \"contracts/vox.sol\":1176:1179  tau */\n  0x6\n    /* \"contracts/vox.sol\":1176:1188  tau  = era() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/vox.sol\":1085:1195  function SaiVox(uint par_) public {... */\n  pop\n    /* \"contracts/vox.sol\":934:2421  contract SaiVox is DSThing {... */\n  jump(tag_8)\n    /* \"contracts/vox.sol\":1201:1282  function era() public view returns (uint) {... */\ntag_7:\n    /* \"contracts/vox.sol\":1237:1241  uint */\n  0x0\n    /* \"contracts/vox.sol\":1260:1275  block.timestamp */\n  timestamp\n    /* \"contracts/vox.sol\":1253:1275  return block.timestamp */\n  swap1\n  pop\n    /* \"contracts/vox.sol\":1201:1282  function era() public view returns (uint) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/vox.sol\":934:2421  contract SaiVox is DSThing {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/vox.sol\":934:2421  contract SaiVox is DSThing {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x302c688\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x13af4035\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x143e55e0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3a4a4233\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x495d32cb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x55deb8fc\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5d6542af\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7a9e5e4b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x92b0d721\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa551878e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbecda0ea\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbf7e214f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xcfc4af55\n      eq\n      tag_15\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/vox.sol\":1759:2107  function prod() public note {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"contracts/vox.sol\":1759:2107  function prod() public note {... */\n      pop\n      tag_17\n      jump(tag_18)\n    tag_17:\n      stop\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_19:\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n      pop\n      tag_20\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_21)\n    tag_20:\n      stop\n        /* \"contracts/vox.sol\":1201:1282  function era() public view returns (uint) {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"contracts/vox.sol\":1201:1282  function era() public view returns (uint) {... */\n      pop\n      tag_23\n      jump(tag_24)\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vox.sol\":1032:1052  uint256  public  how */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"contracts/vox.sol\":1032:1052  uint256  public  how */\n      pop\n      tag_26\n      jump(tag_27)\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vox.sol\":1435:1516  function par() public returns (uint) {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"contracts/vox.sol\":1435:1516  function par() public returns (uint) {... */\n      pop\n      tag_29\n      jump(tag_30)\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vox.sol\":1608:1678  function tell(uint256 ray) public note auth {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"contracts/vox.sol\":1608:1678  function tell(uint256 ray) public note auth {... */\n      pop\n      tag_32\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_33)\n    tag_32:\n      stop\n        /* \"contracts/vox.sol\":1521:1602  function way() public returns (uint) {... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"contracts/vox.sol\":1521:1602  function way() public returns (uint) {... */\n      pop\n      tag_35\n      jump(tag_36)\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n      pop\n      tag_38\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_39)\n    tag_38:\n      stop\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n      pop\n      tag_41\n      jump(tag_42)\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vox.sol\":1288:1391  function mold(bytes32 param, uint val) public note auth {... */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_43:\n        /* \"contracts/vox.sol\":1288:1391  function mold(bytes32 param, uint val) public note auth {... */\n      pop\n      tag_44\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_45)\n    tag_44:\n      stop\n        /* \"contracts/vox.sol\":1006:1026  uint256  public  fix */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n        /* \"contracts/vox.sol\":1006:1026  uint256  public  fix */\n      pop\n      tag_47\n      jump(tag_48)\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vox.sol\":1683:1753  function tune(uint256 ray) public note auth {... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"contracts/vox.sol\":1683:1753  function tune(uint256 ray) public note auth {... */\n      pop\n      tag_50\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_51)\n    tag_50:\n      stop\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_52:\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n      pop\n      tag_53\n      jump(tag_54)\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vox.sol\":1058:1078  uint256  public  tau */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_55:\n        /* \"contracts/vox.sol\":1058:1078  uint256  public  tau */\n      pop\n      tag_56\n      jump(tag_57)\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vox.sol\":1759:2107  function prod() public note {... */\n    tag_18:\n        /* \"contracts/vox.sol\":1797:1804  var age */\n      0x0\n        /* \"contracts/vox.sol\":2014:2021  var wag */\n      dup1\n        /* \"contracts/ds-note/note.sol\":1003:1014  bytes32 foo */\n      0x0\n        /* \"contracts/ds-note/note.sol\":1024:1035  bytes32 bar */\n      dup1\n        /* \"contracts/ds-note/note.sol\":1089:1090  4 */\n      0x4\n        /* \"contracts/ds-note/note.sol\":1076:1091  calldataload(4) */\n      calldataload\n        /* \"contracts/ds-note/note.sol\":1069:1091  foo := calldataload(4) */\n      swap2\n      pop\n        /* \"contracts/ds-note/note.sol\":1124:1126  36 */\n      0x24\n        /* \"contracts/ds-note/note.sol\":1111:1127  calldataload(36) */\n      calldataload\n        /* \"contracts/ds-note/note.sol\":1104:1127  bar := calldataload(36) */\n      swap1\n      pop\n        /* \"contracts/ds-note/note.sol\":1181:1184  bar */\n      dup1\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0x0)\n      and\n        /* \"contracts/ds-note/note.sol\":1176:1179  foo */\n      dup3\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0x0)\n      and\n        /* \"contracts/ds-note/note.sol\":1164:1174  msg.sender */\n      caller\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-note/note.sol\":1155:1162  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ds-note/note.sol\":1186:1195  msg.value */\n      callvalue\n        /* \"contracts/ds-note/note.sol\":1197:1205  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/vox.sol\":1815:1818  tau */\n      sload(0x6)\n        /* \"contracts/vox.sol\":1807:1812  era() */\n      tag_60\n        /* \"contracts/vox.sol\":1807:1810  era */\n      tag_24\n        /* \"contracts/vox.sol\":1807:1812  era() */\n      jump\t// in\n    tag_60:\n        /* \"contracts/vox.sol\":1807:1818  era() - tau */\n      sub\n        /* \"contracts/vox.sol\":1797:1818  var age = era() - tau */\n      swap4\n      pop\n        /* \"contracts/vox.sol\":1839:1840  0 */\n      0x0\n        /* \"contracts/vox.sol\":1832:1835  age */\n      dup5\n        /* \"contracts/vox.sol\":1832:1840  age == 0 */\n      eq\n        /* \"contracts/vox.sol\":1828:1849  if (age == 0) return; */\n      iszero\n      tag_61\n      jumpi\n        /* \"contracts/vox.sol\":1842:1849  return; */\n      jump(tag_59)\n        /* \"contracts/vox.sol\":1828:1849  if (age == 0) return; */\n    tag_61:\n        /* \"contracts/vox.sol\":1878:1883  era() */\n      tag_62\n        /* \"contracts/vox.sol\":1878:1881  era */\n      tag_24\n        /* \"contracts/vox.sol\":1878:1883  era() */\n      jump\t// in\n    tag_62:\n        /* \"contracts/vox.sol\":1872:1875  tau */\n      0x6\n        /* \"contracts/vox.sol\":1872:1883  tau = era() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-math/math.sol\":1543:1551  10 ** 27 */\n      0x33b2e3c9fd0803ce8000000\n        /* \"contracts/vox.sol\":1898:1902  _way */\n      sload(0x3)\n        /* \"contracts/vox.sol\":1898:1909  _way != RAY */\n      eq\n      iszero\n        /* \"contracts/vox.sol\":1894:1945  if (_way != RAY) _par = rmul(_par, rpow(_way, age)) */\n      iszero\n      tag_63\n      jumpi\n        /* \"contracts/vox.sol\":1918:1945  rmul(_par, rpow(_way, age)) */\n      tag_64\n        /* \"contracts/vox.sol\":1923:1927  _par */\n      sload(0x2)\n        /* \"contracts/vox.sol\":1929:1944  rpow(_way, age) */\n      tag_65\n        /* \"contracts/vox.sol\":1934:1938  _way */\n      sload(0x3)\n        /* \"contracts/vox.sol\":1940:1943  age */\n      dup8\n        /* \"contracts/vox.sol\":1929:1933  rpow */\n      tag_66\n        /* \"contracts/vox.sol\":1929:1944  rpow(_way, age) */\n      jump\t// in\n    tag_65:\n        /* \"contracts/vox.sol\":1918:1922  rmul */\n      tag_67\n        /* \"contracts/vox.sol\":1918:1945  rmul(_par, rpow(_way, age)) */\n      jump\t// in\n    tag_64:\n        /* \"contracts/vox.sol\":1911:1915  _par */\n      0x2\n        /* \"contracts/vox.sol\":1911:1945  _par = rmul(_par, rpow(_way, age)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/vox.sol\":1894:1945  if (_way != RAY) _par = rmul(_par, rpow(_way, age)) */\n    tag_63:\n        /* \"contracts/vox.sol\":1981:1982  0 */\n      0x0\n        /* \"contracts/vox.sol\":1974:1977  how */\n      sload(0x5)\n        /* \"contracts/vox.sol\":1974:1982  how == 0 */\n      eq\n        /* \"contracts/vox.sol\":1970:1991  if (how == 0) return; */\n      iszero\n      tag_68\n      jumpi\n        /* \"contracts/vox.sol\":1984:1991  return; */\n      jump(tag_59)\n        /* \"contracts/vox.sol\":1970:1991  if (how == 0) return; */\n    tag_68:\n        /* \"contracts/vox.sol\":2037:2040  age */\n      dup4\n        /* \"contracts/vox.sol\":2031:2034  how */\n      sload(0x5)\n        /* \"contracts/vox.sol\":2031:2040  how * age */\n      mul\n        /* \"contracts/vox.sol\":2014:2041  var wag = int128(how * age) */\n      swap3\n      pop\n        /* \"contracts/vox.sol\":2058:2100  inj(prj(_way) + (fix < _par ? wag : -wag)) */\n      tag_69\n        /* \"contracts/vox.sol\":2081:2085  _par */\n      sload(0x2)\n        /* \"contracts/vox.sol\":2075:2078  fix */\n      sload(0x4)\n        /* \"contracts/vox.sol\":2075:2085  fix < _par */\n      lt\n        /* \"contracts/vox.sol\":2075:2098  fix < _par ? wag : -wag */\n      tag_70\n      jumpi\n        /* \"contracts/vox.sol\":2095:2098  wag */\n      dup4\n        /* \"contracts/vox.sol\":2094:2098  -wag */\n      0x0\n      sub\n        /* \"contracts/vox.sol\":2075:2098  fix < _par ? wag : -wag */\n      jump(tag_71)\n    tag_70:\n        /* \"contracts/vox.sol\":2088:2091  wag */\n      dup4\n        /* \"contracts/vox.sol\":2075:2098  fix < _par ? wag : -wag */\n    tag_71:\n        /* \"contracts/vox.sol\":2062:2071  prj(_way) */\n      tag_72\n        /* \"contracts/vox.sol\":2066:2070  _way */\n      sload(0x3)\n        /* \"contracts/vox.sol\":2062:2065  prj */\n      tag_73\n        /* \"contracts/vox.sol\":2062:2071  prj(_way) */\n      jump\t// in\n    tag_72:\n        /* \"contracts/vox.sol\":2062:2099  prj(_way) + (fix < _par ? wag : -wag) */\n      add\n        /* \"contracts/vox.sol\":2058:2061  inj */\n      tag_74\n        /* \"contracts/vox.sol\":2058:2100  inj(prj(_way) + (fix < _par ? wag : -wag)) */\n      jump\t// in\n    tag_69:\n        /* \"contracts/vox.sol\":2051:2055  _way */\n      0x3\n        /* \"contracts/vox.sol\":2051:2100  _way = inj(prj(_way) + (fix < _par ? wag : -wag)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-note/note.sol\":1217:1218  _ */\n    tag_59:\n        /* \"contracts/vox.sol\":1759:2107  function prod() public note {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n    tag_21:\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_76\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_77\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_78\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/ds-auth/auth.sol\":1251:1257  owner_ */\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1243:1248  owner */\n      0x1\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1243:1257  owner = owner_ */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1284:1289  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1272:1290  LogSetOwner(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n      pop\n      jump\t// out\n        /* \"contracts/vox.sol\":1201:1282  function era() public view returns (uint) {... */\n    tag_24:\n        /* \"contracts/vox.sol\":1237:1241  uint */\n      0x0\n        /* \"contracts/vox.sol\":1260:1275  block.timestamp */\n      timestamp\n        /* \"contracts/vox.sol\":1253:1275  return block.timestamp */\n      swap1\n      pop\n        /* \"contracts/vox.sol\":1201:1282  function era() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/vox.sol\":1032:1052  uint256  public  how */\n    tag_27:\n      sload(0x5)\n      dup2\n      jump\t// out\n        /* \"contracts/vox.sol\":1435:1516  function par() public returns (uint) {... */\n    tag_30:\n        /* \"contracts/vox.sol\":1466:1470  uint */\n      0x0\n        /* \"contracts/vox.sol\":1482:1488  prod() */\n      tag_82\n        /* \"contracts/vox.sol\":1482:1486  prod */\n      tag_18\n        /* \"contracts/vox.sol\":1482:1488  prod() */\n      jump\t// in\n    tag_82:\n        /* \"contracts/vox.sol\":1505:1509  _par */\n      sload(0x2)\n        /* \"contracts/vox.sol\":1498:1509  return _par */\n      swap1\n      pop\n        /* \"contracts/vox.sol\":1435:1516  function par() public returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/vox.sol\":1608:1678  function tell(uint256 ray) public note auth {... */\n    tag_33:\n        /* \"contracts/ds-note/note.sol\":1003:1014  bytes32 foo */\n      0x0\n        /* \"contracts/ds-note/note.sol\":1024:1035  bytes32 bar */\n      dup1\n        /* \"contracts/ds-note/note.sol\":1089:1090  4 */\n      0x4\n        /* \"contracts/ds-note/note.sol\":1076:1091  calldataload(4) */\n      calldataload\n        /* \"contracts/ds-note/note.sol\":1069:1091  foo := calldataload(4) */\n      swap2\n      pop\n        /* \"contracts/ds-note/note.sol\":1124:1126  36 */\n      0x24\n        /* \"contracts/ds-note/note.sol\":1111:1127  calldataload(36) */\n      calldataload\n        /* \"contracts/ds-note/note.sol\":1104:1127  bar := calldataload(36) */\n      swap1\n      pop\n        /* \"contracts/ds-note/note.sol\":1181:1184  bar */\n      dup1\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0x0)\n      and\n        /* \"contracts/ds-note/note.sol\":1176:1179  foo */\n      dup3\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0x0)\n      and\n        /* \"contracts/ds-note/note.sol\":1164:1174  msg.sender */\n      caller\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-note/note.sol\":1155:1162  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ds-note/note.sol\":1186:1195  msg.value */\n      callvalue\n        /* \"contracts/ds-note/note.sol\":1197:1205  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_85\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_77\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_85:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_86\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"contracts/vox.sol\":1668:1671  ray */\n      dup3\n        /* \"contracts/vox.sol\":1662:1665  fix */\n      0x4\n        /* \"contracts/vox.sol\":1662:1671  fix = ray */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/vox.sol\":1608:1678  function tell(uint256 ray) public note auth {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vox.sol\":1521:1602  function way() public returns (uint) {... */\n    tag_36:\n        /* \"contracts/vox.sol\":1552:1556  uint */\n      0x0\n        /* \"contracts/vox.sol\":1568:1574  prod() */\n      tag_89\n        /* \"contracts/vox.sol\":1568:1572  prod */\n      tag_18\n        /* \"contracts/vox.sol\":1568:1574  prod() */\n      jump\t// in\n    tag_89:\n        /* \"contracts/vox.sol\":1591:1595  _way */\n      sload(0x3)\n        /* \"contracts/vox.sol\":1584:1595  return _way */\n      swap1\n      pop\n        /* \"contracts/vox.sol\":1521:1602  function way() public returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n    tag_39:\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_91\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_77\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_92\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"contracts/ds-auth/auth.sol\":1403:1413  authority_ */\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1391:1400  authority */\n      0x0\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1391:1413  authority = authority_ */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1452:1461  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1428:1463  LogSetAuthority(address(authority)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n      pop\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n    tag_42:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/vox.sol\":1288:1391  function mold(bytes32 param, uint val) public note auth {... */\n    tag_45:\n        /* \"contracts/ds-note/note.sol\":1003:1014  bytes32 foo */\n      0x0\n        /* \"contracts/ds-note/note.sol\":1024:1035  bytes32 bar */\n      dup1\n        /* \"contracts/ds-note/note.sol\":1089:1090  4 */\n      0x4\n        /* \"contracts/ds-note/note.sol\":1076:1091  calldataload(4) */\n      calldataload\n        /* \"contracts/ds-note/note.sol\":1069:1091  foo := calldataload(4) */\n      swap2\n      pop\n        /* \"contracts/ds-note/note.sol\":1124:1126  36 */\n      0x24\n        /* \"contracts/ds-note/note.sol\":1111:1127  calldataload(36) */\n      calldataload\n        /* \"contracts/ds-note/note.sol\":1104:1127  bar := calldataload(36) */\n      swap1\n      pop\n        /* \"contracts/ds-note/note.sol\":1181:1184  bar */\n      dup1\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0x0)\n      and\n        /* \"contracts/ds-note/note.sol\":1176:1179  foo */\n      dup3\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0x0)\n      and\n        /* \"contracts/ds-note/note.sol\":1164:1174  msg.sender */\n      caller\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-note/note.sol\":1155:1162  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ds-note/note.sol\":1186:1195  msg.value */\n      callvalue\n        /* \"contracts/ds-note/note.sol\":1197:1205  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_96\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_77\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_97\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"contracts/vox.sol\":1358:1372  param == 'way' */\n      0x7761790000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/vox.sol\":1358:1363  param */\n      dup5\n        /* \"contracts/vox.sol\":1358:1372  param == 'way' */\n      not(0x0)\n      and\n      eq\n        /* \"contracts/vox.sol\":1354:1384  if (param == 'way') _way = val */\n      iszero\n      tag_99\n      jumpi\n        /* \"contracts/vox.sol\":1381:1384  val */\n      dup3\n        /* \"contracts/vox.sol\":1374:1378  _way */\n      0x3\n        /* \"contracts/vox.sol\":1374:1384  _way = val */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/vox.sol\":1354:1384  if (param == 'way') _way = val */\n    tag_99:\n        /* \"contracts/vox.sol\":1288:1391  function mold(bytes32 param, uint val) public note auth {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vox.sol\":1006:1026  uint256  public  fix */\n    tag_48:\n      sload(0x4)\n      dup2\n      jump\t// out\n        /* \"contracts/vox.sol\":1683:1753  function tune(uint256 ray) public note auth {... */\n    tag_51:\n        /* \"contracts/ds-note/note.sol\":1003:1014  bytes32 foo */\n      0x0\n        /* \"contracts/ds-note/note.sol\":1024:1035  bytes32 bar */\n      dup1\n        /* \"contracts/ds-note/note.sol\":1089:1090  4 */\n      0x4\n        /* \"contracts/ds-note/note.sol\":1076:1091  calldataload(4) */\n      calldataload\n        /* \"contracts/ds-note/note.sol\":1069:1091  foo := calldataload(4) */\n      swap2\n      pop\n        /* \"contracts/ds-note/note.sol\":1124:1126  36 */\n      0x24\n        /* \"contracts/ds-note/note.sol\":1111:1127  calldataload(36) */\n      calldataload\n        /* \"contracts/ds-note/note.sol\":1104:1127  bar := calldataload(36) */\n      swap1\n      pop\n        /* \"contracts/ds-note/note.sol\":1181:1184  bar */\n      dup1\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0x0)\n      and\n        /* \"contracts/ds-note/note.sol\":1176:1179  foo */\n      dup3\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0x0)\n      and\n        /* \"contracts/ds-note/note.sol\":1164:1174  msg.sender */\n      caller\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-note/note.sol\":1155:1162  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ds-note/note.sol\":1186:1195  msg.value */\n      callvalue\n        /* \"contracts/ds-note/note.sol\":1197:1205  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_102\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_77\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_103\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"contracts/vox.sol\":1743:1746  ray */\n      dup3\n        /* \"contracts/vox.sol\":1737:1740  how */\n      0x5\n        /* \"contracts/vox.sol\":1737:1746  how = ray */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/vox.sol\":1683:1753  function tune(uint256 ray) public note auth {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n    tag_54:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/vox.sol\":1058:1078  uint256  public  tau */\n    tag_57:\n      sload(0x6)\n      dup2\n      jump\t// out\n        /* \"contracts/ds-math/math.sol\":2576:2833  function rpow(uint x, uint n) internal pure returns (uint z) {... */\n    tag_66:\n        /* \"contracts/ds-math/math.sol\":2629:2635  uint z */\n      0x0\n        /* \"contracts/ds-math/math.sol\":2660:2661  0 */\n      dup1\n        /* \"contracts/ds-math/math.sol\":2655:2656  2 */\n      0x2\n        /* \"contracts/ds-math/math.sol\":2651:2652  n */\n      dup4\n        /* \"contracts/ds-math/math.sol\":2651:2656  n % 2 */\n      dup2\n      iszero\n      iszero\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      mod\n        /* \"contracts/ds-math/math.sol\":2651:2661  n % 2 != 0 */\n      eq\n      iszero\n        /* \"contracts/ds-math/math.sol\":2651:2671  n % 2 != 0 ? x : RAY */\n      tag_107\n      jumpi\n        /* \"contracts/ds-math/math.sol\":1543:1551  10 ** 27 */\n      0x33b2e3c9fd0803ce8000000\n        /* \"contracts/ds-math/math.sol\":2651:2671  n % 2 != 0 ? x : RAY */\n      jump(tag_108)\n    tag_107:\n        /* \"contracts/ds-math/math.sol\":2664:2665  x */\n      dup3\n        /* \"contracts/ds-math/math.sol\":2651:2671  n % 2 != 0 ? x : RAY */\n    tag_108:\n        /* \"contracts/ds-math/math.sol\":2647:2671  z = n % 2 != 0 ? x : RAY */\n      swap1\n      pop\n        /* \"contracts/ds-math/math.sol\":2692:2693  2 */\n      0x2\n        /* \"contracts/ds-math/math.sol\":2687:2693  n /= 2 */\n      dup3\n      dup2\n      iszero\n      iszero\n      tag_112\n      jumpi\n      invalid\n    tag_112:\n      div\n      swap2\n      pop\n        /* \"contracts/ds-math/math.sol\":2682:2827  for (n /= 2; n != 0; n /= 2) {... */\n    tag_109:\n        /* \"contracts/ds-math/math.sol\":2700:2701  0 */\n      0x0\n        /* \"contracts/ds-math/math.sol\":2695:2696  n */\n      dup3\n        /* \"contracts/ds-math/math.sol\":2695:2701  n != 0 */\n      eq\n      iszero\n        /* \"contracts/ds-math/math.sol\":2682:2827  for (n /= 2; n != 0; n /= 2) {... */\n      iszero\n      tag_110\n      jumpi\n        /* \"contracts/ds-math/math.sol\":2729:2739  rmul(x, x) */\n      tag_113\n        /* \"contracts/ds-math/math.sol\":2734:2735  x */\n      dup4\n        /* \"contracts/ds-math/math.sol\":2737:2738  x */\n      dup5\n        /* \"contracts/ds-math/math.sol\":2729:2733  rmul */\n      tag_67\n        /* \"contracts/ds-math/math.sol\":2729:2739  rmul(x, x) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/ds-math/math.sol\":2725:2739  x = rmul(x, x) */\n      swap3\n      pop\n        /* \"contracts/ds-math/math.sol\":2767:2768  0 */\n      0x0\n        /* \"contracts/ds-math/math.sol\":2762:2763  2 */\n      0x2\n        /* \"contracts/ds-math/math.sol\":2758:2759  n */\n      dup4\n        /* \"contracts/ds-math/math.sol\":2758:2763  n % 2 */\n      dup2\n      iszero\n      iszero\n      tag_114\n      jumpi\n      invalid\n    tag_114:\n      mod\n        /* \"contracts/ds-math/math.sol\":2758:2768  n % 2 != 0 */\n      eq\n      iszero\n        /* \"contracts/ds-math/math.sol\":2754:2817  if (n % 2 != 0) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"contracts/ds-math/math.sol\":2792:2802  rmul(z, x) */\n      tag_116\n        /* \"contracts/ds-math/math.sol\":2797:2798  z */\n      dup2\n        /* \"contracts/ds-math/math.sol\":2800:2801  x */\n      dup5\n        /* \"contracts/ds-math/math.sol\":2792:2796  rmul */\n      tag_67\n        /* \"contracts/ds-math/math.sol\":2792:2802  rmul(z, x) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/ds-math/math.sol\":2788:2802  z = rmul(z, x) */\n      swap1\n      pop\n        /* \"contracts/ds-math/math.sol\":2754:2817  if (n % 2 != 0) {... */\n    tag_115:\n        /* \"contracts/ds-math/math.sol\":2708:2709  2 */\n      0x2\n        /* \"contracts/ds-math/math.sol\":2703:2709  n /= 2 */\n      dup3\n      dup2\n      iszero\n      iszero\n      tag_117\n      jumpi\n      invalid\n    tag_117:\n      div\n      swap2\n      pop\n        /* \"contracts/ds-math/math.sol\":2682:2827  for (n /= 2; n != 0; n /= 2) {... */\n      jump(tag_109)\n    tag_110:\n        /* \"contracts/ds-math/math.sol\":2576:2833  function rpow(uint x, uint n) internal pure returns (uint z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ds-math/math.sol\":1674:1785  function rmul(uint x, uint y) internal pure returns (uint z) {... */\n    tag_67:\n        /* \"contracts/ds-math/math.sol\":1727:1733  uint z */\n      0x0\n        /* \"contracts/ds-math/math.sol\":1543:1551  10 ** 27 */\n      0x33b2e3c9fd0803ce8000000\n        /* \"contracts/ds-math/math.sol\":1749:1772  add(mul(x, y), RAY / 2) */\n      tag_119\n        /* \"contracts/ds-math/math.sol\":1753:1762  mul(x, y) */\n      tag_120\n        /* \"contracts/ds-math/math.sol\":1757:1758  x */\n      dup6\n        /* \"contracts/ds-math/math.sol\":1760:1761  y */\n      dup6\n        /* \"contracts/ds-math/math.sol\":1753:1756  mul */\n      tag_121\n        /* \"contracts/ds-math/math.sol\":1753:1762  mul(x, y) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/ds-math/math.sol\":1770:1771  2 */\n      0x2\n        /* \"contracts/ds-math/math.sol\":1543:1551  10 ** 27 */\n      0x33b2e3c9fd0803ce8000000\n        /* \"contracts/ds-math/math.sol\":1764:1771  RAY / 2 */\n      dup2\n      iszero\n      iszero\n      tag_122\n      jumpi\n      invalid\n    tag_122:\n      div\n        /* \"contracts/ds-math/math.sol\":1749:1752  add */\n      tag_123\n        /* \"contracts/ds-math/math.sol\":1749:1772  add(mul(x, y), RAY / 2) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/ds-math/math.sol\":1749:1778  add(mul(x, y), RAY / 2) / RAY */\n      dup2\n      iszero\n      iszero\n      tag_124\n      jumpi\n      invalid\n    tag_124:\n      div\n        /* \"contracts/ds-math/math.sol\":1745:1778  z = add(mul(x, y), RAY / 2) / RAY */\n      swap1\n      pop\n        /* \"contracts/ds-math/math.sol\":1674:1785  function rmul(uint x, uint y) internal pure returns (uint z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vox.sol\":2265:2419  function prj(uint256 x) internal pure returns (int128) {... */\n    tag_73:\n        /* \"contracts/vox.sol\":2312:2318  int128 */\n      0x0\n        /* \"contracts/ds-math/math.sol\":1543:1551  10 ** 27 */\n      0x33b2e3c9fd0803ce8000000\n        /* \"contracts/vox.sol\":2337:2338  x */\n      dup3\n        /* \"contracts/vox.sol\":2337:2345  x >= RAY */\n      lt\n      iszero\n        /* \"contracts/vox.sol\":2337:2412  x >= RAY ? int128(x - RAY)... */\n      tag_126\n      jumpi\n        /* \"contracts/vox.sol\":2399:2411  rdiv(RAY, x) */\n      tag_127\n        /* \"contracts/ds-math/math.sol\":1543:1551  10 ** 27 */\n      0x33b2e3c9fd0803ce8000000\n        /* \"contracts/vox.sol\":2409:2410  x */\n      dup4\n        /* \"contracts/vox.sol\":2399:2403  rdiv */\n      tag_128\n        /* \"contracts/vox.sol\":2399:2411  rdiv(RAY, x) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/ds-math/math.sol\":1543:1551  10 ** 27 */\n      0x33b2e3c9fd0803ce8000000\n        /* \"contracts/vox.sol\":2378:2412  int128(RAY) - int128(rdiv(RAY, x)) */\n      sub\n        /* \"contracts/vox.sol\":2337:2412  x >= RAY ? int128(x - RAY)... */\n      jump(tag_129)\n    tag_126:\n        /* \"contracts/ds-math/math.sol\":1543:1551  10 ** 27 */\n      0x33b2e3c9fd0803ce8000000\n        /* \"contracts/vox.sol\":2355:2356  x */\n      dup3\n        /* \"contracts/vox.sol\":2355:2362  x - RAY */\n      sub\n        /* \"contracts/vox.sol\":2337:2412  x >= RAY ? int128(x - RAY)... */\n    tag_129:\n        /* \"contracts/vox.sol\":2330:2412  return x >= RAY ? int128(x - RAY)... */\n      swap1\n      pop\n        /* \"contracts/vox.sol\":2265:2419  function prj(uint256 x) internal pure returns (int128) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/vox.sol\":2113:2260  function inj(int128 x) internal pure returns (uint256) {... */\n    tag_74:\n        /* \"contracts/vox.sol\":2159:2166  uint256 */\n      0x0\n        /* \"contracts/vox.sol\":2190:2191  0 */\n      dup1\n        /* \"contracts/vox.sol\":2185:2186  x */\n      dup3\n        /* \"contracts/vox.sol\":2185:2191  x >= 0 */\n      0xf\n      signextend\n      slt\n      iszero\n        /* \"contracts/vox.sol\":2185:2253  x >= 0 ? uint256(x) + RAY... */\n      tag_131\n      jumpi\n        /* \"contracts/vox.sol\":2225:2253  rdiv(RAY, RAY + uint256(-x)) */\n      tag_132\n        /* \"contracts/ds-math/math.sol\":1543:1551  10 ** 27 */\n      0x33b2e3c9fd0803ce8000000\n        /* \"contracts/vox.sol\":2250:2251  x */\n      dup4\n        /* \"contracts/vox.sol\":2249:2251  -x */\n      0x0\n      sub\n        /* \"contracts/vox.sol\":2241:2252  uint256(-x) */\n      0xf\n      signextend\n        /* \"contracts/ds-math/math.sol\":1543:1551  10 ** 27 */\n      0x33b2e3c9fd0803ce8000000\n        /* \"contracts/vox.sol\":2235:2252  RAY + uint256(-x) */\n      add\n        /* \"contracts/vox.sol\":2225:2229  rdiv */\n      tag_128\n        /* \"contracts/vox.sol\":2225:2253  rdiv(RAY, RAY + uint256(-x)) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/vox.sol\":2185:2253  x >= 0 ? uint256(x) + RAY... */\n      jump(tag_133)\n    tag_131:\n        /* \"contracts/ds-math/math.sol\":1543:1551  10 ** 27 */\n      0x33b2e3c9fd0803ce8000000\n        /* \"contracts/vox.sol\":2202:2203  x */\n      dup3\n        /* \"contracts/vox.sol\":2194:2204  uint256(x) */\n      0xf\n      signextend\n        /* \"contracts/vox.sol\":2194:2210  uint256(x) + RAY */\n      add\n        /* \"contracts/vox.sol\":2185:2253  x >= 0 ? uint256(x) + RAY... */\n    tag_133:\n        /* \"contracts/vox.sol\":2178:2253  return x >= 0 ? uint256(x) + RAY... */\n      swap1\n      pop\n        /* \"contracts/vox.sol\":2113:2260  function inj(int128 x) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1590:1969  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n    tag_77:\n        /* \"contracts/ds-auth/auth.sol\":1660:1664  bool */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1695:1699  this */\n      address\n        /* \"contracts/ds-auth/auth.sol\":1680:1700  src == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1680:1683  src */\n      dup4\n        /* \"contracts/ds-auth/auth.sol\":1680:1700  src == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1676:1963  if (src == address(this)) {... */\n      iszero\n      tag_135\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1723:1727  true */\n      0x1\n        /* \"contracts/ds-auth/auth.sol\":1716:1727  return true */\n      swap1\n      pop\n      jump(tag_134)\n        /* \"contracts/ds-auth/auth.sol\":1676:1963  if (src == address(this)) {... */\n    tag_135:\n        /* \"contracts/ds-auth/auth.sol\":1755:1760  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1748:1760  src == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1748:1751  src */\n      dup4\n        /* \"contracts/ds-auth/auth.sol\":1748:1760  src == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1744:1963  if (src == owner) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1783:1787  true */\n      0x1\n        /* \"contracts/ds-auth/auth.sol\":1776:1787  return true */\n      swap1\n      pop\n      jump(tag_134)\n        /* \"contracts/ds-auth/auth.sol\":1744:1963  if (src == owner) {... */\n    tag_137:\n        /* \"contracts/ds-auth/auth.sol\":1841:1842  0 */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1808:1844  authority == DSAuthority(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1808:1817  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1808:1844  authority == DSAuthority(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1804:1963  if (authority == DSAuthority(address(0))) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1867:1872  false */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1860:1872  return false */\n      swap1\n      pop\n      jump(tag_134)\n        /* \"contracts/ds-auth/auth.sol\":1804:1963  if (authority == DSAuthority(address(0))) {... */\n    tag_139:\n        /* \"contracts/ds-auth/auth.sol\":1910:1919  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1910:1927  authority.canCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb7009613\n        /* \"contracts/ds-auth/auth.sol\":1928:1931  src */\n      dup5\n        /* \"contracts/ds-auth/auth.sol\":1941:1945  this */\n      address\n        /* \"contracts/ds-auth/auth.sol\":1948:1951  sig */\n      dup6\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_141\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_141:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_142\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_142:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_143\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_143:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1903:1952  return authority.canCall(src, address(this), sig) */\n      swap1\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1590:1969  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n    tag_134:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ds-math/math.sol\":958:1074  function mul(uint x, uint y) internal pure returns (uint z) {... */\n    tag_121:\n        /* \"contracts/ds-math/math.sol\":1010:1016  uint z */\n      0x0\n        /* \"contracts/ds-math/math.sol\":1041:1042  0 */\n      dup1\n        /* \"contracts/ds-math/math.sol\":1036:1037  y */\n      dup3\n        /* \"contracts/ds-math/math.sol\":1036:1042  y == 0 */\n      eq\n        /* \"contracts/ds-math/math.sol\":1036:1066  y == 0 || (z = x * y) / y == x */\n      dup1\n      tag_145\n      jumpi\n      pop\n        /* \"contracts/ds-math/math.sol\":1065:1066  x */\n      dup3\n        /* \"contracts/ds-math/math.sol\":1060:1061  y */\n      dup3\n        /* \"contracts/ds-math/math.sol\":1055:1056  y */\n      dup4\n        /* \"contracts/ds-math/math.sol\":1051:1052  x */\n      dup6\n        /* \"contracts/ds-math/math.sol\":1051:1056  x * y */\n      mul\n        /* \"contracts/ds-math/math.sol\":1047:1056  z = x * y */\n      swap3\n      pop\n      dup3\n        /* \"contracts/ds-math/math.sol\":1046:1061  (z = x * y) / y */\n      dup2\n      iszero\n      iszero\n      tag_146\n      jumpi\n      invalid\n    tag_146:\n      div\n        /* \"contracts/ds-math/math.sol\":1046:1066  (z = x * y) / y == x */\n      eq\n        /* \"contracts/ds-math/math.sol\":1036:1066  y == 0 || (z = x * y) / y == x */\n    tag_145:\n        /* \"contracts/ds-math/math.sol\":1028:1067  require(y == 0 || (z = x * y) / y == x) */\n      iszero\n      iszero\n      tag_147\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_147:\n        /* \"contracts/ds-math/math.sol\":958:1074  function mul(uint x, uint y) internal pure returns (uint z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ds-math/math.sol\":744:846  function add(uint x, uint y) internal pure returns (uint z) {... */\n    tag_123:\n        /* \"contracts/ds-math/math.sol\":796:802  uint z */\n      0x0\n        /* \"contracts/ds-math/math.sol\":837:838  x */\n      dup3\n        /* \"contracts/ds-math/math.sol\":831:832  y */\n      dup3\n        /* \"contracts/ds-math/math.sol\":827:828  x */\n      dup5\n        /* \"contracts/ds-math/math.sol\":827:832  x + y */\n      add\n        /* \"contracts/ds-math/math.sol\":823:832  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"contracts/ds-math/math.sol\":822:838  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"contracts/ds-math/math.sol\":814:839  require((z = x + y) >= x) */\n      iszero\n      iszero\n      tag_149\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_149:\n        /* \"contracts/ds-math/math.sol\":744:846  function add(uint x, uint y) internal pure returns (uint z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ds-math/math.sol\":1904:2013  function rdiv(uint x, uint y) internal pure returns (uint z) {... */\n    tag_128:\n        /* \"contracts/ds-math/math.sol\":1957:1963  uint z */\n      0x0\n        /* \"contracts/ds-math/math.sol\":2005:2006  y */\n      dup2\n        /* \"contracts/ds-math/math.sol\":1979:2002  add(mul(x, RAY), y / 2) */\n      tag_151\n        /* \"contracts/ds-math/math.sol\":1983:1994  mul(x, RAY) */\n      tag_152\n        /* \"contracts/ds-math/math.sol\":1987:1988  x */\n      dup6\n        /* \"contracts/ds-math/math.sol\":1543:1551  10 ** 27 */\n      0x33b2e3c9fd0803ce8000000\n        /* \"contracts/ds-math/math.sol\":1983:1986  mul */\n      tag_121\n        /* \"contracts/ds-math/math.sol\":1983:1994  mul(x, RAY) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/ds-math/math.sol\":2000:2001  2 */\n      0x2\n        /* \"contracts/ds-math/math.sol\":1996:1997  y */\n      dup6\n        /* \"contracts/ds-math/math.sol\":1996:2001  y / 2 */\n      dup2\n      iszero\n      iszero\n      tag_153\n      jumpi\n      invalid\n    tag_153:\n      div\n        /* \"contracts/ds-math/math.sol\":1979:1982  add */\n      tag_123\n        /* \"contracts/ds-math/math.sol\":1979:2002  add(mul(x, RAY), y / 2) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/ds-math/math.sol\":1979:2006  add(mul(x, RAY), y / 2) / y */\n      dup2\n      iszero\n      iszero\n      tag_154\n      jumpi\n      invalid\n    tag_154:\n      div\n        /* \"contracts/ds-math/math.sol\":1975:2006  z = add(mul(x, RAY), y / 2) / y */\n      swap1\n      pop\n        /* \"contracts/ds-math/math.sol\":1904:2013  function rdiv(uint x, uint y) internal pure returns (uint z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582030ba9da57bed6cfcd886c2e33db8add231a451cddfea4c6d9804d9fd2f7c0ae50029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405160208061122e8339810180604052810190808051906020019092919050505033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a28060048190556002819055506b033b2e3c9fd0803ce80000006003819055506100ed6100f9640100000000026401000000009004565b60068190555050610101565b600042905090565b61111e806101106000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630302c688146100d557806313af4035146100ec578063143e55e01461012f5780633a4a42331461015a578063495d32cb1461018557806355deb8fc146101b05780635d6542af146101dd5780637a9e5e4b146102085780638da5cb5b1461024b57806392b0d721146102a2578063a551878e146102dd578063becda0ea14610308578063bf7e214f14610335578063cfc4af551461038c575b600080fd5b3480156100e157600080fd5b506100ea6103b7565b005b3480156100f857600080fd5b5061012d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610512565b005b34801561013b57600080fd5b5061014461065d565b6040518082815260200191505060405180910390f35b34801561016657600080fd5b5061016f610665565b6040518082815260200191505060405180910390f35b34801561019157600080fd5b5061019a61066b565b6040518082815260200191505060405180910390f35b3480156101bc57600080fd5b506101db6004803603810190808035906020019092919050505061067d565b005b3480156101e957600080fd5b506101f26107d6565b6040518082815260200191505060405180910390f35b34801561021457600080fd5b50610249600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107e8565b005b34801561025757600080fd5b50610260610931565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ae57600080fd5b506102db600480360381019080803560001916906020019092919080359060200190929190505050610957565b005b3480156102e957600080fd5b506102f2610ade565b6040518082815260200191505060405180910390f35b34801561031457600080fd5b5061033360048036038101908080359060200190929190505050610ae4565b005b34801561034157600080fd5b5061034a610c3d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039857600080fd5b506103a1610c62565b6040518082815260200191505060405180910390f35b60008060008060043591506024359050806000191682600019163373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a460065461047061065d565b03935060008414156104815761050c565b61048961065d565b6006819055506b033b2e3c9fd0803ce80000006003541415156104c4576104bd6002546104b860035487610c68565b610cf7565b6002819055505b600060055414156104d45761050c565b83600554029250610505600254600454106104f257836000036104f4565b835b6104ff600354610d43565b01610d99565b6003819055505b50505050565b610540336000357fffffffff0000000000000000000000000000000000000000000000000000000016610def565b15156105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b600042905090565b60055481565b60006106756103b7565b600254905090565b60008060043591506024359050806000191682600019163373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a4610756336000357fffffffff0000000000000000000000000000000000000000000000000000000016610def565b15156107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b82600481905550505050565b60006107e06103b7565b600354905090565b610816336000357fffffffff0000000000000000000000000000000000000000000000000000000016610def565b151561088a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060043591506024359050806000191682600019163373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a4610a30336000357fffffffff0000000000000000000000000000000000000000000000000000000016610def565b1515610aa4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b7f776179000000000000000000000000000000000000000000000000000000000084600019161415610ad857826003819055505b50505050565b60045481565b60008060043591506024359050806000191682600019163373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a4610bbd336000357fffffffff0000000000000000000000000000000000000000000000000000000016610def565b1515610c31576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b82600581905550505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600080600283811515610c7757fe5b061415610c90576b033b2e3c9fd0803ce8000000610c92565b825b9050600282811515610ca057fe5b0491505b600082141515610cf157610cb88384610cf7565b92506000600283811515610cc857fe5b06141515610cdd57610cda8184610cf7565b90505b600282811515610ce957fe5b049150610ca4565b92915050565b60006b033b2e3c9fd0803ce8000000610d31610d138585611066565b60026b033b2e3c9fd0803ce8000000811515610d2b57fe5b04611096565b811515610d3a57fe5b04905092915050565b60006b033b2e3c9fd0803ce8000000821015610d8257610d6f6b033b2e3c9fd0803ce8000000836110b2565b6b033b2e3c9fd0803ce800000003610d92565b6b033b2e3c9fd0803ce800000082035b9050919050565b60008082600f0b1215610dd557610dd06b033b2e3c9fd0803ce800000083600003600f0b6b033b2e3c9fd0803ce8000000016110b2565b610de8565b6b033b2e3c9fd0803ce800000082600f0b015b9050919050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e2e5760019050611060565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e8d5760019050611060565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610eec5760009050611060565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b15801561102257600080fd5b505af1158015611036573d6000803e3d6000fd5b505050506040513d602081101561104c57600080fd5b810190808051906020019092919050505090505b92915050565b6000808214806110855750828283850292508281151561108257fe5b04145b151561109057600080fd5b92915050565b600082828401915081101515156110ac57600080fd5b92915050565b6000816110e06110ce856b033b2e3c9fd0803ce8000000611066565b6002858115156110da57fe5b04611096565b8115156110e957fe5b049050929150505600a165627a7a7230582030ba9da57bed6cfcd886c2e33db8add231a451cddfea4c6d9804d9fd2f7c0ae50029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x122E DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0xED PUSH2 0xF9 PUSH5 0x100000000 MUL PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP PUSH2 0x101 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x111E DUP1 PUSH2 0x110 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x302C688 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x143E55E0 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x3A4A4233 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x495D32CB EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x55DEB8FC EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x5D6542AF EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x92B0D721 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xA551878E EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xBECDA0EA EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xCFC4AF55 EQ PUSH2 0x38C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH2 0x3B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x512 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x67D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x957 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F2 PUSH2 0xADE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x333 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAE4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34A PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 CALLDATALOAD SWAP2 POP PUSH1 0x24 CALLDATALOAD SWAP1 POP DUP1 PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLVALUE PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x6 SLOAD PUSH2 0x470 PUSH2 0x65D JUMP JUMPDEST SUB SWAP4 POP PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x481 JUMPI PUSH2 0x50C JUMP JUMPDEST PUSH2 0x489 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x3 SLOAD EQ ISZERO ISZERO PUSH2 0x4C4 JUMPI PUSH2 0x4BD PUSH1 0x2 SLOAD PUSH2 0x4B8 PUSH1 0x3 SLOAD DUP8 PUSH2 0xC68 JUMP JUMPDEST PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x4D4 JUMPI PUSH2 0x50C JUMP JUMPDEST DUP4 PUSH1 0x5 SLOAD MUL SWAP3 POP PUSH2 0x505 PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD LT PUSH2 0x4F2 JUMPI DUP4 PUSH1 0x0 SUB PUSH2 0x4F4 JUMP JUMPDEST DUP4 JUMPDEST PUSH2 0x4FF PUSH1 0x3 SLOAD PUSH2 0xD43 JUMP JUMPDEST ADD PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x540 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xDEF JUMP JUMPDEST ISZERO ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x675 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 CALLDATALOAD SWAP2 POP PUSH1 0x24 CALLDATALOAD SWAP1 POP DUP1 PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLVALUE PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x756 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xDEF JUMP JUMPDEST ISZERO ISZERO PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E0 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x816 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xDEF JUMP JUMPDEST ISZERO ISZERO PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 CALLDATALOAD SWAP2 POP PUSH1 0x24 CALLDATALOAD SWAP1 POP DUP1 PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLVALUE PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA30 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xDEF JUMP JUMPDEST ISZERO ISZERO PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7761790000000000000000000000000000000000000000000000000000000000 DUP5 PUSH1 0x0 NOT AND EQ ISZERO PUSH2 0xAD8 JUMPI DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 CALLDATALOAD SWAP2 POP PUSH1 0x24 CALLDATALOAD SWAP1 POP DUP1 PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLVALUE PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xBBD CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xDEF JUMP JUMPDEST ISZERO ISZERO PUSH2 0xC31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP4 DUP2 ISZERO ISZERO PUSH2 0xC77 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0xC90 JUMPI PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0xC92 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x2 DUP3 DUP2 ISZERO ISZERO PUSH2 0xCA0 JUMPI INVALID JUMPDEST DIV SWAP2 POP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO ISZERO PUSH2 0xCF1 JUMPI PUSH2 0xCB8 DUP4 DUP5 PUSH2 0xCF7 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH1 0x2 DUP4 DUP2 ISZERO ISZERO PUSH2 0xCC8 JUMPI INVALID JUMPDEST MOD EQ ISZERO ISZERO PUSH2 0xCDD JUMPI PUSH2 0xCDA DUP2 DUP5 PUSH2 0xCF7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 DUP2 ISZERO ISZERO PUSH2 0xCE9 JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH2 0xCA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0xD31 PUSH2 0xD13 DUP6 DUP6 PUSH2 0x1066 JUMP JUMPDEST PUSH1 0x2 PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 ISZERO ISZERO PUSH2 0xD2B JUMPI INVALID JUMPDEST DIV PUSH2 0x1096 JUMP JUMPDEST DUP2 ISZERO ISZERO PUSH2 0xD3A JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0x33B2E3C9FD0803CE8000000 DUP3 LT ISZERO PUSH2 0xD82 JUMPI PUSH2 0xD6F PUSH12 0x33B2E3C9FD0803CE8000000 DUP4 PUSH2 0x10B2 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 SUB PUSH2 0xD92 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP3 SUB JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0xDD5 JUMPI PUSH2 0xDD0 PUSH12 0x33B2E3C9FD0803CE8000000 DUP4 PUSH1 0x0 SUB PUSH1 0xF SIGNEXTEND PUSH12 0x33B2E3C9FD0803CE8000000 ADD PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0xDE8 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP3 PUSH1 0xF SIGNEXTEND ADD JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE2E JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE8D JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEEC JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB7009613 DUP5 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1022 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1036 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x104C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ DUP1 PUSH2 0x1085 JUMPI POP DUP3 DUP3 DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 ISZERO ISZERO PUSH2 0x1082 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x1090 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x10AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x10E0 PUSH2 0x10CE DUP6 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x1066 JUMP JUMPDEST PUSH1 0x2 DUP6 DUP2 ISZERO ISZERO PUSH2 0x10DA JUMPI INVALID JUMPDEST DIV PUSH2 0x1096 JUMP JUMPDEST DUP2 ISZERO ISZERO PUSH2 0x10E9 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 ADDRESS 0xba SWAP14 0xa5 PUSH28 0xED6CFCD886C2E33DB8ADD231A451CDDFEA4C6D9804D9FD2F7C0AE500 0x29 ",
							"sourceMap": "934:1487:4:-;;;1085:110;8:9:-1;5:2;;;30:1;27;20:12;5:2;1085:110:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1106:10:0;1098:5;;:18;;;;;;;;;;;;;;;;;;1143:10;1131:23;;;;;;;;;;;;1142:4:4;1136:3;:10;;;1129:4;:17;;;;1543:8:1;1156:4:4;:10;;;;1183:5;:3;;;:5;;;:::i;:::-;1176:3;:12;;;;1085:110;934:1487;;1201:81;1237:4;1260:15;1253:22;;1201:81;:::o;934:1487::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630302c688146100d557806313af4035146100ec578063143e55e01461012f5780633a4a42331461015a578063495d32cb1461018557806355deb8fc146101b05780635d6542af146101dd5780637a9e5e4b146102085780638da5cb5b1461024b57806392b0d721146102a2578063a551878e146102dd578063becda0ea14610308578063bf7e214f14610335578063cfc4af551461038c575b600080fd5b3480156100e157600080fd5b506100ea6103b7565b005b3480156100f857600080fd5b5061012d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610512565b005b34801561013b57600080fd5b5061014461065d565b6040518082815260200191505060405180910390f35b34801561016657600080fd5b5061016f610665565b6040518082815260200191505060405180910390f35b34801561019157600080fd5b5061019a61066b565b6040518082815260200191505060405180910390f35b3480156101bc57600080fd5b506101db6004803603810190808035906020019092919050505061067d565b005b3480156101e957600080fd5b506101f26107d6565b6040518082815260200191505060405180910390f35b34801561021457600080fd5b50610249600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107e8565b005b34801561025757600080fd5b50610260610931565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ae57600080fd5b506102db600480360381019080803560001916906020019092919080359060200190929190505050610957565b005b3480156102e957600080fd5b506102f2610ade565b6040518082815260200191505060405180910390f35b34801561031457600080fd5b5061033360048036038101908080359060200190929190505050610ae4565b005b34801561034157600080fd5b5061034a610c3d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039857600080fd5b506103a1610c62565b6040518082815260200191505060405180910390f35b60008060008060043591506024359050806000191682600019163373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a460065461047061065d565b03935060008414156104815761050c565b61048961065d565b6006819055506b033b2e3c9fd0803ce80000006003541415156104c4576104bd6002546104b860035487610c68565b610cf7565b6002819055505b600060055414156104d45761050c565b83600554029250610505600254600454106104f257836000036104f4565b835b6104ff600354610d43565b01610d99565b6003819055505b50505050565b610540336000357fffffffff0000000000000000000000000000000000000000000000000000000016610def565b15156105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b600042905090565b60055481565b60006106756103b7565b600254905090565b60008060043591506024359050806000191682600019163373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a4610756336000357fffffffff0000000000000000000000000000000000000000000000000000000016610def565b15156107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b82600481905550505050565b60006107e06103b7565b600354905090565b610816336000357fffffffff0000000000000000000000000000000000000000000000000000000016610def565b151561088a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060043591506024359050806000191682600019163373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a4610a30336000357fffffffff0000000000000000000000000000000000000000000000000000000016610def565b1515610aa4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b7f776179000000000000000000000000000000000000000000000000000000000084600019161415610ad857826003819055505b50505050565b60045481565b60008060043591506024359050806000191682600019163373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a4610bbd336000357fffffffff0000000000000000000000000000000000000000000000000000000016610def565b1515610c31576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b82600581905550505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600080600283811515610c7757fe5b061415610c90576b033b2e3c9fd0803ce8000000610c92565b825b9050600282811515610ca057fe5b0491505b600082141515610cf157610cb88384610cf7565b92506000600283811515610cc857fe5b06141515610cdd57610cda8184610cf7565b90505b600282811515610ce957fe5b049150610ca4565b92915050565b60006b033b2e3c9fd0803ce8000000610d31610d138585611066565b60026b033b2e3c9fd0803ce8000000811515610d2b57fe5b04611096565b811515610d3a57fe5b04905092915050565b60006b033b2e3c9fd0803ce8000000821015610d8257610d6f6b033b2e3c9fd0803ce8000000836110b2565b6b033b2e3c9fd0803ce800000003610d92565b6b033b2e3c9fd0803ce800000082035b9050919050565b60008082600f0b1215610dd557610dd06b033b2e3c9fd0803ce800000083600003600f0b6b033b2e3c9fd0803ce8000000016110b2565b610de8565b6b033b2e3c9fd0803ce800000082600f0b015b9050919050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e2e5760019050611060565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e8d5760019050611060565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610eec5760009050611060565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b15801561102257600080fd5b505af1158015611036573d6000803e3d6000fd5b505050506040513d602081101561104c57600080fd5b810190808051906020019092919050505090505b92915050565b6000808214806110855750828283850292508281151561108257fe5b04145b151561109057600080fd5b92915050565b600082828401915081101515156110ac57600080fd5b92915050565b6000816110e06110ce856b033b2e3c9fd0803ce8000000611066565b6002858115156110da57fe5b04611096565b8115156110e957fe5b049050929150505600a165627a7a7230582030ba9da57bed6cfcd886c2e33db8add231a451cddfea4c6d9804d9fd2f7c0ae50029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x302C688 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x143E55E0 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x3A4A4233 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x495D32CB EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x55DEB8FC EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x5D6542AF EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x92B0D721 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xA551878E EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xBECDA0EA EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xCFC4AF55 EQ PUSH2 0x38C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH2 0x3B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x512 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x67D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x957 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F2 PUSH2 0xADE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x333 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAE4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34A PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 CALLDATALOAD SWAP2 POP PUSH1 0x24 CALLDATALOAD SWAP1 POP DUP1 PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLVALUE PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x6 SLOAD PUSH2 0x470 PUSH2 0x65D JUMP JUMPDEST SUB SWAP4 POP PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x481 JUMPI PUSH2 0x50C JUMP JUMPDEST PUSH2 0x489 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x3 SLOAD EQ ISZERO ISZERO PUSH2 0x4C4 JUMPI PUSH2 0x4BD PUSH1 0x2 SLOAD PUSH2 0x4B8 PUSH1 0x3 SLOAD DUP8 PUSH2 0xC68 JUMP JUMPDEST PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x4D4 JUMPI PUSH2 0x50C JUMP JUMPDEST DUP4 PUSH1 0x5 SLOAD MUL SWAP3 POP PUSH2 0x505 PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD LT PUSH2 0x4F2 JUMPI DUP4 PUSH1 0x0 SUB PUSH2 0x4F4 JUMP JUMPDEST DUP4 JUMPDEST PUSH2 0x4FF PUSH1 0x3 SLOAD PUSH2 0xD43 JUMP JUMPDEST ADD PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x540 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xDEF JUMP JUMPDEST ISZERO ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x675 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 CALLDATALOAD SWAP2 POP PUSH1 0x24 CALLDATALOAD SWAP1 POP DUP1 PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLVALUE PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x756 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xDEF JUMP JUMPDEST ISZERO ISZERO PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E0 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x816 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xDEF JUMP JUMPDEST ISZERO ISZERO PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 CALLDATALOAD SWAP2 POP PUSH1 0x24 CALLDATALOAD SWAP1 POP DUP1 PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLVALUE PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA30 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xDEF JUMP JUMPDEST ISZERO ISZERO PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7761790000000000000000000000000000000000000000000000000000000000 DUP5 PUSH1 0x0 NOT AND EQ ISZERO PUSH2 0xAD8 JUMPI DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 CALLDATALOAD SWAP2 POP PUSH1 0x24 CALLDATALOAD SWAP1 POP DUP1 PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLVALUE PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xBBD CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xDEF JUMP JUMPDEST ISZERO ISZERO PUSH2 0xC31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP4 DUP2 ISZERO ISZERO PUSH2 0xC77 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0xC90 JUMPI PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0xC92 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x2 DUP3 DUP2 ISZERO ISZERO PUSH2 0xCA0 JUMPI INVALID JUMPDEST DIV SWAP2 POP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO ISZERO PUSH2 0xCF1 JUMPI PUSH2 0xCB8 DUP4 DUP5 PUSH2 0xCF7 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH1 0x2 DUP4 DUP2 ISZERO ISZERO PUSH2 0xCC8 JUMPI INVALID JUMPDEST MOD EQ ISZERO ISZERO PUSH2 0xCDD JUMPI PUSH2 0xCDA DUP2 DUP5 PUSH2 0xCF7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 DUP2 ISZERO ISZERO PUSH2 0xCE9 JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH2 0xCA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0xD31 PUSH2 0xD13 DUP6 DUP6 PUSH2 0x1066 JUMP JUMPDEST PUSH1 0x2 PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 ISZERO ISZERO PUSH2 0xD2B JUMPI INVALID JUMPDEST DIV PUSH2 0x1096 JUMP JUMPDEST DUP2 ISZERO ISZERO PUSH2 0xD3A JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0x33B2E3C9FD0803CE8000000 DUP3 LT ISZERO PUSH2 0xD82 JUMPI PUSH2 0xD6F PUSH12 0x33B2E3C9FD0803CE8000000 DUP4 PUSH2 0x10B2 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 SUB PUSH2 0xD92 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP3 SUB JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0xDD5 JUMPI PUSH2 0xDD0 PUSH12 0x33B2E3C9FD0803CE8000000 DUP4 PUSH1 0x0 SUB PUSH1 0xF SIGNEXTEND PUSH12 0x33B2E3C9FD0803CE8000000 ADD PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0xDE8 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP3 PUSH1 0xF SIGNEXTEND ADD JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE2E JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE8D JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEEC JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB7009613 DUP5 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1022 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1036 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x104C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ DUP1 PUSH2 0x1085 JUMPI POP DUP3 DUP3 DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 ISZERO ISZERO PUSH2 0x1082 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x1090 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x10AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x10E0 PUSH2 0x10CE DUP6 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x1066 JUMP JUMPDEST PUSH1 0x2 DUP6 DUP2 ISZERO ISZERO PUSH2 0x10DA JUMPI INVALID JUMPDEST DIV PUSH2 0x1096 JUMP JUMPDEST DUP2 ISZERO ISZERO PUSH2 0x10E9 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 ADDRESS 0xba SWAP14 0xa5 PUSH28 0xED6CFCD886C2E33DB8ADD231A451CDDFEA4C6D9804D9FD2F7C0AE500 0x29 ",
							"sourceMap": "934:1487:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1759:348;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1759:348:4;;;;;;1167:130:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1167:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1201:81:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1201:81:4;;;;;;;;;;;;;;;;;;;;;;;1032:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1032:20:4;;;;;;;;;;;;;;;;;;;;;;;1435:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1435:81:4;;;;;;;;;;;;;;;;;;;;;;;1608:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1608:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;1521:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1521:81:4;;;;;;;;;;;;;;;;;;;;;;;1303:167:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1303:167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1039:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1039:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1288:103:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1288:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1006:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1006:20:4;;;;;;;;;;;;;;;;;;;;;;;1683:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1683:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;1005:28:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1005:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1058:20:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1058:20:4;;;;;;;;;;;;;;;;;;;;;;;1759:348;1797:7;2014;1003:11:2;1024;1089:1;1076:15;1069:22;;1124:2;1111:16;1104:23;;1181:3;1147:59;;;1176:3;1147:59;;;1164:10;1147:59;;1155:7;;;;1147:59;;;1186:9;1197:8;;1147:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1815:3:4;;1807:5;:3;:5::i;:::-;:11;1797:21;;1839:1;1832:3;:8;1828:21;;;1842:7;;1828:21;1878:5;:3;:5::i;:::-;1872:3;:11;;;;1543:8:1;1898:4:4;;:11;;1894:51;;;1918:27;1923:4;;1929:15;1934:4;;1940:3;1929:4;:15::i;:::-;1918:4;:27::i;:::-;1911:4;:34;;;;1894:51;1981:1;1974:3;;:8;1970:21;;;1984:7;;1970:21;2037:3;2031;;:9;2014:27;;2058:42;2081:4;;2075:3;;:10;:23;;2095:3;2094:4;;2075:23;;;2088:3;2075:23;2062:9;2066:4;;2062:3;:9::i;:::-;:37;2058:3;:42::i;:::-;2051:4;:49;;;;1217:1:2;1759:348:4;;;;:::o;1167:130:0:-;1508:33;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1251:6;1243:5;;:14;;;;;;;;;;;;;;;;;;1284:5;;;;;;;;;;;1272:18;;;;;;;;;;;;1167:130;:::o;1201:81:4:-;1237:4;1260:15;1253:22;;1201:81;:::o;1032:20::-;;;;:::o;1435:81::-;1466:4;1482:6;:4;:6::i;:::-;1505:4;;1498:11;;1435:81;:::o;1608:70::-;1003:11:2;1024;1089:1;1076:15;1069:22;;1124:2;1111:16;1104:23;;1181:3;1147:59;;;1176:3;1147:59;;;1164:10;1147:59;;1155:7;;;;1147:59;;;1186:9;1197:8;;1147:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:33:0;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:3:4;1662;:9;;;;1608:70;;;:::o;1521:81::-;1552:4;1568:6;:4;:6::i;:::-;1591:4;;1584:11;;1521:81;:::o;1303:167:0:-;1508:33;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1403:10;1391:9;;:22;;;;;;;;;;;;;;;;;;1452:9;;;;;;;;;;;1428:35;;;;;;;;;;;;1303:167;:::o;1039:21::-;;;;;;;;;;;;;:::o;1288:103:4:-;1003:11:2;1024;1089:1;1076:15;1069:22;;1124:2;1111:16;1104:23;;1181:3;1147:59;;;1176:3;1147:59;;;1164:10;1147:59;;1155:7;;;;1147:59;;;1186:9;1197:8;;1147:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:33:0;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1358:14:4;:5;:14;;;;1354:30;;;1381:3;1374:4;:10;;;;1354:30;1288:103;;;;:::o;1006:20::-;;;;:::o;1683:70::-;1003:11:2;1024;1089:1;1076:15;1069:22;;1124:2;1111:16;1104:23;;1181:3;1147:59;;;1176:3;1147:59;;;1164:10;1147:59;;1155:7;;;;1147:59;;;1186:9;1197:8;;1147:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:33:0;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1743:3:4;1737;:9;;;;1683:70;;;:::o;1005:28:0:-;;;;;;;;;;;;;:::o;1058:20:4:-;;;;:::o;2576:257:1:-;2629:6;2660:1;2655;2651;:5;;;;;;;;:10;;:20;;1543:8;2651:20;;;2664:1;2651:20;2647:24;;2692:1;2687:6;;;;;;;;;;;2682:145;2700:1;2695;:6;;2682:145;;;2729:10;2734:1;2737;2729:4;:10::i;:::-;2725:14;;2767:1;2762;2758;:5;;;;;;;;:10;;2754:63;;;2792:10;2797:1;2800;2792:4;:10::i;:::-;2788:14;;2754:63;2708:1;2703:6;;;;;;;;;;;2682:145;;;2576:257;;;;:::o;1674:111::-;1727:6;1543:8;1749:23;1753:9;1757:1;1760;1753:3;:9::i;:::-;1770:1;1543:8;1764:7;;;;;;;;1749:3;:23::i;:::-;:29;;;;;;;;1745:33;;1674:111;;;;:::o;2265:154:4:-;2312:6;1543:8:1;2337:1:4;:8;;:75;;2399:12;1543:8:1;2409:1:4;2399:4;:12::i;:::-;1543:8:1;2378:34:4;2337:75;;;1543:8:1;2355:1:4;:7;2337:75;2330:82;;2265:154;;;:::o;2113:147::-;2159:7;2190:1;2185;:6;;;;:68;;2225:28;1543:8:1;2250:1:4;2249:2;;2241:11;;1543:8:1;2235:17:4;2225:4;:28::i;:::-;2185:68;;;1543:8:1;2202:1:4;2194:10;;:16;2185:68;2178:75;;2113:147;;;:::o;1590:379:0:-;1660:4;1695;1680:20;;:3;:20;;;1676:287;;;1723:4;1716:11;;;;1676:287;1755:5;;;;;;;;;;;1748:12;;:3;:12;;;1744:219;;;1783:4;1776:11;;;;1744:219;1841:1;1808:36;;:9;;;;;;;;;;;:36;;;1804:159;;;1867:5;1860:12;;;;1804:159;1910:9;;;;;;;;;;;:17;;;1928:3;1941:4;1948:3;1910:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1910:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1910:42:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1910:42:0;;;;;;;;;;;;;;;;1903:49;;1590:379;;;;;:::o;958:116:1:-;1010:6;1041:1;1036;:6;:30;;;;1065:1;1060;1055;1051;:5;1047:9;;;1046:15;;;;;;;;:20;1036:30;1028:39;;;;;;;;958:116;;;;:::o;744:102::-;796:6;837:1;831;827;:5;823:9;;;822:16;;814:25;;;;;;;;744:102;;;;:::o;1904:109::-;1957:6;2005:1;1979:23;1983:11;1987:1;1543:8;1983:3;:11::i;:::-;2000:1;1996;:5;;;;;;;;1979:3;:23::i;:::-;:27;;;;;;;;1975:31;;1904:109;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "876400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"authority()": "706",
								"era()": "245",
								"fix()": "614",
								"how()": "460",
								"mold(bytes32,uint256)": "infinite",
								"owner()": "618",
								"par()": "infinite",
								"prod()": "infinite",
								"setAuthority(address)": "infinite",
								"setOwner(address)": "infinite",
								"tau()": "680",
								"tell(uint256)": "infinite",
								"tune(uint256)": "infinite",
								"way()": "infinite"
							},
							"internal": {
								"inj(int128)": "433",
								"prj(uint256)": "411"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 934,
									"end": 2421,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 934,
									"end": 2421,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 934,
									"end": 2421,
									"name": "MSTORE"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "POP"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "MLOAD"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "DUP1"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "DUP4"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "CODECOPY"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "DUP2"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "ADD"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "DUP1"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "MSTORE"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "DUP2"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "ADD"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "SWAP1"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "DUP1"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "DUP1"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "MLOAD"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "SWAP1"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "ADD"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "SWAP1"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "SWAP3"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "SWAP2"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "SWAP1"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "POP"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "POP"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "POP"
								},
								{
									"begin": 1106,
									"end": 1116,
									"name": "CALLER"
								},
								{
									"begin": 1098,
									"end": 1103,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1098,
									"end": 1103,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "EXP"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP2"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SLOAD"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP2"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "MUL"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "NOT"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "AND"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SWAP1"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP4"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "AND"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "MUL"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "OR"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SWAP1"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SSTORE"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "POP"
								},
								{
									"begin": 1143,
									"end": 1153,
									"name": "CALLER"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "AND"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "MLOAD"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "MLOAD"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "DUP1"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SWAP2"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SUB"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SWAP1"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "LOG2"
								},
								{
									"begin": 1142,
									"end": 1146,
									"name": "DUP1"
								},
								{
									"begin": 1136,
									"end": 1139,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1136,
									"end": 1146,
									"name": "DUP2"
								},
								{
									"begin": 1136,
									"end": 1146,
									"name": "SWAP1"
								},
								{
									"begin": 1136,
									"end": 1146,
									"name": "SSTORE"
								},
								{
									"begin": 1129,
									"end": 1133,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1129,
									"end": 1146,
									"name": "DUP2"
								},
								{
									"begin": 1129,
									"end": 1146,
									"name": "SWAP1"
								},
								{
									"begin": 1129,
									"end": 1146,
									"name": "SSTORE"
								},
								{
									"begin": 1129,
									"end": 1146,
									"name": "POP"
								},
								{
									"begin": 1543,
									"end": 1551,
									"name": "PUSH",
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 1156,
									"end": 1160,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1156,
									"end": 1166,
									"name": "DUP2"
								},
								{
									"begin": 1156,
									"end": 1166,
									"name": "SWAP1"
								},
								{
									"begin": 1156,
									"end": 1166,
									"name": "SSTORE"
								},
								{
									"begin": 1156,
									"end": 1166,
									"name": "POP"
								},
								{
									"begin": 1183,
									"end": 1188,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 1183,
									"end": 1186,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 1183,
									"end": 1186,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 1183,
									"end": 1186,
									"name": "MUL"
								},
								{
									"begin": 1183,
									"end": 1188,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 1183,
									"end": 1188,
									"name": "SWAP1"
								},
								{
									"begin": 1183,
									"end": 1188,
									"name": "DIV"
								},
								{
									"begin": 1183,
									"end": 1188,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 1183,
									"end": 1188,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 1183,
									"end": 1188,
									"name": "JUMPDEST"
								},
								{
									"begin": 1176,
									"end": 1179,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "DUP2"
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "SWAP1"
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "SSTORE"
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "POP"
								},
								{
									"begin": 1085,
									"end": 1195,
									"name": "POP"
								},
								{
									"begin": 934,
									"end": 2421,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 934,
									"end": 2421,
									"name": "JUMP"
								},
								{
									"begin": 1201,
									"end": 1282,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 1201,
									"end": 1282,
									"name": "JUMPDEST"
								},
								{
									"begin": 1237,
									"end": 1241,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1260,
									"end": 1275,
									"name": "TIMESTAMP"
								},
								{
									"begin": 1253,
									"end": 1275,
									"name": "SWAP1"
								},
								{
									"begin": 1253,
									"end": 1275,
									"name": "POP"
								},
								{
									"begin": 1201,
									"end": 1282,
									"name": "SWAP1"
								},
								{
									"begin": 1201,
									"end": 1282,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 934,
									"end": 2421,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 934,
									"end": 2421,
									"name": "JUMPDEST"
								},
								{
									"begin": 934,
									"end": 2421,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 934,
									"end": 2421,
									"name": "DUP1"
								},
								{
									"begin": 934,
									"end": 2421,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 934,
									"end": 2421,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 934,
									"end": 2421,
									"name": "CODECOPY"
								},
								{
									"begin": 934,
									"end": 2421,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 934,
									"end": 2421,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582030ba9da57bed6cfcd886c2e33db8add231a451cddfea4c6d9804d9fd2f7c0ae50029",
									".code": [
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "MSTORE"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "LT"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "DIV"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "AND"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "302C688"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "EQ"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "13AF4035"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "EQ"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "143E55E0"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "EQ"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "3A4A4233"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "EQ"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "495D32CB"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "EQ"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "55DEB8FC"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "EQ"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "5D6542AF"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "EQ"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "7A9E5E4B"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "EQ"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "EQ"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "92B0D721"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "EQ"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "A551878E"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "EQ"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "BECDA0EA"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "EQ"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "BF7E214F"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "EQ"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "CFC4AF55"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "EQ"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 2421,
											"name": "REVERT"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "JUMPDEST"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "POP"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "JUMP"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "JUMPDEST"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "STOP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SUB"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "ADD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "AND"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "ADD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP3"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "STOP"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "JUMPDEST"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "POP"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "JUMP"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "JUMPDEST"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "MLOAD"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "DUP1"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "DUP3"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "DUP2"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "MSTORE"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "ADD"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "SWAP2"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "POP"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "POP"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "MLOAD"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "DUP1"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "SWAP2"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "SUB"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "SWAP1"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "RETURN"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "JUMPDEST"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "POP"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "JUMP"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "JUMPDEST"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "MLOAD"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "DUP1"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "DUP3"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "DUP2"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "MSTORE"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "ADD"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "SWAP2"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "POP"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "POP"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "MLOAD"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "DUP1"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "SWAP2"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "SUB"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "SWAP1"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "RETURN"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "JUMPDEST"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "POP"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "JUMP"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "JUMPDEST"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "MLOAD"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "DUP1"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "DUP3"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "DUP2"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "MSTORE"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "ADD"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "SWAP2"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "POP"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "POP"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "MLOAD"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "DUP1"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "SWAP2"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "SUB"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "SWAP1"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "RETURN"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "SUB"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "DUP2"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "ADD"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "ADD"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "SWAP3"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "SWAP2"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "JUMP"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "STOP"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "JUMPDEST"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "POP"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "JUMP"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "JUMPDEST"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "MLOAD"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "DUP1"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "DUP3"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "DUP2"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "MSTORE"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "ADD"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "SWAP2"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "POP"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "POP"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "MLOAD"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "DUP1"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "SWAP2"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "SUB"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "SWAP1"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "RETURN"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SUB"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "AND"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP3"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "STOP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP3"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MSTORE"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "ADD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SUB"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "RETURN"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "JUMPDEST"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "POP"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "DUP1"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "SUB"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "DUP2"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "ADD"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "SWAP1"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "DUP1"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "DUP1"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "NOT"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "AND"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "SWAP1"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "ADD"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "SWAP1"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "SWAP3"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "SWAP2"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "SWAP1"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "DUP1"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "SWAP1"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "ADD"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "SWAP1"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "SWAP3"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "SWAP2"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "SWAP1"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "POP"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "POP"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "POP"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "JUMP"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "JUMPDEST"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "STOP"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "JUMPDEST"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "POP"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "JUMP"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "JUMPDEST"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "MLOAD"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "DUP1"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "DUP3"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "DUP2"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "MSTORE"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "ADD"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "SWAP2"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "POP"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "POP"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "MLOAD"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "DUP1"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "SWAP2"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "SUB"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "SWAP1"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "RETURN"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "JUMPDEST"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "POP"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "DUP1"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "SUB"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "DUP2"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "ADD"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "SWAP1"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "DUP1"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "DUP1"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "SWAP1"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "ADD"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "SWAP1"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "SWAP3"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "SWAP2"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "SWAP1"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "POP"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "POP"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "POP"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "JUMP"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "JUMPDEST"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "STOP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP3"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MSTORE"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SUB"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "RETURN"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "JUMPDEST"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "POP"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "JUMP"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "JUMPDEST"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "MLOAD"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "DUP1"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "DUP3"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "DUP2"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "MSTORE"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "ADD"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "SWAP2"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "POP"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "POP"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "MLOAD"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "DUP1"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "SWAP2"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "SUB"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "SWAP1"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "RETURN"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "JUMPDEST"
										},
										{
											"begin": 1797,
											"end": 1804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2021,
											"name": "DUP1"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1035,
											"name": "DUP1"
										},
										{
											"begin": 1089,
											"end": 1090,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1069,
											"end": 1091,
											"name": "SWAP2"
										},
										{
											"begin": 1069,
											"end": 1091,
											"name": "POP"
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1111,
											"end": 1127,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1104,
											"end": 1127,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1127,
											"name": "POP"
										},
										{
											"begin": 1181,
											"end": 1184,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1176,
											"end": 1179,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1174,
											"name": "CALLER"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "AND"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1186,
											"end": 1195,
											"name": "CALLVALUE"
										},
										{
											"begin": 1197,
											"end": 1205,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1205,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MLOAD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SUB"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MLOAD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SUB"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "LOG4"
										},
										{
											"begin": 1815,
											"end": 1818,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1815,
											"end": 1818,
											"name": "SLOAD"
										},
										{
											"begin": 1807,
											"end": 1812,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 1807,
											"end": 1810,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1807,
											"end": 1812,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1807,
											"end": 1812,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 1807,
											"end": 1812,
											"name": "JUMPDEST"
										},
										{
											"begin": 1807,
											"end": 1818,
											"name": "SUB"
										},
										{
											"begin": 1797,
											"end": 1818,
											"name": "SWAP4"
										},
										{
											"begin": 1797,
											"end": 1818,
											"name": "POP"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1835,
											"name": "DUP5"
										},
										{
											"begin": 1832,
											"end": 1840,
											"name": "EQ"
										},
										{
											"begin": 1828,
											"end": 1849,
											"name": "ISZERO"
										},
										{
											"begin": 1828,
											"end": 1849,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 1828,
											"end": 1849,
											"name": "JUMPI"
										},
										{
											"begin": 1842,
											"end": 1849,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 1842,
											"end": 1849,
											"name": "JUMP"
										},
										{
											"begin": 1828,
											"end": 1849,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1828,
											"end": 1849,
											"name": "JUMPDEST"
										},
										{
											"begin": 1878,
											"end": 1883,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1878,
											"end": 1881,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1878,
											"end": 1883,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1878,
											"end": 1883,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1878,
											"end": 1883,
											"name": "JUMPDEST"
										},
										{
											"begin": 1872,
											"end": 1875,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "DUP2"
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "SWAP1"
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "SSTORE"
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "POP"
										},
										{
											"begin": 1543,
											"end": 1551,
											"name": "PUSH",
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 1898,
											"end": 1902,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1898,
											"end": 1902,
											"name": "SLOAD"
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "EQ"
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "ISZERO"
										},
										{
											"begin": 1894,
											"end": 1945,
											"name": "ISZERO"
										},
										{
											"begin": 1894,
											"end": 1945,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1894,
											"end": 1945,
											"name": "JUMPI"
										},
										{
											"begin": 1918,
											"end": 1945,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1923,
											"end": 1927,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1923,
											"end": 1927,
											"name": "SLOAD"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 1934,
											"end": 1938,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1934,
											"end": 1938,
											"name": "SLOAD"
										},
										{
											"begin": 1940,
											"end": 1943,
											"name": "DUP8"
										},
										{
											"begin": 1929,
											"end": 1933,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "JUMPDEST"
										},
										{
											"begin": 1918,
											"end": 1922,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 1918,
											"end": 1945,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 1945,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1918,
											"end": 1945,
											"name": "JUMPDEST"
										},
										{
											"begin": 1911,
											"end": 1915,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1911,
											"end": 1945,
											"name": "DUP2"
										},
										{
											"begin": 1911,
											"end": 1945,
											"name": "SWAP1"
										},
										{
											"begin": 1911,
											"end": 1945,
											"name": "SSTORE"
										},
										{
											"begin": 1911,
											"end": 1945,
											"name": "POP"
										},
										{
											"begin": 1894,
											"end": 1945,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1894,
											"end": 1945,
											"name": "JUMPDEST"
										},
										{
											"begin": 1981,
											"end": 1982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1977,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1974,
											"end": 1977,
											"name": "SLOAD"
										},
										{
											"begin": 1974,
											"end": 1982,
											"name": "EQ"
										},
										{
											"begin": 1970,
											"end": 1991,
											"name": "ISZERO"
										},
										{
											"begin": 1970,
											"end": 1991,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 1970,
											"end": 1991,
											"name": "JUMPI"
										},
										{
											"begin": 1984,
											"end": 1991,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 1984,
											"end": 1991,
											"name": "JUMP"
										},
										{
											"begin": 1970,
											"end": 1991,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 1970,
											"end": 1991,
											"name": "JUMPDEST"
										},
										{
											"begin": 2037,
											"end": 2040,
											"name": "DUP4"
										},
										{
											"begin": 2031,
											"end": 2034,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2031,
											"end": 2034,
											"name": "SLOAD"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "MUL"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "SWAP3"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "POP"
										},
										{
											"begin": 2058,
											"end": 2100,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2081,
											"end": 2085,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2081,
											"end": 2085,
											"name": "SLOAD"
										},
										{
											"begin": 2075,
											"end": 2078,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2075,
											"end": 2078,
											"name": "SLOAD"
										},
										{
											"begin": 2075,
											"end": 2085,
											"name": "LT"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "JUMPI"
										},
										{
											"begin": 2095,
											"end": 2098,
											"name": "DUP4"
										},
										{
											"begin": 2094,
											"end": 2098,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2094,
											"end": 2098,
											"name": "SUB"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "JUMP"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "JUMPDEST"
										},
										{
											"begin": 2088,
											"end": 2091,
											"name": "DUP4"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "JUMPDEST"
										},
										{
											"begin": 2062,
											"end": 2071,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2066,
											"end": 2070,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2066,
											"end": 2070,
											"name": "SLOAD"
										},
										{
											"begin": 2062,
											"end": 2065,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 2062,
											"end": 2071,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2062,
											"end": 2071,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2062,
											"end": 2071,
											"name": "JUMPDEST"
										},
										{
											"begin": 2062,
											"end": 2099,
											"name": "ADD"
										},
										{
											"begin": 2058,
											"end": 2061,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2058,
											"end": 2100,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2058,
											"end": 2100,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2058,
											"end": 2100,
											"name": "JUMPDEST"
										},
										{
											"begin": 2051,
											"end": 2055,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2051,
											"end": 2100,
											"name": "DUP2"
										},
										{
											"begin": 2051,
											"end": 2100,
											"name": "SWAP1"
										},
										{
											"begin": 2051,
											"end": 2100,
											"name": "SSTORE"
										},
										{
											"begin": 2051,
											"end": 2100,
											"name": "POP"
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "JUMPDEST"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "POP"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "POP"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "POP"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "POP"
										},
										{
											"begin": 1759,
											"end": 2107,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1251,
											"end": 1257,
											"name": "DUP1"
										},
										{
											"begin": 1243,
											"end": 1248,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1243,
											"end": 1248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "EXP"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP2"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SLOAD"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP2"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "MUL"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "NOT"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "AND"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SWAP1"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP4"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "AND"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "MUL"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "OR"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SWAP1"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SSTORE"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "POP"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SLOAD"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "EXP"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "DIV"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "AND"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "AND"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "MLOAD"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "MLOAD"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "DUP1"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SWAP2"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SUB"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SWAP1"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "LOG2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "JUMPDEST"
										},
										{
											"begin": 1237,
											"end": 1241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1253,
											"end": 1275,
											"name": "SWAP1"
										},
										{
											"begin": 1253,
											"end": 1275,
											"name": "POP"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "SWAP1"
										},
										{
											"begin": 1201,
											"end": 1282,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "JUMPDEST"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "SLOAD"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "DUP2"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "JUMPDEST"
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "JUMPDEST"
										},
										{
											"begin": 1505,
											"end": 1509,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1505,
											"end": 1509,
											"name": "SLOAD"
										},
										{
											"begin": 1498,
											"end": 1509,
											"name": "SWAP1"
										},
										{
											"begin": 1498,
											"end": 1509,
											"name": "POP"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "SWAP1"
										},
										{
											"begin": 1435,
											"end": 1516,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "JUMPDEST"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1035,
											"name": "DUP1"
										},
										{
											"begin": 1089,
											"end": 1090,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1069,
											"end": 1091,
											"name": "SWAP2"
										},
										{
											"begin": 1069,
											"end": 1091,
											"name": "POP"
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1111,
											"end": 1127,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1104,
											"end": 1127,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1127,
											"name": "POP"
										},
										{
											"begin": 1181,
											"end": 1184,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1176,
											"end": 1179,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1174,
											"name": "CALLER"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "AND"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1186,
											"end": 1195,
											"name": "CALLVALUE"
										},
										{
											"begin": 1197,
											"end": 1205,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1205,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MLOAD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SUB"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MLOAD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SUB"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "LOG4"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1668,
											"end": 1671,
											"name": "DUP3"
										},
										{
											"begin": 1662,
											"end": 1665,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP2"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "SWAP1"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "SSTORE"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1678,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "JUMPDEST"
										},
										{
											"begin": 1552,
											"end": 1556,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 1568,
											"end": 1572,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "JUMPDEST"
										},
										{
											"begin": 1591,
											"end": 1595,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1591,
											"end": 1595,
											"name": "SLOAD"
										},
										{
											"begin": 1584,
											"end": 1595,
											"name": "SWAP1"
										},
										{
											"begin": 1584,
											"end": 1595,
											"name": "POP"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "SWAP1"
										},
										{
											"begin": 1521,
											"end": 1602,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1403,
											"end": 1413,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "EXP"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SLOAD"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "MUL"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "NOT"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP4"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "MUL"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "OR"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SSTORE"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "POP"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DUP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SLOAD"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "EXP"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DIV"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "AND"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "AND"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "MLOAD"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "MLOAD"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "DUP1"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SWAP2"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SUB"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SWAP1"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "LOG2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "EXP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DIV"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "JUMPDEST"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1035,
											"name": "DUP1"
										},
										{
											"begin": 1089,
											"end": 1090,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1069,
											"end": 1091,
											"name": "SWAP2"
										},
										{
											"begin": 1069,
											"end": 1091,
											"name": "POP"
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1111,
											"end": 1127,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1104,
											"end": 1127,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1127,
											"name": "POP"
										},
										{
											"begin": 1181,
											"end": 1184,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1176,
											"end": 1179,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1174,
											"name": "CALLER"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "AND"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1186,
											"end": 1195,
											"name": "CALLVALUE"
										},
										{
											"begin": 1197,
											"end": 1205,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1205,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MLOAD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SUB"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MLOAD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SUB"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "LOG4"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1358,
											"end": 1372,
											"name": "PUSH",
											"value": "7761790000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "DUP5"
										},
										{
											"begin": 1358,
											"end": 1372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1372,
											"name": "NOT"
										},
										{
											"begin": 1358,
											"end": 1372,
											"name": "AND"
										},
										{
											"begin": 1358,
											"end": 1372,
											"name": "EQ"
										},
										{
											"begin": 1354,
											"end": 1384,
											"name": "ISZERO"
										},
										{
											"begin": 1354,
											"end": 1384,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 1354,
											"end": 1384,
											"name": "JUMPI"
										},
										{
											"begin": 1381,
											"end": 1384,
											"name": "DUP3"
										},
										{
											"begin": 1374,
											"end": 1378,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1374,
											"end": 1384,
											"name": "DUP2"
										},
										{
											"begin": 1374,
											"end": 1384,
											"name": "SWAP1"
										},
										{
											"begin": 1374,
											"end": 1384,
											"name": "SSTORE"
										},
										{
											"begin": 1374,
											"end": 1384,
											"name": "POP"
										},
										{
											"begin": 1354,
											"end": 1384,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 1354,
											"end": 1384,
											"name": "JUMPDEST"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "POP"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "POP"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "POP"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "POP"
										},
										{
											"begin": 1288,
											"end": 1391,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "JUMPDEST"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "SLOAD"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "DUP2"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "JUMPDEST"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1035,
											"name": "DUP1"
										},
										{
											"begin": 1089,
											"end": 1090,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1069,
											"end": 1091,
											"name": "SWAP2"
										},
										{
											"begin": 1069,
											"end": 1091,
											"name": "POP"
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1111,
											"end": 1127,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1104,
											"end": 1127,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1127,
											"name": "POP"
										},
										{
											"begin": 1181,
											"end": 1184,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1176,
											"end": 1179,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1174,
											"name": "CALLER"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "AND"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1186,
											"end": 1195,
											"name": "CALLVALUE"
										},
										{
											"begin": 1197,
											"end": 1205,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1205,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MLOAD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SUB"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MLOAD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SUB"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "LOG4"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1743,
											"end": 1746,
											"name": "DUP3"
										},
										{
											"begin": 1737,
											"end": 1740,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "DUP2"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "SSTORE"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "POP"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "POP"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "POP"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "POP"
										},
										{
											"begin": 1683,
											"end": 1753,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "EXP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DIV"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "JUMPDEST"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "SLOAD"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "DUP2"
										},
										{
											"begin": 1058,
											"end": 1078,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2576,
											"end": 2833,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2576,
											"end": 2833,
											"name": "JUMPDEST"
										},
										{
											"begin": 2629,
											"end": 2635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2661,
											"name": "DUP1"
										},
										{
											"begin": 2655,
											"end": 2656,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2651,
											"end": 2652,
											"name": "DUP4"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "DUP2"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "ISZERO"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "ISZERO"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "JUMPI"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "INVALID"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "JUMPDEST"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "MOD"
										},
										{
											"begin": 2651,
											"end": 2661,
											"name": "EQ"
										},
										{
											"begin": 2651,
											"end": 2661,
											"name": "ISZERO"
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "JUMPI"
										},
										{
											"begin": 1543,
											"end": 1551,
											"name": "PUSH",
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "JUMP"
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "JUMPDEST"
										},
										{
											"begin": 2664,
											"end": 2665,
											"name": "DUP3"
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "JUMPDEST"
										},
										{
											"begin": 2647,
											"end": 2671,
											"name": "SWAP1"
										},
										{
											"begin": 2647,
											"end": 2671,
											"name": "POP"
										},
										{
											"begin": 2692,
											"end": 2693,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "DUP3"
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "DUP2"
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "ISZERO"
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "ISZERO"
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "JUMPI"
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "INVALID"
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "JUMPDEST"
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "DIV"
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "SWAP2"
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "POP"
										},
										{
											"begin": 2682,
											"end": 2827,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 2682,
											"end": 2827,
											"name": "JUMPDEST"
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2696,
											"name": "DUP3"
										},
										{
											"begin": 2695,
											"end": 2701,
											"name": "EQ"
										},
										{
											"begin": 2695,
											"end": 2701,
											"name": "ISZERO"
										},
										{
											"begin": 2682,
											"end": 2827,
											"name": "ISZERO"
										},
										{
											"begin": 2682,
											"end": 2827,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 2682,
											"end": 2827,
											"name": "JUMPI"
										},
										{
											"begin": 2729,
											"end": 2739,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 2734,
											"end": 2735,
											"name": "DUP4"
										},
										{
											"begin": 2737,
											"end": 2738,
											"name": "DUP5"
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2729,
											"end": 2739,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2729,
											"end": 2739,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 2729,
											"end": 2739,
											"name": "JUMPDEST"
										},
										{
											"begin": 2725,
											"end": 2739,
											"name": "SWAP3"
										},
										{
											"begin": 2725,
											"end": 2739,
											"name": "POP"
										},
										{
											"begin": 2767,
											"end": 2768,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2763,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2758,
											"end": 2759,
											"name": "DUP4"
										},
										{
											"begin": 2758,
											"end": 2763,
											"name": "DUP2"
										},
										{
											"begin": 2758,
											"end": 2763,
											"name": "ISZERO"
										},
										{
											"begin": 2758,
											"end": 2763,
											"name": "ISZERO"
										},
										{
											"begin": 2758,
											"end": 2763,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 2758,
											"end": 2763,
											"name": "JUMPI"
										},
										{
											"begin": 2758,
											"end": 2763,
											"name": "INVALID"
										},
										{
											"begin": 2758,
											"end": 2763,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 2758,
											"end": 2763,
											"name": "JUMPDEST"
										},
										{
											"begin": 2758,
											"end": 2763,
											"name": "MOD"
										},
										{
											"begin": 2758,
											"end": 2768,
											"name": "EQ"
										},
										{
											"begin": 2758,
											"end": 2768,
											"name": "ISZERO"
										},
										{
											"begin": 2754,
											"end": 2817,
											"name": "ISZERO"
										},
										{
											"begin": 2754,
											"end": 2817,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 2754,
											"end": 2817,
											"name": "JUMPI"
										},
										{
											"begin": 2792,
											"end": 2802,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "DUP2"
										},
										{
											"begin": 2800,
											"end": 2801,
											"name": "DUP5"
										},
										{
											"begin": 2792,
											"end": 2796,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2792,
											"end": 2802,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2792,
											"end": 2802,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 2792,
											"end": 2802,
											"name": "JUMPDEST"
										},
										{
											"begin": 2788,
											"end": 2802,
											"name": "SWAP1"
										},
										{
											"begin": 2788,
											"end": 2802,
											"name": "POP"
										},
										{
											"begin": 2754,
											"end": 2817,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 2754,
											"end": 2817,
											"name": "JUMPDEST"
										},
										{
											"begin": 2708,
											"end": 2709,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "DUP3"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "DUP2"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "ISZERO"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "ISZERO"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "JUMPI"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "INVALID"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "JUMPDEST"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "DIV"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "SWAP2"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "POP"
										},
										{
											"begin": 2682,
											"end": 2827,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 2682,
											"end": 2827,
											"name": "JUMP"
										},
										{
											"begin": 2682,
											"end": 2827,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 2682,
											"end": 2827,
											"name": "JUMPDEST"
										},
										{
											"begin": 2576,
											"end": 2833,
											"name": "SWAP3"
										},
										{
											"begin": 2576,
											"end": 2833,
											"name": "SWAP2"
										},
										{
											"begin": 2576,
											"end": 2833,
											"name": "POP"
										},
										{
											"begin": 2576,
											"end": 2833,
											"name": "POP"
										},
										{
											"begin": 2576,
											"end": 2833,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1674,
											"end": 1785,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 1674,
											"end": 1785,
											"name": "JUMPDEST"
										},
										{
											"begin": 1727,
											"end": 1733,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1551,
											"name": "PUSH",
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 1749,
											"end": 1772,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 1753,
											"end": 1762,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 1757,
											"end": 1758,
											"name": "DUP6"
										},
										{
											"begin": 1760,
											"end": 1761,
											"name": "DUP6"
										},
										{
											"begin": 1753,
											"end": 1756,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 1753,
											"end": 1762,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1753,
											"end": 1762,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 1753,
											"end": 1762,
											"name": "JUMPDEST"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1543,
											"end": 1551,
											"name": "PUSH",
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "DUP2"
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "ISZERO"
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "ISZERO"
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "JUMPI"
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "INVALID"
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "JUMPDEST"
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "DIV"
										},
										{
											"begin": 1749,
											"end": 1752,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 1749,
											"end": 1772,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1749,
											"end": 1772,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 1749,
											"end": 1772,
											"name": "JUMPDEST"
										},
										{
											"begin": 1749,
											"end": 1778,
											"name": "DUP2"
										},
										{
											"begin": 1749,
											"end": 1778,
											"name": "ISZERO"
										},
										{
											"begin": 1749,
											"end": 1778,
											"name": "ISZERO"
										},
										{
											"begin": 1749,
											"end": 1778,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 1749,
											"end": 1778,
											"name": "JUMPI"
										},
										{
											"begin": 1749,
											"end": 1778,
											"name": "INVALID"
										},
										{
											"begin": 1749,
											"end": 1778,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 1749,
											"end": 1778,
											"name": "JUMPDEST"
										},
										{
											"begin": 1749,
											"end": 1778,
											"name": "DIV"
										},
										{
											"begin": 1745,
											"end": 1778,
											"name": "SWAP1"
										},
										{
											"begin": 1745,
											"end": 1778,
											"name": "POP"
										},
										{
											"begin": 1674,
											"end": 1785,
											"name": "SWAP3"
										},
										{
											"begin": 1674,
											"end": 1785,
											"name": "SWAP2"
										},
										{
											"begin": 1674,
											"end": 1785,
											"name": "POP"
										},
										{
											"begin": 1674,
											"end": 1785,
											"name": "POP"
										},
										{
											"begin": 1674,
											"end": 1785,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2265,
											"end": 2419,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 2265,
											"end": 2419,
											"name": "JUMPDEST"
										},
										{
											"begin": 2312,
											"end": 2318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1551,
											"name": "PUSH",
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "DUP3"
										},
										{
											"begin": 2337,
											"end": 2345,
											"name": "LT"
										},
										{
											"begin": 2337,
											"end": 2345,
											"name": "ISZERO"
										},
										{
											"begin": 2337,
											"end": 2412,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 2337,
											"end": 2412,
											"name": "JUMPI"
										},
										{
											"begin": 2399,
											"end": 2411,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 1543,
											"end": 1551,
											"name": "PUSH",
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 2409,
											"end": 2410,
											"name": "DUP4"
										},
										{
											"begin": 2399,
											"end": 2403,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 2399,
											"end": 2411,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2399,
											"end": 2411,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 2399,
											"end": 2411,
											"name": "JUMPDEST"
										},
										{
											"begin": 1543,
											"end": 1551,
											"name": "PUSH",
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 2378,
											"end": 2412,
											"name": "SUB"
										},
										{
											"begin": 2337,
											"end": 2412,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 2337,
											"end": 2412,
											"name": "JUMP"
										},
										{
											"begin": 2337,
											"end": 2412,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 2337,
											"end": 2412,
											"name": "JUMPDEST"
										},
										{
											"begin": 1543,
											"end": 1551,
											"name": "PUSH",
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 2355,
											"end": 2356,
											"name": "DUP3"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "SUB"
										},
										{
											"begin": 2337,
											"end": 2412,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 2337,
											"end": 2412,
											"name": "JUMPDEST"
										},
										{
											"begin": 2330,
											"end": 2412,
											"name": "SWAP1"
										},
										{
											"begin": 2330,
											"end": 2412,
											"name": "POP"
										},
										{
											"begin": 2265,
											"end": 2419,
											"name": "SWAP2"
										},
										{
											"begin": 2265,
											"end": 2419,
											"name": "SWAP1"
										},
										{
											"begin": 2265,
											"end": 2419,
											"name": "POP"
										},
										{
											"begin": 2265,
											"end": 2419,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2113,
											"end": 2260,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2113,
											"end": 2260,
											"name": "JUMPDEST"
										},
										{
											"begin": 2159,
											"end": 2166,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2191,
											"name": "DUP1"
										},
										{
											"begin": 2185,
											"end": 2186,
											"name": "DUP3"
										},
										{
											"begin": 2185,
											"end": 2191,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 2185,
											"end": 2191,
											"name": "SIGNEXTEND"
										},
										{
											"begin": 2185,
											"end": 2191,
											"name": "SLT"
										},
										{
											"begin": 2185,
											"end": 2191,
											"name": "ISZERO"
										},
										{
											"begin": 2185,
											"end": 2253,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 2185,
											"end": 2253,
											"name": "JUMPI"
										},
										{
											"begin": 2225,
											"end": 2253,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 1543,
											"end": 1551,
											"name": "PUSH",
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 2250,
											"end": 2251,
											"name": "DUP4"
										},
										{
											"begin": 2249,
											"end": 2251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2251,
											"name": "SUB"
										},
										{
											"begin": 2241,
											"end": 2252,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 2241,
											"end": 2252,
											"name": "SIGNEXTEND"
										},
										{
											"begin": 1543,
											"end": 1551,
											"name": "PUSH",
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 2235,
											"end": 2252,
											"name": "ADD"
										},
										{
											"begin": 2225,
											"end": 2229,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 2225,
											"end": 2253,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2225,
											"end": 2253,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 2225,
											"end": 2253,
											"name": "JUMPDEST"
										},
										{
											"begin": 2185,
											"end": 2253,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 2185,
											"end": 2253,
											"name": "JUMP"
										},
										{
											"begin": 2185,
											"end": 2253,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 2185,
											"end": 2253,
											"name": "JUMPDEST"
										},
										{
											"begin": 1543,
											"end": 1551,
											"name": "PUSH",
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 2202,
											"end": 2203,
											"name": "DUP3"
										},
										{
											"begin": 2194,
											"end": 2204,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 2194,
											"end": 2204,
											"name": "SIGNEXTEND"
										},
										{
											"begin": 2194,
											"end": 2210,
											"name": "ADD"
										},
										{
											"begin": 2185,
											"end": 2253,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 2185,
											"end": 2253,
											"name": "JUMPDEST"
										},
										{
											"begin": 2178,
											"end": 2253,
											"name": "SWAP1"
										},
										{
											"begin": 2178,
											"end": 2253,
											"name": "POP"
										},
										{
											"begin": 2113,
											"end": 2260,
											"name": "SWAP2"
										},
										{
											"begin": 2113,
											"end": 2260,
											"name": "SWAP1"
										},
										{
											"begin": 2113,
											"end": 2260,
											"name": "POP"
										},
										{
											"begin": 2113,
											"end": 2260,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMPDEST"
										},
										{
											"begin": 1660,
											"end": 1664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1699,
											"name": "ADDRESS"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "AND"
										},
										{
											"begin": 1680,
											"end": 1683,
											"name": "DUP4"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "AND"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "EQ"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1723,
											"end": 1727,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "SWAP1"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "POP"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "JUMP"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SLOAD"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "EXP"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "DIV"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "DUP4"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "EQ"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1783,
											"end": 1787,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "SWAP1"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "POP"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "JUMP"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "DUP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SLOAD"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "EXP"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "DIV"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "EQ"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1867,
											"end": 1872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "SWAP1"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "POP"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "JUMP"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SLOAD"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "EXP"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DIV"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "PUSH",
											"value": "B7009613"
										},
										{
											"begin": 1928,
											"end": 1931,
											"name": "DUP5"
										},
										{
											"begin": 1941,
											"end": 1945,
											"name": "ADDRESS"
										},
										{
											"begin": 1948,
											"end": 1951,
											"name": "DUP6"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP5"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MUL"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP5"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP3"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "NOT"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "NOT"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SUB"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP8"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "GAS"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "CALL"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP3"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1903,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMPDEST"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "SWAP3"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "SWAP2"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 958,
											"end": 1074,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 958,
											"end": 1074,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1042,
											"name": "DUP1"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "DUP3"
										},
										{
											"begin": 1036,
											"end": 1042,
											"name": "EQ"
										},
										{
											"begin": 1036,
											"end": 1066,
											"name": "DUP1"
										},
										{
											"begin": 1036,
											"end": 1066,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 1036,
											"end": 1066,
											"name": "JUMPI"
										},
										{
											"begin": 1036,
											"end": 1066,
											"name": "POP"
										},
										{
											"begin": 1065,
											"end": 1066,
											"name": "DUP3"
										},
										{
											"begin": 1060,
											"end": 1061,
											"name": "DUP3"
										},
										{
											"begin": 1055,
											"end": 1056,
											"name": "DUP4"
										},
										{
											"begin": 1051,
											"end": 1052,
											"name": "DUP6"
										},
										{
											"begin": 1051,
											"end": 1056,
											"name": "MUL"
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "SWAP3"
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "POP"
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "DUP3"
										},
										{
											"begin": 1046,
											"end": 1061,
											"name": "DUP2"
										},
										{
											"begin": 1046,
											"end": 1061,
											"name": "ISZERO"
										},
										{
											"begin": 1046,
											"end": 1061,
											"name": "ISZERO"
										},
										{
											"begin": 1046,
											"end": 1061,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 1046,
											"end": 1061,
											"name": "JUMPI"
										},
										{
											"begin": 1046,
											"end": 1061,
											"name": "INVALID"
										},
										{
											"begin": 1046,
											"end": 1061,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 1046,
											"end": 1061,
											"name": "JUMPDEST"
										},
										{
											"begin": 1046,
											"end": 1061,
											"name": "DIV"
										},
										{
											"begin": 1046,
											"end": 1066,
											"name": "EQ"
										},
										{
											"begin": 1036,
											"end": 1066,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 1036,
											"end": 1066,
											"name": "JUMPDEST"
										},
										{
											"begin": 1028,
											"end": 1067,
											"name": "ISZERO"
										},
										{
											"begin": 1028,
											"end": 1067,
											"name": "ISZERO"
										},
										{
											"begin": 1028,
											"end": 1067,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 1028,
											"end": 1067,
											"name": "JUMPI"
										},
										{
											"begin": 1028,
											"end": 1067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1067,
											"name": "DUP1"
										},
										{
											"begin": 1028,
											"end": 1067,
											"name": "REVERT"
										},
										{
											"begin": 1028,
											"end": 1067,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 1028,
											"end": 1067,
											"name": "JUMPDEST"
										},
										{
											"begin": 958,
											"end": 1074,
											"name": "SWAP3"
										},
										{
											"begin": 958,
											"end": 1074,
											"name": "SWAP2"
										},
										{
											"begin": 958,
											"end": 1074,
											"name": "POP"
										},
										{
											"begin": 958,
											"end": 1074,
											"name": "POP"
										},
										{
											"begin": 958,
											"end": 1074,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 744,
											"end": 846,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 744,
											"end": 846,
											"name": "JUMPDEST"
										},
										{
											"begin": 796,
											"end": 802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 837,
											"end": 838,
											"name": "DUP3"
										},
										{
											"begin": 831,
											"end": 832,
											"name": "DUP3"
										},
										{
											"begin": 827,
											"end": 828,
											"name": "DUP5"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "ADD"
										},
										{
											"begin": 823,
											"end": 832,
											"name": "SWAP2"
										},
										{
											"begin": 823,
											"end": 832,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 832,
											"name": "DUP2"
										},
										{
											"begin": 822,
											"end": 838,
											"name": "LT"
										},
										{
											"begin": 822,
											"end": 838,
											"name": "ISZERO"
										},
										{
											"begin": 814,
											"end": 839,
											"name": "ISZERO"
										},
										{
											"begin": 814,
											"end": 839,
											"name": "ISZERO"
										},
										{
											"begin": 814,
											"end": 839,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 814,
											"end": 839,
											"name": "JUMPI"
										},
										{
											"begin": 814,
											"end": 839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 814,
											"end": 839,
											"name": "DUP1"
										},
										{
											"begin": 814,
											"end": 839,
											"name": "REVERT"
										},
										{
											"begin": 814,
											"end": 839,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 814,
											"end": 839,
											"name": "JUMPDEST"
										},
										{
											"begin": 744,
											"end": 846,
											"name": "SWAP3"
										},
										{
											"begin": 744,
											"end": 846,
											"name": "SWAP2"
										},
										{
											"begin": 744,
											"end": 846,
											"name": "POP"
										},
										{
											"begin": 744,
											"end": 846,
											"name": "POP"
										},
										{
											"begin": 744,
											"end": 846,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1904,
											"end": 2013,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 1904,
											"end": 2013,
											"name": "JUMPDEST"
										},
										{
											"begin": 1957,
											"end": 1963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2006,
											"name": "DUP2"
										},
										{
											"begin": 1979,
											"end": 2002,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 1983,
											"end": 1994,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "DUP6"
										},
										{
											"begin": 1543,
											"end": 1551,
											"name": "PUSH",
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 1983,
											"end": 1994,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 1994,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 1983,
											"end": 1994,
											"name": "JUMPDEST"
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1996,
											"end": 1997,
											"name": "DUP6"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "DUP2"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "ISZERO"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "ISZERO"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "JUMPI"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "INVALID"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "JUMPDEST"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "DIV"
										},
										{
											"begin": 1979,
											"end": 1982,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 1979,
											"end": 2002,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1979,
											"end": 2002,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 1979,
											"end": 2002,
											"name": "JUMPDEST"
										},
										{
											"begin": 1979,
											"end": 2006,
											"name": "DUP2"
										},
										{
											"begin": 1979,
											"end": 2006,
											"name": "ISZERO"
										},
										{
											"begin": 1979,
											"end": 2006,
											"name": "ISZERO"
										},
										{
											"begin": 1979,
											"end": 2006,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 1979,
											"end": 2006,
											"name": "JUMPI"
										},
										{
											"begin": 1979,
											"end": 2006,
											"name": "INVALID"
										},
										{
											"begin": 1979,
											"end": 2006,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 1979,
											"end": 2006,
											"name": "JUMPDEST"
										},
										{
											"begin": 1979,
											"end": 2006,
											"name": "DIV"
										},
										{
											"begin": 1975,
											"end": 2006,
											"name": "SWAP1"
										},
										{
											"begin": 1975,
											"end": 2006,
											"name": "POP"
										},
										{
											"begin": 1904,
											"end": 2013,
											"name": "SWAP3"
										},
										{
											"begin": 1904,
											"end": 2013,
											"name": "SWAP2"
										},
										{
											"begin": 1904,
											"end": 2013,
											"name": "POP"
										},
										{
											"begin": 1904,
											"end": 2013,
											"name": "POP"
										},
										{
											"begin": 1904,
											"end": 2013,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"authority()": "bf7e214f",
							"era()": "143e55e0",
							"fix()": "a551878e",
							"how()": "3a4a4233",
							"mold(bytes32,uint256)": "92b0d721",
							"owner()": "8da5cb5b",
							"par()": "495d32cb",
							"prod()": "0302c688",
							"setAuthority(address)": "7a9e5e4b",
							"setOwner(address)": "13af4035",
							"tau()": "cfc4af55",
							"tell(uint256)": "55deb8fc",
							"tune(uint256)": "becda0ea",
							"way()": "5d6542af"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.23+commit.124ca40d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"prod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"era\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"how\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"par\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ray\",\"type\":\"uint256\"}],\"name\":\"tell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"way\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"param\",\"type\":\"bytes32\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"mold\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fix\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ray\",\"type\":\"uint256\"}],\"name\":\"tune\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tau\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"par_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/vox.sol\":\"SaiVox\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ds-auth/auth.sol\":{\"keccak256\":\"0xc02ed2267e6475942b44a1bc837d7691dc0a9febd53cdcb9b733c75a8868c551\",\"urls\":[\"bzzr://bd3fbf232b415b118f5cefe30a3a8e6853960efa6203a205522e35ab7e474eab\"]},\"contracts/ds-math/math.sol\":{\"keccak256\":\"0x961977c4d8637627cd2426212b1e457720913e52674419e910f25741f5057a11\",\"urls\":[\"bzzr://a54443c33dae485bf186455cd58593cbb5187d41231582087d4bc99157a68396\"]},\"contracts/ds-note/note.sol\":{\"keccak256\":\"0xa16a36d355ac085634345bfa5fd6165736e97403ebf59de78a2f9e3025e0bbb1\",\"urls\":[\"bzzr://c712d0b3aab1e6c2dad18d3f4e0ed1aa4bdd66eedbce3f8d5a6862b9f2f19759\"]},\"contracts/ds-thing/thing.sol\":{\"keccak256\":\"0xd817e0f1080f241ec988c41287ad39700e0167690c283b0f7f238da8721a2595\",\"urls\":[\"bzzr://3dcfb82881d7931ba173dfd75267c126b4a430a347b7cd9ad26730fe95e0255a\"]},\"contracts/vox.sol\":{\"keccak256\":\"0xe7c23aa9b042bdbceab72bcaf8b5ffd822abf71b567dceed3557fc708b79e147\",\"urls\":[\"bzzr://0de5f5223e0d450286397b87f8f70a1707033e19ab0a16b0582ad017022f8ee1\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/vox.sol:32:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function SaiVox(uint par_) public {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1195,
					"file": "contracts/vox.sol",
					"start": 1085
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/vox.sol:64:9: Warning: Use of the \"var\" keyword is deprecated.\n        var age = era() - tau;\n        ^-----^\n",
				"message": "Use of the \"var\" keyword is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1804,
					"file": "contracts/vox.sol",
					"start": 1797
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/vox.sol:71:9: Warning: Use of the \"var\" keyword is deprecated.\n        var wag = int128(how * age);\n        ^-----^\n",
				"message": "Use of the \"var\" keyword is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2021,
					"file": "contracts/vox.sol",
					"start": 2014
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/ds-note/note.sol:37:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data);\n        ^---------------------------------------------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1206,
					"file": "contracts/ds-note/note.sol",
					"start": 1147
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ds-auth/auth.sol": {
				"ast": {
					"absolutePath": "contracts/ds-auth/auth.sol",
					"exportedSymbols": {
						"DSAuth": [
							138
						],
						"DSAuthEvents": [
							22
						],
						"DSAuthority": [
							13
						]
					},
					"id": 139,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "677:25:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "DSAuthority",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 12,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "canCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "758:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "771:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"name": "sig",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "784:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 6,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "784:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "748:52:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "824:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "824:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "823:6:0"
									},
									"scope": 13,
									"src": "732:98:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 139,
							"src": "704:128:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "DSAuthEvents",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 17,
									"name": "LogSetAuthority",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"name": "authority",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "885:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "884:27:0"
									},
									"src": "862:50:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 21,
									"name": "LogSetOwner",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "940:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "939:23:0"
									},
									"src": "917:46:0"
								}
							],
							"scope": 139,
							"src": "834:131:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 23,
										"name": "DSAuthEvents",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "986:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DSAuthEvents_$22",
											"typeString": "contract DSAuthEvents"
										}
									},
									"id": 24,
									"nodeType": "InheritanceSpecifier",
									"src": "986:12:0"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 138,
							"linearizedBaseContracts": [
								138,
								22
							],
							"name": "DSAuth",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 26,
									"name": "authority",
									"nodeType": "VariableDeclaration",
									"scope": 138,
									"src": "1005:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_DSAuthority_$13",
										"typeString": "contract DSAuthority"
									},
									"typeName": {
										"contractScope": null,
										"id": 25,
										"name": "DSAuthority",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 13,
										"src": "1005:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DSAuthority_$13",
											"typeString": "contract DSAuthority"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 28,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 138,
									"src": "1039:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1039:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "1088:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 31,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1098:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 32,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "1106:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1106:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1098:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1098:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 37,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "1143:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1143:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 36,
														"name": "LogSetOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1131:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1131:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "EmitStatement",
												"src": "1126:28:0"
											}
										]
									},
									"documentation": null,
									"id": 42,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1078:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1088:0:0"
									},
									"scope": 138,
									"src": "1067:94:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1233:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 49,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1243:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 50,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "1251:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1243:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1243:14:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 54,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1284:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 53,
														"name": "LogSetOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1272:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1272:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "EmitStatement",
												"src": "1267:23:0"
											}
										]
									},
									"documentation": null,
									"id": 58,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 47,
											"modifierName": {
												"argumentTypes": null,
												"id": 46,
												"name": "auth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 90,
												"src": "1224:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1224:4:0"
										}
									],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "owner_",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1185:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1184:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1233:0:0"
									},
									"scope": 138,
									"src": "1167:130:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "1381:89:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 65,
														"name": "authority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1391:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_DSAuthority_$13",
															"typeString": "contract DSAuthority"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 66,
														"name": "authority_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "1403:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_DSAuthority_$13",
															"typeString": "contract DSAuthority"
														}
													},
													"src": "1391:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_DSAuthority_$13",
														"typeString": "contract DSAuthority"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "1391:22:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 71,
																	"name": "authority",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "1452:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DSAuthority_$13",
																		"typeString": "contract DSAuthority"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DSAuthority_$13",
																		"typeString": "contract DSAuthority"
																	}
																],
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1444:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1444:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 69,
														"name": "LogSetAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1428:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1428:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "EmitStatement",
												"src": "1423:40:0"
											}
										]
									},
									"documentation": null,
									"id": 76,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 63,
											"modifierName": {
												"argumentTypes": null,
												"id": 62,
												"name": "auth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 90,
												"src": "1372:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1372:4:0"
										}
									],
									"name": "setAuthority",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"name": "authority_",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1325:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_DSAuthority_$13",
													"typeString": "contract DSAuthority"
												},
												"typeName": {
													"contractScope": null,
													"id": 59,
													"name": "DSAuthority",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 13,
													"src": "1325:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_DSAuthority_$13",
														"typeString": "contract DSAuthority"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1324:24:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:0:0"
									},
									"scope": 138,
									"src": "1303:167:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1490:94:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 80,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "1521:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 81,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1521:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 82,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "1533:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sig",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1533:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 79,
																"name": "isAuthorized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "1508:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																	"typeString": "function (address,bytes4) view returns (bool)"
																}
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1508:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d617574682d756e617574686f72697a6564",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1543:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_166b1fe4059d096071443d23428666de4ceaca5dfeecf186a801a33a4cdbddd9",
																"typeString": "literal_string \"ds-auth-unauthorized\""
															},
															"value": "ds-auth-unauthorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_166b1fe4059d096071443d23428666de4ceaca5dfeecf186a801a33a4cdbddd9",
																"typeString": "literal_string \"ds-auth-unauthorized\""
															}
														],
														"id": 78,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															760,
															761
														],
														"referencedDeclaration": 761,
														"src": "1500:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1500:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1500:66:0"
											},
											{
												"id": 88,
												"nodeType": "PlaceholderStatement",
												"src": "1576:1:0"
											}
										]
									},
									"documentation": null,
									"id": 90,
									"name": "auth",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:0:0"
									},
									"src": "1476:108:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "1666:303:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 99,
														"name": "src",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "1680:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 101,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "1695:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DSAuth_$138",
																	"typeString": "contract DSAuth"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_DSAuth_$138",
																	"typeString": "contract DSAuth"
																}
															],
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1687:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1687:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1680:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 107,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "1748:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 108,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1755:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1748:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_contract$_DSAuthority_$13",
																"typeString": "contract DSAuthority"
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 113,
																"name": "authority",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1808:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DSAuthority_$13",
																	"typeString": "contract DSAuthority"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1841:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1833:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1833:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "DSAuthority",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1821:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_DSAuthority_$13_$",
																		"typeString": "type(contract DSAuthority)"
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1821:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DSAuthority_$13",
																	"typeString": "contract DSAuthority"
																}
															},
															"src": "1808:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 132,
															"nodeType": "Block",
															"src": "1889:74:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 125,
																				"name": "src",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 92,
																				"src": "1928:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 127,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 774,
																						"src": "1941:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_DSAuth_$138",
																							"typeString": "contract DSAuth"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_DSAuth_$138",
																							"typeString": "contract DSAuth"
																						}
																					],
																					"id": 126,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1933:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": "address"
																				},
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1933:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 129,
																				"name": "sig",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 94,
																				"src": "1948:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 123,
																				"name": "authority",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "1910:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DSAuthority_$13",
																					"typeString": "contract DSAuthority"
																				}
																			},
																			"id": 124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "canCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 12,
																			"src": "1910:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_bytes4_$returns$_t_bool_$",
																				"typeString": "function (address,address,bytes4) view external returns (bool)"
																			}
																		},
																		"id": 130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1910:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 98,
																	"id": 131,
																	"nodeType": "Return",
																	"src": "1903:49:0"
																}
															]
														},
														"id": 133,
														"nodeType": "IfStatement",
														"src": "1804:159:0",
														"trueBody": {
															"id": 122,
															"nodeType": "Block",
															"src": "1846:37:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"hexValue": "66616c7365",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1867:5:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"functionReturnParameters": 98,
																	"id": 121,
																	"nodeType": "Return",
																	"src": "1860:12:0"
																}
															]
														}
													},
													"id": 134,
													"nodeType": "IfStatement",
													"src": "1744:219:0",
													"trueBody": {
														"id": 112,
														"nodeType": "Block",
														"src": "1762:36:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1783:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"functionReturnParameters": 98,
																"id": 111,
																"nodeType": "Return",
																"src": "1776:11:0"
															}
														]
													}
												},
												"id": 135,
												"nodeType": "IfStatement",
												"src": "1676:287:0",
												"trueBody": {
													"id": 106,
													"nodeType": "Block",
													"src": "1702:36:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1723:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 98,
															"id": 105,
															"nodeType": "Return",
															"src": "1716:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 137,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "isAuthorized",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1612:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"name": "sig",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1625:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 93,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1625:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1611:25:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1660:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 96,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1660:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1659:6:0"
									},
									"scope": 138,
									"src": "1590:379:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 139,
							"src": "967:1004:0"
						}
					],
					"src": "677:1294:0"
				},
				"id": 0
			},
			"contracts/ds-math/math.sol": {
				"ast": {
					"absolutePath": "contracts/ds-math/math.sol",
					"exportedSymbols": {
						"DSMath": [
							439
						]
					},
					"id": 440,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 140,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "696:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 439,
							"linearizedBaseContracts": [
								439
							],
							"name": "DSMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "804:42:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 150,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "823:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 151,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 142,
																				"src": "827:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 152,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 144,
																				"src": "831:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "827:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "823:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 155,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "822:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 156,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "837:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "822:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															760,
															761
														],
														"referencedDeclaration": 760,
														"src": "814:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "814:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "814:25:1"
											}
										]
									},
									"documentation": null,
									"id": 161,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "757:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "757:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "765:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "765:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "756:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "796:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "796:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "795:8:1"
									},
									"scope": 439,
									"src": "744:102:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "911:42:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 171,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 168,
																			"src": "930:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 172,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 163,
																				"src": "934:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 173,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 165,
																				"src": "938:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "934:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "930:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 176,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "929:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 177,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "944:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "929:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															760,
															761
														],
														"referencedDeclaration": 760,
														"src": "921:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "921:25:1"
											}
										]
									},
									"documentation": null,
									"id": 182,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "864:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "864:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "872:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "872:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "863:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "903:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "903:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "902:8:1"
									},
									"scope": 439,
									"src": "851:102:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "1018:56:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 192,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "1036:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1041:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1036:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 195,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 189,
																					"src": "1047:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 196,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 184,
																						"src": "1051:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 197,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 186,
																						"src": "1055:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1051:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1047:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 200,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1046:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 201,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 186,
																		"src": "1060:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1046:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 203,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "1065:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1046:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1036:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															760,
															761
														],
														"referencedDeclaration": 760,
														"src": "1028:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1028:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "1028:39:1"
											}
										]
									},
									"documentation": null,
									"id": 209,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "971:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "971:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "979:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "979:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "970:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1010:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1010:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1009:8:1"
									},
									"scope": 439,
									"src": "958:116:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "1140:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 218,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "1157:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 219,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "1162:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1157:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 222,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "1170:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1157:14:1",
													"trueExpression": {
														"argumentTypes": null,
														"id": 221,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1166:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 217,
												"id": 224,
												"nodeType": "Return",
												"src": "1150:21:1"
											}
										]
									},
									"documentation": null,
									"id": 226,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1093:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1093:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1101:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1101:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1092:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1132:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1132:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1131:8:1"
									},
									"scope": 439,
									"src": "1080:98:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "1243:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 235,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "1260:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 236,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "1265:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1260:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 239,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "1273:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1260:14:1",
													"trueExpression": {
														"argumentTypes": null,
														"id": 238,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "1269:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 234,
												"id": 241,
												"nodeType": "Return",
												"src": "1253:21:1"
											}
										]
									},
									"documentation": null,
									"id": 243,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1196:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1196:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1204:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1204:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1195:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1235:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1234:8:1"
									},
									"scope": 439,
									"src": "1183:98:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "1344:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 252,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "1361:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 253,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "1366:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "1361:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 256,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "1374:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1361:14:1",
													"trueExpression": {
														"argumentTypes": null,
														"id": 255,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "1370:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 251,
												"id": 258,
												"nodeType": "Return",
												"src": "1354:21:1"
											}
										]
									},
									"documentation": null,
									"id": 260,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "imin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1300:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 244,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1300:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1307:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 246,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1307:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1299:14:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1337:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 249,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1337:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1336:7:1"
									},
									"scope": 439,
									"src": "1286:96:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1445:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 269,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "1462:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 270,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "1467:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "1462:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 273,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "1475:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1462:14:1",
													"trueExpression": {
														"argumentTypes": null,
														"id": 272,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "1471:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 268,
												"id": 275,
												"nodeType": "Return",
												"src": "1455:21:1"
											}
										]
									},
									"documentation": null,
									"id": 277,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "imax",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1401:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 261,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1401:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1408:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 263,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1408:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1400:14:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1438:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 266,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1438:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1437:7:1"
									},
									"scope": 439,
									"src": "1387:96:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 282,
									"name": "WAD",
									"nodeType": "VariableDeclaration",
									"scope": 439,
									"src": "1489:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 278,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1489:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 281,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 279,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1509:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3138",
											"id": 280,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1515:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "1509:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 287,
									"name": "RAY",
									"nodeType": "VariableDeclaration",
									"scope": 439,
									"src": "1523:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 283,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1523:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 286,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 284,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1543:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3237",
											"id": 285,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1549:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_27_by_1",
												"typeString": "int_const 27"
											},
											"value": "27"
										},
										"src": "1543:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1619:50:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 296,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "1629:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 299,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 289,
																			"src": "1641:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 300,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "1644:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 298,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "1637:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1637:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 302,
																		"name": "WAD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "1648:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1654:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1648:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 297,
																"name": "add",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "1633:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1633:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 306,
															"name": "WAD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1659:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1633:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1629:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1629:33:1"
											}
										]
									},
									"documentation": null,
									"id": 311,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "wmul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1572:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1572:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1580:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1580:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1571:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1611:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1611:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1610:8:1"
									},
									"scope": 439,
									"src": "1558:111:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "1735:50:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 320,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "1745:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 323,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 313,
																			"src": "1757:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 324,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "1760:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 322,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "1753:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1753:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 326,
																		"name": "RAY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "1764:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1770:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1764:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 321,
																"name": "add",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "1749:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1749:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 330,
															"name": "RAY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "1775:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1749:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1745:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "1745:33:1"
											}
										]
									},
									"documentation": null,
									"id": 335,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "rmul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1688:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1688:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1696:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1696:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1687:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1727:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1727:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1726:8:1"
									},
									"scope": 439,
									"src": "1674:111:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1851:48:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 344,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "1861:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 347,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 337,
																			"src": "1873:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 348,
																			"name": "WAD",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "1876:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 346,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "1869:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1869:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 350,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 339,
																		"src": "1882:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1886:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1882:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 345,
																"name": "add",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "1865:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1865:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 354,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "1891:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1865:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1861:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "1861:31:1"
											}
										]
									},
									"documentation": null,
									"id": 359,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "wdiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1804:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1804:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1812:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1812:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1803:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1843:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1843:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1842:8:1"
									},
									"scope": 439,
									"src": "1790:109:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "1965:48:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 368,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "1975:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 371,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 361,
																			"src": "1987:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 372,
																			"name": "RAY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1990:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 370,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "1983:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1983:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 374,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "1996:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2000:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1996:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 369,
																"name": "add",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "1979:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1979:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 378,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "2005:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1979:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1975:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "1975:31:1"
											}
										]
									},
									"documentation": null,
									"id": 383,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "rdiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1918:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1918:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1926:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1926:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1917:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1957:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1957:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1956:8:1"
									},
									"scope": 439,
									"src": "1904:109:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "2637:196:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 392,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2647:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 393,
																	"name": "n",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "2651:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2655:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2651:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2660:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2651:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 399,
															"name": "RAY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "2668:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "2651:20:1",
														"trueExpression": {
															"argumentTypes": null,
															"id": 398,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "2664:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2647:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "2647:24:1"
											},
											{
												"body": {
													"id": 435,
													"nodeType": "Block",
													"src": "2711:116:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 414,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2725:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 416,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 385,
																			"src": "2734:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 417,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 385,
																			"src": "2737:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 415,
																		"name": "rmul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "2729:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2729:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2725:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 420,
															"nodeType": "ExpressionStatement",
															"src": "2725:14:1"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 421,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "2758:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2762:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2758:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2767:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2758:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 434,
															"nodeType": "IfStatement",
															"src": "2754:63:1",
															"trueBody": {
																"id": 433,
																"nodeType": "Block",
																"src": "2770:47:1",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 426,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "2788:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 428,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 390,
																						"src": "2797:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 429,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 385,
																						"src": "2800:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 427,
																					"name": "rmul",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 335,
																					"src": "2792:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2792:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2788:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 432,
																		"nodeType": "ExpressionStatement",
																		"src": "2788:14:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 407,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "2695:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2700:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2695:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 436,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 403,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "2687:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "/=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2692:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2687:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 406,
													"nodeType": "ExpressionStatement",
													"src": "2687:6:1"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 410,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "2703:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "/=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2708:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2703:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 413,
													"nodeType": "ExpressionStatement",
													"src": "2703:6:1"
												},
												"nodeType": "ForStatement",
												"src": "2682:145:1"
											}
										]
									},
									"documentation": null,
									"id": 438,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "rpow",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2590:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2590:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2598:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2598:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2589:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2629:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2629:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2628:8:1"
									},
									"scope": 439,
									"src": "2576:257:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 440,
							"src": "722:2113:1"
						}
					],
					"src": "696:2139:1"
				},
				"id": 1
			},
			"contracts/ds-note/note.sol": {
				"ast": {
					"absolutePath": "contracts/ds-note/note.sol",
					"exportedSymbols": {
						"DSNote": [
							480
						]
					},
					"id": 481,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 441,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "709:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 480,
							"linearizedBaseContracts": [
								480
							],
							"name": "DSNote",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": true,
									"documentation": null,
									"id": 455,
									"name": "LogNote",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"indexed": true,
												"name": "sig",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "780:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 442,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "780:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"name": "guy",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "811:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"indexed": true,
												"name": "foo",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "842:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 446,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"name": "bar",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "873:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 448,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": false,
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "904:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "904:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": false,
												"name": "fax",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "935:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "935:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "770:192:2"
									},
									"src": "757:216:2"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "993:232:2",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"name": "foo",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "1003:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 457,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1003:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 459,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1003:11:2"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"name": "bar",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "1024:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 460,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1024:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 462,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1024:11:2"
											},
											{
												"externalReferences": [
													{
														"foo": {
															"declaration": 458,
															"isOffset": false,
															"isSlot": false,
															"src": "1069:3:2",
															"valueSize": 1
														}
													},
													{
														"bar": {
															"declaration": 461,
															"isOffset": false,
															"isSlot": false,
															"src": "1104:3:2",
															"valueSize": 1
														}
													}
												],
												"id": 463,
												"nodeType": "InlineAssembly",
												"operations": "{\n    foo := calldataload(4)\n    bar := calldataload(36)\n}",
												"src": "1046:108:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "1155:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sig",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1155:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 467,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "1164:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1164:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 469,
															"name": "foo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "1176:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 470,
															"name": "bar",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "1181:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 471,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "1186:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1186:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 473,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "1197:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1197:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 464,
														"name": "LogNote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "1147:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes4_$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (bytes4,address,bytes32,bytes32,uint256,bytes memory)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:59:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "1147:59:2"
											},
											{
												"id": 477,
												"nodeType": "PlaceholderStatement",
												"src": "1217:1:2"
											}
										]
									},
									"documentation": null,
									"id": 479,
									"name": "note",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "993:0:2"
									},
									"src": "979:246:2",
									"visibility": "internal"
								}
							],
							"scope": 481,
							"src": "735:492:2"
						}
					],
					"src": "709:518:2"
				},
				"id": 2
			},
			"contracts/ds-thing/thing.sol": {
				"ast": {
					"absolutePath": "contracts/ds-thing/thing.sol",
					"exportedSymbols": {
						"DSThing": [
							506
						]
					},
					"id": 507,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 482,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "753:24:3"
						},
						{
							"absolutePath": "contracts/ds-auth/auth.sol",
							"file": "../ds-auth/auth.sol",
							"id": 483,
							"nodeType": "ImportDirective",
							"scope": 507,
							"sourceUnit": 139,
							"src": "779:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ds-note/note.sol",
							"file": "../ds-note/note.sol",
							"id": 484,
							"nodeType": "ImportDirective",
							"scope": 507,
							"sourceUnit": 481,
							"src": "809:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ds-math/math.sol",
							"file": "../ds-math/math.sol",
							"id": 485,
							"nodeType": "ImportDirective",
							"scope": 507,
							"sourceUnit": 440,
							"src": "839:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 486,
										"name": "DSAuth",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 138,
										"src": "890:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DSAuth_$138",
											"typeString": "contract DSAuth"
										}
									},
									"id": 487,
									"nodeType": "InheritanceSpecifier",
									"src": "890:6:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 488,
										"name": "DSNote",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 480,
										"src": "898:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DSNote_$480",
											"typeString": "contract DSNote"
										}
									},
									"id": 489,
									"nodeType": "InheritanceSpecifier",
									"src": "898:6:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 490,
										"name": "DSMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 439,
										"src": "906:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DSMath_$439",
											"typeString": "contract DSMath"
										}
									},
									"id": 491,
									"nodeType": "InheritanceSpecifier",
									"src": "906:6:3"
								}
							],
							"contractDependencies": [
								480,
								439,
								138,
								22
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 506,
							"linearizedBaseContracts": [
								506,
								439,
								480,
								138,
								22
							],
							"name": "DSThing",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "972:44:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 500,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "1006:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 499,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "996:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																	"typeString": "function () pure returns (bytes32)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "996:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "989:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": "bytes4"
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "989:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 497,
												"id": 503,
												"nodeType": "Return",
												"src": "982:27:3"
											}
										]
									},
									"documentation": null,
									"id": 505,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "S",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "931:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 492,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "931:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "930:10:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "964:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 495,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "963:8:3"
									},
									"scope": 506,
									"src": "920:96:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 507,
							"src": "870:149:3"
						}
					],
					"src": "753:266:3"
				},
				"id": 3
			},
			"contracts/vox.sol": {
				"ast": {
					"absolutePath": "contracts/vox.sol",
					"exportedSymbols": {
						"SaiVox": [
							742
						]
					},
					"id": 743,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 508,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "876:24:4"
						},
						{
							"absolutePath": "contracts/ds-thing/thing.sol",
							"file": "./ds-thing/thing.sol",
							"id": 509,
							"nodeType": "ImportDirective",
							"scope": 743,
							"sourceUnit": 507,
							"src": "902:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 510,
										"name": "DSThing",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 506,
										"src": "953:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DSThing_$506",
											"typeString": "contract DSThing"
										}
									},
									"id": 511,
									"nodeType": "InheritanceSpecifier",
									"src": "953:7:4"
								}
							],
							"contractDependencies": [
								506,
								480,
								439,
								138,
								22
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 742,
							"linearizedBaseContracts": [
								742,
								506,
								439,
								480,
								138,
								22
							],
							"name": "SaiVox",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 513,
									"name": "_par",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "967:13:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 512,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "967:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 515,
									"name": "_way",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "986:13:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 514,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "986:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 517,
									"name": "fix",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "1006:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 516,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1006:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 519,
									"name": "how",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "1032:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 518,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1032:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 521,
									"name": "tau",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "1058:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 520,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1058:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "1119:76:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 526,
														"name": "_par",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "1129:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 527,
															"name": "fix",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "1136:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"id": 528,
															"name": "par_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "1142:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1136:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1129:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "1129:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 532,
														"name": "_way",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "1156:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 533,
														"name": "RAY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "1163:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1156:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "1156:10:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 536,
														"name": "tau",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1176:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 537,
															"name": "era",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "1183:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1183:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1176:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "1176:12:4"
											}
										]
									},
									"documentation": null,
									"id": 542,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "SaiVox",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"name": "par_",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1101:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1101:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1100:11:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1119:0:4"
									},
									"scope": 742,
									"src": "1085:110:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "1243:39:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 547,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1260:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1260:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 546,
												"id": 549,
												"nodeType": "Return",
												"src": "1253:22:4"
											}
										]
									},
									"documentation": null,
									"id": 551,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "era",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1213:2:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "1237:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1237:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1236:6:4"
									},
									"scope": 742,
									"src": "1201:81:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "1344:47:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 562,
														"name": "param",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1358:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "776179",
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1367:5:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_5f37cc913b597bb65d4f42e353a5aadded759d96e18fef351cb9182f034ef21f",
															"typeString": "literal_string \"way\""
														},
														"value": "way"
													},
													"src": "1358:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 569,
												"nodeType": "IfStatement",
												"src": "1354:30:4",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 565,
															"name": "_way",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "1374:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"id": 566,
															"name": "val",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "1381:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1374:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 568,
													"nodeType": "ExpressionStatement",
													"src": "1374:10:4"
												}
											}
										]
									},
									"documentation": null,
									"id": 571,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 558,
											"modifierName": {
												"argumentTypes": null,
												"id": 557,
												"name": "note",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 479,
												"src": "1334:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1334:4:4"
										},
										{
											"arguments": null,
											"id": 560,
											"modifierName": {
												"argumentTypes": null,
												"id": 559,
												"name": "auth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 90,
												"src": "1339:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1339:4:4"
										}
									],
									"name": "mold",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"name": "param",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "1302:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 552,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1302:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"name": "val",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "1317:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1301:25:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1344:0:4"
									},
									"scope": 742,
									"src": "1288:103:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "1472:44:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 576,
														"name": "prod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "1482:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1482:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "1482:6:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 579,
													"name": "_par",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 513,
													"src": "1505:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 575,
												"id": 580,
												"nodeType": "Return",
												"src": "1498:11:4"
											}
										]
									},
									"documentation": null,
									"id": 582,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "par",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1447:2:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "1466:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1466:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1465:6:4"
									},
									"scope": 742,
									"src": "1435:81:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "1558:44:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 587,
														"name": "prod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "1568:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1568:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "1568:6:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 590,
													"name": "_way",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 515,
													"src": "1591:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 586,
												"id": 591,
												"nodeType": "Return",
												"src": "1584:11:4"
											}
										]
									},
									"documentation": null,
									"id": 593,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "way",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1533:2:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "1552:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1552:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1551:6:4"
									},
									"scope": 742,
									"src": "1521:81:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "1652:26:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 602,
														"name": "fix",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "1662:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 603,
														"name": "ray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "1668:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1662:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "1662:9:4"
											}
										]
									},
									"documentation": null,
									"id": 607,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 598,
											"modifierName": {
												"argumentTypes": null,
												"id": 597,
												"name": "note",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 479,
												"src": "1642:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1642:4:4"
										},
										{
											"arguments": null,
											"id": 600,
											"modifierName": {
												"argumentTypes": null,
												"id": 599,
												"name": "auth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 90,
												"src": "1647:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1647:4:4"
										}
									],
									"name": "tell",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"name": "ray",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1622:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1621:13:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:0:4"
									},
									"scope": 742,
									"src": "1608:70:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "1727:26:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 616,
														"name": "how",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "1737:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 617,
														"name": "ray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "1743:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1737:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "1737:9:4"
											}
										]
									},
									"documentation": null,
									"id": 621,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 612,
											"modifierName": {
												"argumentTypes": null,
												"id": 611,
												"name": "note",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 479,
												"src": "1717:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1717:4:4"
										},
										{
											"arguments": null,
											"id": 614,
											"modifierName": {
												"argumentTypes": null,
												"id": 613,
												"name": "auth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 90,
												"src": "1722:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1722:4:4"
										}
									],
									"name": "tune",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"name": "ray",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "1697:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1696:13:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1727:0:4"
									},
									"scope": 742,
									"src": "1683:70:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "1787:320:4",
										"statements": [
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"name": "age",
														"nodeType": "VariableDeclaration",
														"scope": 686,
														"src": "1797:7:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": null,
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 631,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 627,
															"name": "era",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "1807:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1807:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 629,
														"name": "tau",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1815:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1807:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1797:21:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 632,
														"name": "age",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "1832:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1839:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1832:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 636,
												"nodeType": "IfStatement",
												"src": "1828:21:4",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 625,
													"id": 635,
													"nodeType": "Return",
													"src": "1842:7:4"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 637,
														"name": "tau",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1872:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 638,
															"name": "era",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "1878:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1878:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1872:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "1872:11:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 642,
														"name": "_way",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "1898:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 643,
														"name": "RAY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "1906:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1898:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 655,
												"nodeType": "IfStatement",
												"src": "1894:51:4",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 645,
															"name": "_par",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "1911:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 647,
																	"name": "_par",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "1923:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 649,
																			"name": "_way",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 515,
																			"src": "1934:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 650,
																			"name": "age",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "1940:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 648,
																		"name": "rpow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "1929:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1929:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 646,
																"name": "rmul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "1918:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1918:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1911:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 654,
													"nodeType": "ExpressionStatement",
													"src": "1911:34:4"
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 656,
														"name": "how",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "1974:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1981:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1974:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 660,
												"nodeType": "IfStatement",
												"src": "1970:21:4",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 625,
													"id": 659,
													"nodeType": "Return",
													"src": "1984:7:4"
												}
											},
											{
												"assignments": [
													661
												],
												"declarations": [
													{
														"constant": false,
														"id": 661,
														"name": "wag",
														"nodeType": "VariableDeclaration",
														"scope": 686,
														"src": "2014:7:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														},
														"typeName": null,
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 663,
																"name": "how",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "2031:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 664,
																"name": "age",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "2037:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2031:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2024:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int128_$",
															"typeString": "type(int128)"
														},
														"typeName": "int128"
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2024:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2014:27:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 668,
														"name": "_way",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "2051:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 671,
																			"name": "_way",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 515,
																			"src": "2066:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 670,
																		"name": "prj",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "2062:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int128_$",
																			"typeString": "function (uint256) pure returns (int128)"
																		}
																	},
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2062:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 675,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 673,
																					"name": "fix",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 517,
																					"src": "2075:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 674,
																					"name": "_par",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 513,
																					"src": "2081:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2075:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"id": 678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "2094:4:4",
																				"subExpression": {
																					"argumentTypes": null,
																					"id": 677,
																					"name": "wag",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 661,
																					"src": "2095:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			},
																			"id": 679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "2075:23:4",
																			"trueExpression": {
																				"argumentTypes": null,
																				"id": 676,
																				"name": "wag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 661,
																				"src": "2088:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"id": 680,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2074:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"src": "2062:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															],
															"id": 669,
															"name": "inj",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "2058:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int128_$returns$_t_uint256_$",
																"typeString": "function (int128) pure returns (uint256)"
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2058:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2051:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 684,
												"nodeType": "ExpressionStatement",
												"src": "2051:49:4"
											}
										]
									},
									"documentation": null,
									"id": 686,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 624,
											"modifierName": {
												"argumentTypes": null,
												"id": 623,
												"name": "note",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 479,
												"src": "1782:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1782:4:4"
										}
									],
									"name": "prod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1772:2:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1787:0:4"
									},
									"scope": 742,
									"src": "1759:348:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "2168:92:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														},
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 693,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "2185:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2190:1:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2185:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 702,
																"name": "RAY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "2230:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 703,
																	"name": "RAY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "2235:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "2249:2:4",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 705,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 688,
																				"src": "2250:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2241:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint256"
																	},
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2241:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2235:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 701,
															"name": "rdiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "2225:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2225:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2185:68:4",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 697,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "2202:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2194:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2194:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 699,
															"name": "RAY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "2207:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2194:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 692,
												"id": 711,
												"nodeType": "Return",
												"src": "2178:75:4"
											}
										]
									},
									"documentation": null,
									"id": 713,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "inj",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "2126:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 687,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "2126:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2125:10:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "2159:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2158:9:4"
									},
									"scope": 742,
									"src": "2113:147:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "2320:99:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 720,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "2337:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 721,
															"name": "RAY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "2342:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2337:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 729,
																	"name": "RAY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "2385:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2378:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": "int128"
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2378:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 733,
																			"name": "RAY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "2404:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 734,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "2409:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 732,
																		"name": "rdiv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "2399:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2399:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2392:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": "int128"
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2392:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"src": "2378:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2337:75:4",
													"trueExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 724,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "2355:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 725,
																	"name": "RAY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "2359:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2355:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2348:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": "int128"
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2348:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"functionReturnParameters": 719,
												"id": 739,
												"nodeType": "Return",
												"src": "2330:82:4"
											}
										]
									},
									"documentation": null,
									"id": 741,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "prj",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2278:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2278:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2277:11:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2312:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 717,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "2312:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2311:8:4"
									},
									"scope": 742,
									"src": "2265:154:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 743,
							"src": "934:1487:4"
						}
					],
					"src": "876:1546:4"
				},
				"id": 4
			}
		}
	}
}