{
	"id": "54d5c85868d186e46f68629701ace628",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.23",
	"solcLongVersion": "0.4.23+commit.124ca40d",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ds-value/value.sol": {
				"content": "/// value.sol - a value is a simple thing, it can be get and set\n\n// Copyright (C) 2017  DappHub, LLC\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.4.13;\n\nimport '../ds-thing/thing.sol';\n\ncontract DSValue is DSThing {\n    bool    has;\n    bytes32 val;\n    function peek() public view returns (bytes32, bool) {\n        return (val,has);\n    }\n    function read() public view returns (bytes32) {\n        var (wut, haz) = peek();\n        assert(haz);\n        return wut;\n    }\n    function poke(bytes32 wut) public note auth {\n        val = wut;\n        has = true;\n    }\n    function void() public note auth {  // unset the value\n        has = false;\n    }\n}"
			},
			"contracts/ds-thing/thing.sol": {
				"content": "// thing.sol - `auth` with handy mixins. your things should be DSThings\n\n// Copyright (C) 2017  DappHub, LLC\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.4.13;\n\nimport '../ds-auth/auth.sol';\nimport '../ds-note/note.sol';\nimport '../ds-math/math.sol';\n\ncontract DSThing is DSAuth, DSNote, DSMath {\n\n    function S(string s) internal pure returns (bytes4) {\n        return bytes4(keccak256(s));\n    }\n\n}"
			},
			"contracts/ds-math/math.sol": {
				"content": "/// math.sol -- mixin for inline numerical wizardry\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.4.13;\n\ncontract DSMath {\n    function add(uint x, uint y) internal pure returns (uint z) {\n        require((z = x + y) >= x);\n    }\n    function sub(uint x, uint y) internal pure returns (uint z) {\n        require((z = x - y) <= x);\n    }\n    function mul(uint x, uint y) internal pure returns (uint z) {\n        require(y == 0 || (z = x * y) / y == x);\n    }\n\n    function min(uint x, uint y) internal pure returns (uint z) {\n        return x <= y ? x : y;\n    }\n    function max(uint x, uint y) internal pure returns (uint z) {\n        return x >= y ? x : y;\n    }\n    function imin(int x, int y) internal pure returns (int z) {\n        return x <= y ? x : y;\n    }\n    function imax(int x, int y) internal pure returns (int z) {\n        return x >= y ? x : y;\n    }\n\n    uint constant WAD = 10 ** 18;\n    uint constant RAY = 10 ** 27;\n\n    function wmul(uint x, uint y) internal pure returns (uint z) {\n        z = add(mul(x, y), WAD / 2) / WAD;\n    }\n    function rmul(uint x, uint y) internal pure returns (uint z) {\n        z = add(mul(x, y), RAY / 2) / RAY;\n    }\n    function wdiv(uint x, uint y) internal pure returns (uint z) {\n        z = add(mul(x, WAD), y / 2) / y;\n    }\n    function rdiv(uint x, uint y) internal pure returns (uint z) {\n        z = add(mul(x, RAY), y / 2) / y;\n    }\n\n    // This famous algorithm is called \"exponentiation by squaring\"\n    // and calculates x^n with x as fixed-point and n as regular unsigned.\n    //\n    // It's O(log n), instead of O(n) for naive repeated multiplication.\n    //\n    // These facts are why it works:\n    //\n    //  If n is even, then x^n = (x^2)^(n/2).\n    //  If n is odd,  then x^n = x * x^(n-1),\n    //   and applying the equation for even x gives\n    //    x^n = x * (x^2)^((n-1) / 2).\n    //\n    //  Also, EVM division is flooring and\n    //    floor[(n-1) / 2] = floor[n / 2].\n    //\n    function rpow(uint x, uint n) internal pure returns (uint z) {\n        z = n % 2 != 0 ? x : RAY;\n\n        for (n /= 2; n != 0; n /= 2) {\n            x = rmul(x, x);\n\n            if (n % 2 != 0) {\n                z = rmul(z, x);\n            }\n        }\n    }\n}"
			},
			"contracts/ds-note/note.sol": {
				"content": "/// note.sol -- the `note' modifier, for logging calls as events\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.4.13;\n\ncontract DSNote {\n    event LogNote(\n        bytes4   indexed  sig,\n        address  indexed  guy,\n        bytes32  indexed  foo,\n        bytes32  indexed  bar,\n        uint              wad,\n        bytes             fax\n    ) anonymous;\n\n    modifier note {\n        bytes32 foo;\n        bytes32 bar;\n\n        assembly {\n            foo := calldataload(4)\n            bar := calldataload(36)\n        }\n\n        LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data);\n\n        _;\n    }\n}"
			},
			"contracts/ds-auth/auth.sol": {
				"content": "// SPDX-License-Identifier: GNU-3\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.4.23;\n\ninterface DSAuthority {\n    function canCall(\n        address src, address dst, bytes4 sig\n    ) external view returns (bool);\n}\n\ncontract DSAuthEvents {\n    event LogSetAuthority (address indexed authority);\n    event LogSetOwner     (address indexed owner);\n}\n\ncontract DSAuth is DSAuthEvents {\n    DSAuthority public authority;\n    address public  owner;\n\n    constructor() public {\n        owner = msg.sender;\n        emit LogSetOwner(msg.sender);\n    }\n\n    function setOwner(address owner_)\n        public\n        auth\n    {\n        owner = owner_;\n        emit LogSetOwner(owner);\n    }\n\n    function setAuthority(DSAuthority authority_)\n        public\n        auth\n    {\n        authority = authority_;\n        emit LogSetAuthority(address(authority));\n    }\n\n    modifier auth {\n        require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\");\n        _;\n    }\n\n    function isAuthorized(address src, bytes4 sig) internal view returns (bool) {\n        if (src == address(this)) {\n            return true;\n        } else if (src == owner) {\n            return true;\n        } else if (authority == DSAuthority(address(0))) {\n            return false;\n        } else {\n            return authority.canCall(src, address(this), sig);\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ds-auth/auth.sol": {
				"DSAuth": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "owner_",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "authority_",
									"type": "address"
								}
							],
							"name": "setAuthority",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "authority",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "authority",
									"type": "address"
								}
							],
							"name": "LogSetAuthority",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								}
							],
							"name": "LogSetOwner",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/ds-auth/auth.sol\":967:1971  contract DSAuth is DSAuthEvents {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ds-auth/auth.sol\":1067:1161  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/ds-auth/auth.sol\":1067:1161  constructor() public {... */\n  pop\n    /* \"contracts/ds-auth/auth.sol\":1106:1116  msg.sender */\n  caller\n    /* \"contracts/ds-auth/auth.sol\":1098:1103  owner */\n  0x1\n  0x0\n    /* \"contracts/ds-auth/auth.sol\":1098:1116  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ds-auth/auth.sol\":1143:1153  msg.sender */\n  caller\n    /* \"contracts/ds-auth/auth.sol\":1131:1154  LogSetOwner(msg.sender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/ds-auth/auth.sol\":967:1971  contract DSAuth is DSAuthEvents {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ds-auth/auth.sol\":967:1971  contract DSAuth is DSAuthEvents {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x13af4035\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x7a9e5e4b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbf7e214f\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n      pop\n      tag_7\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n      pop\n      tag_10\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_11)\n    tag_10:\n      stop\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n      pop\n      tag_13\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n      pop\n      tag_16\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n    tag_8:\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_19\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_20\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_19:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_21\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"contracts/ds-auth/auth.sol\":1251:1257  owner_ */\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1243:1248  owner */\n      0x1\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1243:1257  owner = owner_ */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1284:1289  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1272:1290  LogSetOwner(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n      pop\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n    tag_11:\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_24\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_20\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_24:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_25\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"contracts/ds-auth/auth.sol\":1403:1413  authority_ */\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1391:1400  authority */\n      0x0\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1391:1413  authority = authority_ */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1452:1461  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1428:1463  LogSetAuthority(address(authority)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n      pop\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n    tag_14:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n    tag_17:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1590:1969  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n    tag_20:\n        /* \"contracts/ds-auth/auth.sol\":1660:1664  bool */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1695:1699  this */\n      address\n        /* \"contracts/ds-auth/auth.sol\":1680:1700  src == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1680:1683  src */\n      dup4\n        /* \"contracts/ds-auth/auth.sol\":1680:1700  src == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1676:1963  if (src == address(this)) {... */\n      iszero\n      tag_28\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1723:1727  true */\n      0x1\n        /* \"contracts/ds-auth/auth.sol\":1716:1727  return true */\n      swap1\n      pop\n      jump(tag_27)\n        /* \"contracts/ds-auth/auth.sol\":1676:1963  if (src == address(this)) {... */\n    tag_28:\n        /* \"contracts/ds-auth/auth.sol\":1755:1760  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1748:1760  src == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1748:1751  src */\n      dup4\n        /* \"contracts/ds-auth/auth.sol\":1748:1760  src == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1744:1963  if (src == owner) {... */\n      iszero\n      tag_30\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1783:1787  true */\n      0x1\n        /* \"contracts/ds-auth/auth.sol\":1776:1787  return true */\n      swap1\n      pop\n      jump(tag_27)\n        /* \"contracts/ds-auth/auth.sol\":1744:1963  if (src == owner) {... */\n    tag_30:\n        /* \"contracts/ds-auth/auth.sol\":1841:1842  0 */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1808:1844  authority == DSAuthority(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1808:1817  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1808:1844  authority == DSAuthority(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1804:1963  if (authority == DSAuthority(address(0))) {... */\n      iszero\n      tag_32\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1867:1872  false */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1860:1872  return false */\n      swap1\n      pop\n      jump(tag_27)\n        /* \"contracts/ds-auth/auth.sol\":1804:1963  if (authority == DSAuthority(address(0))) {... */\n    tag_32:\n        /* \"contracts/ds-auth/auth.sol\":1910:1919  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1910:1927  authority.canCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb7009613\n        /* \"contracts/ds-auth/auth.sol\":1928:1931  src */\n      dup5\n        /* \"contracts/ds-auth/auth.sol\":1941:1945  this */\n      address\n        /* \"contracts/ds-auth/auth.sol\":1948:1951  sig */\n      dup6\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_35:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_36:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1903:1952  return authority.canCall(src, address(this), sig) */\n      swap1\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1590:1969  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n    tag_27:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820d616eb64037fe5d5fa2318a6e73bf04cd78fa2b9266794f9c213a784023a85bd0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a261071d806100a46000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100675780637a9e5e4b146100aa5780638da5cb5b146100ed578063bf7e214f14610144575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019b565b005b3480156100b657600080fd5b506100eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e6565b005b3480156100f957600080fd5b5061010261042f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015057600080fd5b50610159610455565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c9336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b151561023d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b610314336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b1515610388576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104b957600190506106eb565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561051857600190506106eb565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561057757600090506106eb565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050506040513d60208110156106d757600080fd5b810190808051906020019092919050505090505b929150505600a165627a7a72305820d616eb64037fe5d5fa2318a6e73bf04cd78fa2b9266794f9c213a784023a85bd0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x71D DUP1 PUSH2 0xA4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x144 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x47A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x314 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x47A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x518 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB7009613 DUP5 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd6 AND 0xeb PUSH5 0x37FE5D5FA 0x23 XOR 0xa6 0xe7 EXTCODESIZE CREATE 0x4c 0xd7 DUP16 LOG2 0xb9 0x26 PUSH8 0x94F9C213A784023A DUP6 0xbd STOP 0x29 ",
							"sourceMap": "967:1004:0:-;;;1067:94;8:9:-1;5:2;;;30:1;27;20:12;5:2;1067:94:0;1106:10;1098:5;;:18;;;;;;;;;;;;;;;;;;1143:10;1131:23;;;;;;;;;;;;967:1004;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100675780637a9e5e4b146100aa5780638da5cb5b146100ed578063bf7e214f14610144575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019b565b005b3480156100b657600080fd5b506100eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e6565b005b3480156100f957600080fd5b5061010261042f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015057600080fd5b50610159610455565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c9336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b151561023d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b610314336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b1515610388576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104b957600190506106eb565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561051857600190506106eb565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561057757600090506106eb565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050506040513d60208110156106d757600080fd5b810190808051906020019092919050505090505b929150505600a165627a7a72305820d616eb64037fe5d5fa2318a6e73bf04cd78fa2b9266794f9c213a784023a85bd0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x144 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x47A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x314 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x47A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x518 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB7009613 DUP5 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd6 AND 0xeb PUSH5 0x37FE5D5FA 0x23 XOR 0xa6 0xe7 EXTCODESIZE CREATE 0x4c 0xd7 DUP16 LOG2 0xb9 0x26 PUSH8 0x94F9C213A784023A DUP6 0xbd STOP 0x29 ",
							"sourceMap": "967:1004:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:130;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1167:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:167;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1303:167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1039:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1039:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1005:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1005:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:130;1508:33;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1251:6;1243:5;;:14;;;;;;;;;;;;;;;;;;1284:5;;;;;;;;;;;1272:18;;;;;;;;;;;;1167:130;:::o;1303:167::-;1508:33;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1403:10;1391:9;;:22;;;;;;;;;;;;;;;;;;1452:9;;;;;;;;;;;1428:35;;;;;;;;;;;;1303:167;:::o;1039:21::-;;;;;;;;;;;;;:::o;1005:28::-;;;;;;;;;;;;;:::o;1590:379::-;1660:4;1695;1680:20;;:3;:20;;;1676:287;;;1723:4;1716:11;;;;1676:287;1755:5;;;;;;;;;;;1748:12;;:3;:12;;;1744:219;;;1783:4;1776:11;;;;1744:219;1841:1;1808:36;;:9;;;;;;;;;;;:36;;;1804:159;;;1867:5;1860:12;;;;1804:159;1910:9;;;;;;;;;;;:17;;;1928:3;1941:4;1948:3;1910:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1910:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1910:42:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1910:42:0;;;;;;;;;;;;;;;;1903:49;;1590:379;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "364200",
								"executionCost": "21825",
								"totalCost": "386025"
							},
							"external": {
								"authority()": "508",
								"owner()": "486",
								"setAuthority(address)": "infinite",
								"setOwner(address)": "infinite"
							},
							"internal": {
								"isAuthorized(address,bytes4)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 967,
									"end": 1971,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "MSTORE"
								},
								{
									"begin": 1067,
									"end": 1161,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1067,
									"end": 1161,
									"name": "POP"
								},
								{
									"begin": 1106,
									"end": 1116,
									"name": "CALLER"
								},
								{
									"begin": 1098,
									"end": 1103,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1098,
									"end": 1103,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "EXP"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP2"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SLOAD"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP2"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "MUL"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "NOT"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "AND"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SWAP1"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP4"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "AND"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "MUL"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "OR"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SWAP1"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SSTORE"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "POP"
								},
								{
									"begin": 1143,
									"end": 1153,
									"name": "CALLER"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "AND"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "MLOAD"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "MLOAD"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "DUP1"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SWAP2"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SUB"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SWAP1"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "LOG2"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "DUP1"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "CODECOPY"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 967,
									"end": 1971,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820d616eb64037fe5d5fa2318a6e73bf04cd78fa2b9266794f9c213a784023a85bd0029",
									".code": [
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "MSTORE"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "LT"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "JUMPI"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "SWAP1"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "DIV"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "AND"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "DUP1"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "13AF4035"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "EQ"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "JUMPI"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "DUP1"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "7A9E5E4B"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "EQ"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "JUMPI"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "DUP1"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "EQ"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "JUMPI"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "DUP1"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "BF7E214F"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "EQ"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "JUMPI"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "JUMPDEST"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "DUP1"
										},
										{
											"begin": 967,
											"end": 1971,
											"name": "REVERT"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SUB"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "ADD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "AND"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "ADD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP3"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "STOP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SUB"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "AND"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP3"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "STOP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP3"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MSTORE"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "ADD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SUB"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "RETURN"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP3"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MSTORE"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SUB"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "RETURN"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1251,
											"end": 1257,
											"name": "DUP1"
										},
										{
											"begin": 1243,
											"end": 1248,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1243,
											"end": 1248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "EXP"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP2"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SLOAD"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP2"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "MUL"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "NOT"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "AND"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SWAP1"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP4"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "AND"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "MUL"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "OR"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SWAP1"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SSTORE"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "POP"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SLOAD"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "EXP"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "DIV"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "AND"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "AND"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "MLOAD"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "MLOAD"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "DUP1"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SWAP2"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SUB"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SWAP1"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "LOG2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1403,
											"end": 1413,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "EXP"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SLOAD"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "MUL"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "NOT"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP4"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "MUL"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "OR"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SSTORE"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "POP"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DUP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SLOAD"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "EXP"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DIV"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "AND"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "AND"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "MLOAD"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "MLOAD"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "DUP1"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SWAP2"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SUB"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SWAP1"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "LOG2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "EXP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DIV"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "EXP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DIV"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMPDEST"
										},
										{
											"begin": 1660,
											"end": 1664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1699,
											"name": "ADDRESS"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "AND"
										},
										{
											"begin": 1680,
											"end": 1683,
											"name": "DUP4"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "AND"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "EQ"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1723,
											"end": 1727,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "SWAP1"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "POP"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "JUMP"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SLOAD"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "EXP"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "DIV"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "DUP4"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "EQ"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1783,
											"end": 1787,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "SWAP1"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "POP"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "JUMP"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "DUP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SLOAD"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "EXP"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "DIV"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "EQ"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1867,
											"end": 1872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "SWAP1"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "POP"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "JUMP"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SLOAD"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "EXP"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DIV"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "PUSH",
											"value": "B7009613"
										},
										{
											"begin": 1928,
											"end": 1931,
											"name": "DUP5"
										},
										{
											"begin": 1941,
											"end": 1945,
											"name": "ADDRESS"
										},
										{
											"begin": 1948,
											"end": 1951,
											"name": "DUP6"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP5"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MUL"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP5"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP3"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "NOT"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "NOT"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SUB"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP8"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "GAS"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "CALL"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP3"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1903,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMPDEST"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "SWAP3"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "SWAP2"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"authority()": "bf7e214f",
							"owner()": "8da5cb5b",
							"setAuthority(address)": "7a9e5e4b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.23+commit.124ca40d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ds-auth/auth.sol\":\"DSAuth\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ds-auth/auth.sol\":{\"keccak256\":\"0xc02ed2267e6475942b44a1bc837d7691dc0a9febd53cdcb9b733c75a8868c551\",\"urls\":[\"bzzr://bd3fbf232b415b118f5cefe30a3a8e6853960efa6203a205522e35ab7e474eab\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"DSAuthEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "authority",
									"type": "address"
								}
							],
							"name": "LogSetAuthority",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								}
							],
							"name": "LogSetOwner",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/ds-auth/auth.sol\":834:965  contract DSAuthEvents {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/ds-auth/auth.sol\":834:965  contract DSAuthEvents {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ds-auth/auth.sol\":834:965  contract DSAuthEvents {... */\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058200b4e5b5aa61fcf9da0cfbb368d4cb76c7bc567f580b8f510883f865bd734c8fb0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a723058200b4e5b5aa61fcf9da0cfbb368d4cb76c7bc567f580b8f510883f865bd734c8fb0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SIGNEXTEND 0x4e JUMPDEST GAS 0xa6 0x1f 0xcf SWAP14 LOG0 0xcf 0xbb CALLDATASIZE DUP14 0x4c 0xb7 PUSH13 0x7BC567F580B8F510883F865BD7 CALLVALUE 0xc8 CREATE2 STOP 0x29 ",
							"sourceMap": "834:131:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;834:131:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fd00a165627a7a723058200b4e5b5aa61fcf9da0cfbb368d4cb76c7bc567f580b8f510883f865bd734c8fb0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SIGNEXTEND 0x4e JUMPDEST GAS 0xa6 0x1f 0xcf SWAP14 LOG0 0xcf 0xbb CALLDATASIZE DUP14 0x4c 0xb7 PUSH13 0x7BC567F580B8F510883F865BD7 CALLVALUE 0xc8 CREATE2 STOP 0x29 ",
							"sourceMap": "834:131:0:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "66",
								"totalCost": "10666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 834,
									"end": 965,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "MSTORE"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "POP"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "DUP1"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "CODECOPY"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 834,
									"end": 965,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058200b4e5b5aa61fcf9da0cfbb368d4cb76c7bc567f580b8f510883f865bd734c8fb0029",
									".code": [
										{
											"begin": 834,
											"end": 965,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 834,
											"end": 965,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 834,
											"end": 965,
											"name": "MSTORE"
										},
										{
											"begin": 834,
											"end": 965,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 834,
											"end": 965,
											"name": "DUP1"
										},
										{
											"begin": 834,
											"end": 965,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.23+commit.124ca40d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ds-auth/auth.sol\":\"DSAuthEvents\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ds-auth/auth.sol\":{\"keccak256\":\"0xc02ed2267e6475942b44a1bc837d7691dc0a9febd53cdcb9b733c75a8868c551\",\"urls\":[\"bzzr://bd3fbf232b415b118f5cefe30a3a8e6853960efa6203a205522e35ab7e474eab\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"DSAuthority": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "src",
									"type": "address"
								},
								{
									"name": "dst",
									"type": "address"
								},
								{
									"name": "sig",
									"type": "bytes4"
								}
							],
							"name": "canCall",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"canCall(address,address,bytes4)": "b7009613"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/ds-math/math.sol": {
				"DSMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/ds-math/math.sol\":722:2835  contract DSMath {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/ds-math/math.sol\":722:2835  contract DSMath {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ds-math/math.sol\":722:2835  contract DSMath {... */\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058208eb26c6b6bf4d435b6609b3a5c3c549e8d5a2bd6d43459fc8710beca860de9070029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a723058208eb26c6b6bf4d435b6609b3a5c3c549e8d5a2bd6d43459fc8710beca860de9070029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP15 0xb2 PUSH13 0x6B6BF4D435B6609B3A5C3C549E DUP14 GAS 0x2b 0xd6 0xd4 CALLVALUE MSIZE 0xfc DUP8 LT 0xbe 0xca DUP7 0xd 0xe9 SMOD STOP 0x29 ",
							"sourceMap": "722:2113:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;722:2113:1;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fd00a165627a7a723058208eb26c6b6bf4d435b6609b3a5c3c549e8d5a2bd6d43459fc8710beca860de9070029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP15 0xb2 PUSH13 0x6B6BF4D435B6609B3A5C3C549E DUP14 GAS 0x2b 0xd6 0xd4 CALLVALUE MSIZE 0xfc DUP8 LT 0xbe 0xca DUP7 0xd 0xe9 SMOD STOP 0x29 ",
							"sourceMap": "722:2113:1:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "66",
								"totalCost": "10666"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"imax(int256,int256)": "infinite",
								"imin(int256,int256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"rdiv(uint256,uint256)": "infinite",
								"rmul(uint256,uint256)": "infinite",
								"rpow(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"wdiv(uint256,uint256)": "infinite",
								"wmul(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 722,
									"end": 2835,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "MSTORE"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "POP"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "DUP1"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "CODECOPY"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 722,
									"end": 2835,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058208eb26c6b6bf4d435b6609b3a5c3c549e8d5a2bd6d43459fc8710beca860de9070029",
									".code": [
										{
											"begin": 722,
											"end": 2835,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 722,
											"end": 2835,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 722,
											"end": 2835,
											"name": "MSTORE"
										},
										{
											"begin": 722,
											"end": 2835,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 722,
											"end": 2835,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 2835,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.23+commit.124ca40d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ds-math/math.sol\":\"DSMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ds-math/math.sol\":{\"keccak256\":\"0x961977c4d8637627cd2426212b1e457720913e52674419e910f25741f5057a11\",\"urls\":[\"bzzr://a54443c33dae485bf186455cd58593cbb5187d41231582087d4bc99157a68396\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/ds-note/note.sol": {
				"DSNote": {
					"abi": [
						{
							"anonymous": true,
							"inputs": [
								{
									"indexed": true,
									"name": "sig",
									"type": "bytes4"
								},
								{
									"indexed": true,
									"name": "guy",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "foo",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"name": "bar",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"name": "wad",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "fax",
									"type": "bytes"
								}
							],
							"name": "LogNote",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/ds-note/note.sol\":735:1227  contract DSNote {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/ds-note/note.sol\":735:1227  contract DSNote {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ds-note/note.sol\":735:1227  contract DSNote {... */\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058202a2e01236400b106d67ebf68d0f838ebd6188db942bfe084e89beb90ad3668ae0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a723058202a2e01236400b106d67ebf68d0f838ebd6188db942bfe084e89beb90ad3668ae0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x2a 0x2e ADD 0x23 PUSH5 0xB106D67E 0xbf PUSH9 0xD0F838EBD6188DB942 0xbf 0xe0 DUP5 0xe8 SWAP12 0xeb SWAP1 0xad CALLDATASIZE PUSH9 0xAE0029000000000000 ",
							"sourceMap": "735:492:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;735:492:2;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fd00a165627a7a723058202a2e01236400b106d67ebf68d0f838ebd6188db942bfe084e89beb90ad3668ae0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x2a 0x2e ADD 0x23 PUSH5 0xB106D67E 0xbf PUSH9 0xD0F838EBD6188DB942 0xbf 0xe0 DUP5 0xe8 SWAP12 0xeb SWAP1 0xad CALLDATASIZE PUSH9 0xAE0029000000000000 ",
							"sourceMap": "735:492:2:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "66",
								"totalCost": "10666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 735,
									"end": 1227,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "MSTORE"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "POP"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "DUP1"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "CODECOPY"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 735,
									"end": 1227,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058202a2e01236400b106d67ebf68d0f838ebd6188db942bfe084e89beb90ad3668ae0029",
									".code": [
										{
											"begin": 735,
											"end": 1227,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 735,
											"end": 1227,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 735,
											"end": 1227,
											"name": "MSTORE"
										},
										{
											"begin": 735,
											"end": 1227,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 735,
											"end": 1227,
											"name": "DUP1"
										},
										{
											"begin": 735,
											"end": 1227,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.23+commit.124ca40d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ds-note/note.sol\":\"DSNote\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ds-note/note.sol\":{\"keccak256\":\"0xa16a36d355ac085634345bfa5fd6165736e97403ebf59de78a2f9e3025e0bbb1\",\"urls\":[\"bzzr://c712d0b3aab1e6c2dad18d3f4e0ed1aa4bdd66eedbce3f8d5a6862b9f2f19759\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/ds-thing/thing.sol": {
				"DSThing": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "owner_",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "authority_",
									"type": "address"
								}
							],
							"name": "setAuthority",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "authority",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": true,
							"inputs": [
								{
									"indexed": true,
									"name": "sig",
									"type": "bytes4"
								},
								{
									"indexed": true,
									"name": "guy",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "foo",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"name": "bar",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"name": "wad",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "fax",
									"type": "bytes"
								}
							],
							"name": "LogNote",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "authority",
									"type": "address"
								}
							],
							"name": "LogSetAuthority",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								}
							],
							"name": "LogSetOwner",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/ds-thing/thing.sol\":870:1019  contract DSThing is DSAuth, DSNote, DSMath {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ds-auth/auth.sol\":1106:1116  msg.sender */\n  caller\n    /* \"contracts/ds-auth/auth.sol\":1098:1103  owner */\n  0x1\n  0x0\n    /* \"contracts/ds-auth/auth.sol\":1098:1116  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ds-auth/auth.sol\":1143:1153  msg.sender */\n  caller\n    /* \"contracts/ds-auth/auth.sol\":1131:1154  LogSetOwner(msg.sender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/ds-thing/thing.sol\":870:1019  contract DSThing is DSAuth, DSNote, DSMath {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ds-thing/thing.sol\":870:1019  contract DSThing is DSAuth, DSNote, DSMath {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x13af4035\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x7a9e5e4b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbf7e214f\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n      pop\n      tag_7\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n      pop\n      tag_10\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_11)\n    tag_10:\n      stop\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n      pop\n      tag_13\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n      pop\n      tag_16\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n    tag_8:\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_19\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_20\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_19:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_21\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"contracts/ds-auth/auth.sol\":1251:1257  owner_ */\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1243:1248  owner */\n      0x1\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1243:1257  owner = owner_ */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1284:1289  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1272:1290  LogSetOwner(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n      pop\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n    tag_11:\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_24\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_20\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_24:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_25\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"contracts/ds-auth/auth.sol\":1403:1413  authority_ */\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1391:1400  authority */\n      0x0\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1391:1413  authority = authority_ */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1452:1461  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1428:1463  LogSetAuthority(address(authority)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n      pop\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n    tag_14:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n    tag_17:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1590:1969  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n    tag_20:\n        /* \"contracts/ds-auth/auth.sol\":1660:1664  bool */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1695:1699  this */\n      address\n        /* \"contracts/ds-auth/auth.sol\":1680:1700  src == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1680:1683  src */\n      dup4\n        /* \"contracts/ds-auth/auth.sol\":1680:1700  src == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1676:1963  if (src == address(this)) {... */\n      iszero\n      tag_28\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1723:1727  true */\n      0x1\n        /* \"contracts/ds-auth/auth.sol\":1716:1727  return true */\n      swap1\n      pop\n      jump(tag_27)\n        /* \"contracts/ds-auth/auth.sol\":1676:1963  if (src == address(this)) {... */\n    tag_28:\n        /* \"contracts/ds-auth/auth.sol\":1755:1760  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1748:1760  src == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1748:1751  src */\n      dup4\n        /* \"contracts/ds-auth/auth.sol\":1748:1760  src == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1744:1963  if (src == owner) {... */\n      iszero\n      tag_30\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1783:1787  true */\n      0x1\n        /* \"contracts/ds-auth/auth.sol\":1776:1787  return true */\n      swap1\n      pop\n      jump(tag_27)\n        /* \"contracts/ds-auth/auth.sol\":1744:1963  if (src == owner) {... */\n    tag_30:\n        /* \"contracts/ds-auth/auth.sol\":1841:1842  0 */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1808:1844  authority == DSAuthority(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1808:1817  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1808:1844  authority == DSAuthority(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1804:1963  if (authority == DSAuthority(address(0))) {... */\n      iszero\n      tag_32\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1867:1872  false */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1860:1872  return false */\n      swap1\n      pop\n      jump(tag_27)\n        /* \"contracts/ds-auth/auth.sol\":1804:1963  if (authority == DSAuthority(address(0))) {... */\n    tag_32:\n        /* \"contracts/ds-auth/auth.sol\":1910:1919  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1910:1927  authority.canCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb7009613\n        /* \"contracts/ds-auth/auth.sol\":1928:1931  src */\n      dup5\n        /* \"contracts/ds-auth/auth.sol\":1941:1945  this */\n      address\n        /* \"contracts/ds-auth/auth.sol\":1948:1951  sig */\n      dup6\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_35:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_36:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1903:1952  return authority.canCall(src, address(this), sig) */\n      swap1\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1590:1969  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n    tag_27:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820bb7db05e02bd752e455f8967e34078e3c63e65c8e29e8f28e2dfcd8fdb442fab0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a261071d806100976000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100675780637a9e5e4b146100aa5780638da5cb5b146100ed578063bf7e214f14610144575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019b565b005b3480156100b657600080fd5b506100eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e6565b005b3480156100f957600080fd5b5061010261042f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015057600080fd5b50610159610455565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c9336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b151561023d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b610314336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b1515610388576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104b957600190506106eb565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561051857600190506106eb565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561057757600090506106eb565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050506040513d60208110156106d757600080fd5b810190808051906020019092919050505090505b929150505600a165627a7a72305820bb7db05e02bd752e455f8967e34078e3c63e65c8e29e8f28e2dfcd8fdb442fab0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x71D DUP1 PUSH2 0x97 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x144 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x47A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x314 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x47A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x518 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB7009613 DUP5 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xbb PUSH30 0xB05E02BD752E455F8967E34078E3C63E65C8E29E8F28E2DFCD8FDB442FAB STOP 0x29 ",
							"sourceMap": "870:149:3:-;;;1106:10:0;1098:5;;:18;;;;;;;;;;;;;;;;;;1143:10;1131:23;;;;;;;;;;;;870:149:3;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100675780637a9e5e4b146100aa5780638da5cb5b146100ed578063bf7e214f14610144575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019b565b005b3480156100b657600080fd5b506100eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e6565b005b3480156100f957600080fd5b5061010261042f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015057600080fd5b50610159610455565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c9336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b151561023d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b610314336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b1515610388576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104b957600190506106eb565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561051857600190506106eb565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561057757600090506106eb565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050506040513d60208110156106d757600080fd5b810190808051906020019092919050505090505b929150505600a165627a7a72305820bb7db05e02bd752e455f8967e34078e3c63e65c8e29e8f28e2dfcd8fdb442fab0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x144 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x47A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x314 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x47A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x518 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB7009613 DUP5 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xbb PUSH30 0xB05E02BD752E455F8967E34078E3C63E65C8E29E8F28E2DFCD8FDB442FAB STOP 0x29 ",
							"sourceMap": "870:149:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:130:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1167:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:167;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1303:167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1039:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1039:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1005:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1005:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:130;1508:33;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1251:6;1243:5;;:14;;;;;;;;;;;;;;;;;;1284:5;;;;;;;;;;;1272:18;;;;;;;;;;;;1167:130;:::o;1303:167::-;1508:33;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1403:10;1391:9;;:22;;;;;;;;;;;;;;;;;;1452:9;;;;;;;;;;;1428:35;;;;;;;;;;;;1303:167;:::o;1039:21::-;;;;;;;;;;;;;:::o;1005:28::-;;;;;;;;;;;;;:::o;1590:379::-;1660:4;1695;1680:20;;:3;:20;;;1676:287;;;1723:4;1716:11;;;;1676:287;1755:5;;;;;;;;;;;1748:12;;:3;:12;;;1744:219;;;1783:4;1776:11;;;;1744:219;1841:1;1808:36;;:9;;;;;;;;;;;:36;;;1804:159;;;1867:5;1860:12;;;;1804:159;1910:9;;;;;;;;;;;:17;;;1928:3;1941:4;1948:3;1910:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1910:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1910:42:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1910:42:0;;;;;;;;;;;;;;;;1903:49;;1590:379;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "364200",
								"executionCost": "21801",
								"totalCost": "386001"
							},
							"external": {
								"authority()": "508",
								"owner()": "486",
								"setAuthority(address)": "infinite",
								"setOwner(address)": "infinite"
							},
							"internal": {
								"S(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 870,
									"end": 1019,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "MSTORE"
								},
								{
									"begin": 1106,
									"end": 1116,
									"name": "CALLER"
								},
								{
									"begin": 1098,
									"end": 1103,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1098,
									"end": 1103,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "EXP"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP2"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SLOAD"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP2"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "MUL"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "NOT"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "AND"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SWAP1"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP4"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "AND"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "MUL"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "OR"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SWAP1"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SSTORE"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "POP"
								},
								{
									"begin": 1143,
									"end": 1153,
									"name": "CALLER"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "AND"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "MLOAD"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "MLOAD"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "DUP1"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SWAP2"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SUB"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SWAP1"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "LOG2"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "DUP1"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "CODECOPY"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 870,
									"end": 1019,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820bb7db05e02bd752e455f8967e34078e3c63e65c8e29e8f28e2dfcd8fdb442fab0029",
									".code": [
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "MSTORE"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "LT"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "JUMPI"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "SWAP1"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "DIV"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "AND"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "13AF4035"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "EQ"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "JUMPI"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "7A9E5E4B"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "EQ"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "JUMPI"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "EQ"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "JUMPI"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "BF7E214F"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "EQ"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "JUMPI"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "JUMPDEST"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 870,
											"end": 1019,
											"name": "REVERT"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SUB"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "ADD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "AND"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "ADD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP3"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "STOP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SUB"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "AND"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP3"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "STOP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP3"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MSTORE"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "ADD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SUB"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "RETURN"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP3"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MSTORE"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SUB"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "RETURN"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1251,
											"end": 1257,
											"name": "DUP1"
										},
										{
											"begin": 1243,
											"end": 1248,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1243,
											"end": 1248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "EXP"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP2"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SLOAD"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP2"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "MUL"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "NOT"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "AND"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SWAP1"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP4"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "AND"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "MUL"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "OR"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SWAP1"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SSTORE"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "POP"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SLOAD"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "EXP"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "DIV"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "AND"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "AND"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "MLOAD"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "MLOAD"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "DUP1"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SWAP2"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SUB"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SWAP1"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "LOG2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1403,
											"end": 1413,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "EXP"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SLOAD"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "MUL"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "NOT"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP4"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "MUL"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "OR"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SSTORE"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "POP"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DUP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SLOAD"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "EXP"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DIV"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "AND"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "AND"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "MLOAD"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "MLOAD"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "DUP1"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SWAP2"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SUB"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SWAP1"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "LOG2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "EXP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DIV"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "EXP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DIV"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMPDEST"
										},
										{
											"begin": 1660,
											"end": 1664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1699,
											"name": "ADDRESS"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "AND"
										},
										{
											"begin": 1680,
											"end": 1683,
											"name": "DUP4"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "AND"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "EQ"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1723,
											"end": 1727,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "SWAP1"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "POP"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "JUMP"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SLOAD"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "EXP"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "DIV"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "DUP4"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "EQ"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1783,
											"end": 1787,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "SWAP1"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "POP"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "JUMP"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "DUP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SLOAD"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "EXP"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "DIV"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "EQ"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1867,
											"end": 1872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "SWAP1"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "POP"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "JUMP"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SLOAD"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "EXP"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DIV"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "PUSH",
											"value": "B7009613"
										},
										{
											"begin": 1928,
											"end": 1931,
											"name": "DUP5"
										},
										{
											"begin": 1941,
											"end": 1945,
											"name": "ADDRESS"
										},
										{
											"begin": 1948,
											"end": 1951,
											"name": "DUP6"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP5"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MUL"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP5"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP3"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "NOT"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "NOT"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SUB"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP8"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "GAS"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "CALL"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP3"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1903,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMPDEST"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "SWAP3"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "SWAP2"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"authority()": "bf7e214f",
							"owner()": "8da5cb5b",
							"setAuthority(address)": "7a9e5e4b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.23+commit.124ca40d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ds-thing/thing.sol\":\"DSThing\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ds-auth/auth.sol\":{\"keccak256\":\"0xc02ed2267e6475942b44a1bc837d7691dc0a9febd53cdcb9b733c75a8868c551\",\"urls\":[\"bzzr://bd3fbf232b415b118f5cefe30a3a8e6853960efa6203a205522e35ab7e474eab\"]},\"contracts/ds-math/math.sol\":{\"keccak256\":\"0x961977c4d8637627cd2426212b1e457720913e52674419e910f25741f5057a11\",\"urls\":[\"bzzr://a54443c33dae485bf186455cd58593cbb5187d41231582087d4bc99157a68396\"]},\"contracts/ds-note/note.sol\":{\"keccak256\":\"0xa16a36d355ac085634345bfa5fd6165736e97403ebf59de78a2f9e3025e0bbb1\",\"urls\":[\"bzzr://c712d0b3aab1e6c2dad18d3f4e0ed1aa4bdd66eedbce3f8d5a6862b9f2f19759\"]},\"contracts/ds-thing/thing.sol\":{\"keccak256\":\"0xd817e0f1080f241ec988c41287ad39700e0167690c283b0f7f238da8721a2595\",\"urls\":[\"bzzr://3dcfb82881d7931ba173dfd75267c126b4a430a347b7cd9ad26730fe95e0255a\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/ds-value/value.sol": {
				"DSValue": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "owner_",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "wut",
									"type": "bytes32"
								}
							],
							"name": "poke",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "read",
							"outputs": [
								{
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "peek",
							"outputs": [
								{
									"name": "",
									"type": "bytes32"
								},
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "authority_",
									"type": "address"
								}
							],
							"name": "setAuthority",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "void",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "authority",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": true,
							"inputs": [
								{
									"indexed": true,
									"name": "sig",
									"type": "bytes4"
								},
								{
									"indexed": true,
									"name": "guy",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "foo",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"name": "bar",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"name": "wad",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "fax",
									"type": "bytes"
								}
							],
							"name": "LogNote",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "authority",
									"type": "address"
								}
							],
							"name": "LogSetAuthority",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								}
							],
							"name": "LogSetOwner",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/ds-value/value.sol\":805:1273  contract DSValue is DSThing {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ds-auth/auth.sol\":1106:1116  msg.sender */\n  caller\n    /* \"contracts/ds-auth/auth.sol\":1098:1103  owner */\n  0x1\n  0x0\n    /* \"contracts/ds-auth/auth.sol\":1098:1116  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ds-auth/auth.sol\":1143:1153  msg.sender */\n  caller\n    /* \"contracts/ds-auth/auth.sol\":1131:1154  LogSetOwner(msg.sender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/ds-value/value.sol\":805:1273  contract DSValue is DSThing {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ds-value/value.sol\":805:1273  contract DSValue is DSThing {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x13af4035\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1504460f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x57de26a4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x59e02dd7\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7a9e5e4b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xac4c25b2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbf7e214f\n      eq\n      tag_9\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_10:\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n      pop\n      tag_11\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_12)\n    tag_11:\n      stop\n        /* \"contracts/ds-value/value.sol\":1095:1185  function poke(bytes32 wut) public note auth {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"contracts/ds-value/value.sol\":1095:1185  function poke(bytes32 wut) public note auth {... */\n      pop\n      tag_14\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_15)\n    tag_14:\n      stop\n        /* \"contracts/ds-value/value.sol\":963:1090  function read() public view returns (bytes32) {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"contracts/ds-value/value.sol\":963:1090  function read() public view returns (bytes32) {... */\n      pop\n      tag_17\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ds-value/value.sol\":873:958  function peek() public view returns (bytes32, bool) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_19:\n        /* \"contracts/ds-value/value.sol\":873:958  function peek() public view returns (bytes32, bool) {... */\n      pop\n      tag_20\n      jump(tag_21)\n    tag_20:\n      mload(0x40)\n      dup1\n      dup4\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n      pop\n      tag_23\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_24)\n    tag_23:\n      stop\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n      pop\n      tag_26\n      jump(tag_27)\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ds-value/value.sol\":1190:1271  function void() public note auth {  // unset the value... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"contracts/ds-value/value.sol\":1190:1271  function void() public note auth {  // unset the value... */\n      pop\n      tag_29\n      jump(tag_30)\n    tag_29:\n      stop\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n      pop\n      tag_32\n      jump(tag_33)\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n    tag_12:\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_35\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_36\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_35:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_37\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"contracts/ds-auth/auth.sol\":1251:1257  owner_ */\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1243:1248  owner */\n      0x1\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1243:1257  owner = owner_ */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1284:1289  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1272:1290  LogSetOwner(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ds-auth/auth.sol\":1167:1297  function setOwner(address owner_)... */\n      pop\n      jump\t// out\n        /* \"contracts/ds-value/value.sol\":1095:1185  function poke(bytes32 wut) public note auth {... */\n    tag_15:\n        /* \"contracts/ds-note/note.sol\":1003:1014  bytes32 foo */\n      0x0\n        /* \"contracts/ds-note/note.sol\":1024:1035  bytes32 bar */\n      dup1\n        /* \"contracts/ds-note/note.sol\":1089:1090  4 */\n      0x4\n        /* \"contracts/ds-note/note.sol\":1076:1091  calldataload(4) */\n      calldataload\n        /* \"contracts/ds-note/note.sol\":1069:1091  foo := calldataload(4) */\n      swap2\n      pop\n        /* \"contracts/ds-note/note.sol\":1124:1126  36 */\n      0x24\n        /* \"contracts/ds-note/note.sol\":1111:1127  calldataload(36) */\n      calldataload\n        /* \"contracts/ds-note/note.sol\":1104:1127  bar := calldataload(36) */\n      swap1\n      pop\n        /* \"contracts/ds-note/note.sol\":1181:1184  bar */\n      dup1\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0x0)\n      and\n        /* \"contracts/ds-note/note.sol\":1176:1179  foo */\n      dup3\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0x0)\n      and\n        /* \"contracts/ds-note/note.sol\":1164:1174  msg.sender */\n      caller\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-note/note.sol\":1155:1162  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ds-note/note.sol\":1186:1195  msg.value */\n      callvalue\n        /* \"contracts/ds-note/note.sol\":1197:1205  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_41\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_36\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_41:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_42\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"contracts/ds-value/value.sol\":1155:1158  wut */\n      dup3\n        /* \"contracts/ds-value/value.sol\":1149:1152  val */\n      0x2\n        /* \"contracts/ds-value/value.sol\":1149:1158  val = wut */\n      dup2\n      not(0x0)\n      and\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-value/value.sol\":1174:1178  true */\n      0x1\n        /* \"contracts/ds-value/value.sol\":1168:1171  has */\n      dup1\n      0x14\n        /* \"contracts/ds-value/value.sol\":1168:1178  has = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-value/value.sol\":1095:1185  function poke(bytes32 wut) public note auth {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ds-value/value.sol\":963:1090  function read() public view returns (bytes32) {... */\n    tag_18:\n        /* \"contracts/ds-value/value.sol\":1000:1007  bytes32 */\n      0x0\n        /* \"contracts/ds-value/value.sol\":1024:1027  wut */\n      dup1\n        /* \"contracts/ds-value/value.sol\":1029:1032  haz */\n      0x0\n        /* \"contracts/ds-value/value.sol\":1036:1042  peek() */\n      tag_45\n        /* \"contracts/ds-value/value.sol\":1036:1040  peek */\n      tag_21\n        /* \"contracts/ds-value/value.sol\":1036:1042  peek() */\n      jump\t// in\n    tag_45:\n        /* \"contracts/ds-value/value.sol\":1019:1042  var (wut, haz) = peek() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/ds-value/value.sol\":1059:1062  haz */\n      dup1\n        /* \"contracts/ds-value/value.sol\":1052:1063  assert(haz) */\n      iszero\n      iszero\n      tag_46\n      jumpi\n      invalid\n    tag_46:\n        /* \"contracts/ds-value/value.sol\":1080:1083  wut */\n      dup2\n        /* \"contracts/ds-value/value.sol\":1073:1083  return wut */\n      swap3\n      pop\n        /* \"contracts/ds-value/value.sol\":963:1090  function read() public view returns (bytes32) {... */\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"contracts/ds-value/value.sol\":873:958  function peek() public view returns (bytes32, bool) {... */\n    tag_21:\n        /* \"contracts/ds-value/value.sol\":910:917  bytes32 */\n      0x0\n        /* \"contracts/ds-value/value.sol\":919:923  bool */\n      dup1\n        /* \"contracts/ds-value/value.sol\":943:946  val */\n      sload(0x2)\n        /* \"contracts/ds-value/value.sol\":947:950  has */\n      0x1\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ds-value/value.sol\":935:951  return (val,has) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/ds-value/value.sol\":873:958  function peek() public view returns (bytes32, bool) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n    tag_24:\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_49\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_36\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_49:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_50\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"contracts/ds-auth/auth.sol\":1403:1413  authority_ */\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1391:1400  authority */\n      0x0\n      dup1\n        /* \"contracts/ds-auth/auth.sol\":1391:1413  authority = authority_ */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1452:1461  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1428:1463  LogSetAuthority(address(authority)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ds-auth/auth.sol\":1303:1470  function setAuthority(DSAuthority authority_)... */\n      pop\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1039:1060  address public  owner */\n    tag_27:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ds-value/value.sol\":1190:1271  function void() public note auth {  // unset the value... */\n    tag_30:\n        /* \"contracts/ds-note/note.sol\":1003:1014  bytes32 foo */\n      0x0\n        /* \"contracts/ds-note/note.sol\":1024:1035  bytes32 bar */\n      dup1\n        /* \"contracts/ds-note/note.sol\":1089:1090  4 */\n      0x4\n        /* \"contracts/ds-note/note.sol\":1076:1091  calldataload(4) */\n      calldataload\n        /* \"contracts/ds-note/note.sol\":1069:1091  foo := calldataload(4) */\n      swap2\n      pop\n        /* \"contracts/ds-note/note.sol\":1124:1126  36 */\n      0x24\n        /* \"contracts/ds-note/note.sol\":1111:1127  calldataload(36) */\n      calldataload\n        /* \"contracts/ds-note/note.sol\":1104:1127  bar := calldataload(36) */\n      swap1\n      pop\n        /* \"contracts/ds-note/note.sol\":1181:1184  bar */\n      dup1\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0x0)\n      and\n        /* \"contracts/ds-note/note.sol\":1176:1179  foo */\n      dup3\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0x0)\n      and\n        /* \"contracts/ds-note/note.sol\":1164:1174  msg.sender */\n      caller\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-note/note.sol\":1155:1162  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ds-note/note.sol\":1186:1195  msg.value */\n      callvalue\n        /* \"contracts/ds-note/note.sol\":1197:1205  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/ds-note/note.sol\":1147:1206  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      tag_54\n        /* \"contracts/ds-auth/auth.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/ds-auth/auth.sol\":1533:1540  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x0))\n        /* \"contracts/ds-auth/auth.sol\":1508:1520  isAuthorized */\n      tag_36\n        /* \"contracts/ds-auth/auth.sol\":1508:1541  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_54:\n        /* \"contracts/ds-auth/auth.sol\":1500:1566  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      iszero\n      iszero\n      tag_55\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d617574682d756e617574686f72697a6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"contracts/ds-value/value.sol\":1259:1264  false */\n      0x0\n        /* \"contracts/ds-value/value.sol\":1253:1256  has */\n      0x1\n      0x14\n        /* \"contracts/ds-value/value.sol\":1253:1264  has = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ds-value/value.sol\":1190:1271  function void() public note auth {  // unset the value... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1005:1033  DSAuthority public authority */\n    tag_33:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ds-auth/auth.sol\":1590:1969  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n    tag_36:\n        /* \"contracts/ds-auth/auth.sol\":1660:1664  bool */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1695:1699  this */\n      address\n        /* \"contracts/ds-auth/auth.sol\":1680:1700  src == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1680:1683  src */\n      dup4\n        /* \"contracts/ds-auth/auth.sol\":1680:1700  src == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1676:1963  if (src == address(this)) {... */\n      iszero\n      tag_58\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1723:1727  true */\n      0x1\n        /* \"contracts/ds-auth/auth.sol\":1716:1727  return true */\n      swap1\n      pop\n      jump(tag_57)\n        /* \"contracts/ds-auth/auth.sol\":1676:1963  if (src == address(this)) {... */\n    tag_58:\n        /* \"contracts/ds-auth/auth.sol\":1755:1760  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1748:1760  src == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1748:1751  src */\n      dup4\n        /* \"contracts/ds-auth/auth.sol\":1748:1760  src == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1744:1963  if (src == owner) {... */\n      iszero\n      tag_60\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1783:1787  true */\n      0x1\n        /* \"contracts/ds-auth/auth.sol\":1776:1787  return true */\n      swap1\n      pop\n      jump(tag_57)\n        /* \"contracts/ds-auth/auth.sol\":1744:1963  if (src == owner) {... */\n    tag_60:\n        /* \"contracts/ds-auth/auth.sol\":1841:1842  0 */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1808:1844  authority == DSAuthority(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1808:1817  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1808:1844  authority == DSAuthority(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ds-auth/auth.sol\":1804:1963  if (authority == DSAuthority(address(0))) {... */\n      iszero\n      tag_62\n      jumpi\n        /* \"contracts/ds-auth/auth.sol\":1867:1872  false */\n      0x0\n        /* \"contracts/ds-auth/auth.sol\":1860:1872  return false */\n      swap1\n      pop\n      jump(tag_57)\n        /* \"contracts/ds-auth/auth.sol\":1804:1963  if (authority == DSAuthority(address(0))) {... */\n    tag_62:\n        /* \"contracts/ds-auth/auth.sol\":1910:1919  authority */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ds-auth/auth.sol\":1910:1927  authority.canCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb7009613\n        /* \"contracts/ds-auth/auth.sol\":1928:1931  src */\n      dup5\n        /* \"contracts/ds-auth/auth.sol\":1941:1945  this */\n      address\n        /* \"contracts/ds-auth/auth.sol\":1948:1951  sig */\n      dup6\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_64\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_64:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_65:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"contracts/ds-auth/auth.sol\":1910:1952  authority.canCall(src, address(this), sig) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1903:1952  return authority.canCall(src, address(this), sig) */\n      swap1\n      pop\n        /* \"contracts/ds-auth/auth.sol\":1590:1969  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n    tag_57:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058202acf456fa2b67abe2ab289c7173213ec3ea935c82e7f1e84a067699a9f4978620029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a2610b25806100976000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100935780631504460f146100d657806357de26a41461010757806359e02dd71461013a5780637a9e5e4b146101785780638da5cb5b146101bb578063ac4c25b214610212578063bf7e214f14610229575b600080fd5b34801561009f57600080fd5b506100d4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610280565b005b3480156100e257600080fd5b5061010560048036038101908080356000191690602001909291905050506103cb565b005b34801561011357600080fd5b5061011c610542565b60405180826000191660001916815260200191505060405180910390f35b34801561014657600080fd5b5061014f610564565b604051808360001916600019168152602001821515151581526020019250505060405180910390f35b34801561018457600080fd5b506101b9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610582565b005b3480156101c757600080fd5b506101d06106cb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021e57600080fd5b506102276106f1565b005b34801561023557600080fd5b5061023e61085d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ae336000357fffffffff0000000000000000000000000000000000000000000000000000000016610882565b1515610322576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b60008060043591506024359050806000191682600019163373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a46104a4336000357fffffffff0000000000000000000000000000000000000000000000000000000016610882565b1515610518576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b826002816000191690555060018060146101000a81548160ff021916908315150217905550505050565b600080600061054f610564565b9150915080151561055c57fe5b819250505090565b600080600254600160149054906101000a900460ff16915091509091565b6105b0336000357fffffffff0000000000000000000000000000000000000000000000000000000016610882565b1515610624576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060043591506024359050806000191682600019163373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a46107ca336000357fffffffff0000000000000000000000000000000000000000000000000000000016610882565b151561083e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b6000600160146101000a81548160ff0219169083151502179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108c15760019050610af3565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109205760019050610af3565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561097f5760009050610af3565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b158015610ab557600080fd5b505af1158015610ac9573d6000803e3d6000fd5b505050506040513d6020811015610adf57600080fd5b810190808051906020019092919050505090505b929150505600a165627a7a723058202acf456fa2b67abe2ab289c7173213ec3ea935c82e7f1e84a067699a9f4978620029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xB25 DUP1 PUSH2 0x97 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8E JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x1504460F EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x57DE26A4 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xAC4C25B2 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x229 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x280 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH2 0x542 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x582 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x6F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH2 0x85D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x882 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x322 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 CALLDATALOAD SWAP2 POP PUSH1 0x24 CALLDATALOAD SWAP1 POP DUP1 PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLVALUE PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x4A4 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x882 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x54F PUSH2 0x564 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 ISZERO ISZERO PUSH2 0x55C JUMPI INVALID JUMPDEST DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x5B0 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x882 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 CALLDATALOAD SWAP2 POP PUSH1 0x24 CALLDATALOAD SWAP1 POP DUP1 PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLVALUE PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x7CA CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x882 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x83E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8C1 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x920 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x97F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB7009613 DUP5 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x2a 0xcf GASLIMIT PUSH16 0xA2B67ABE2AB289C7173213EC3EA935C8 0x2e PUSH32 0x1E84A067699A9F49786200290000000000000000000000000000000000000000 ",
							"sourceMap": "805:468:4:-;;;1106:10:0;1098:5;;:18;;;;;;;;;;;;;;;;;;1143:10;1131:23;;;;;;;;;;;;805:468:4;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100935780631504460f146100d657806357de26a41461010757806359e02dd71461013a5780637a9e5e4b146101785780638da5cb5b146101bb578063ac4c25b214610212578063bf7e214f14610229575b600080fd5b34801561009f57600080fd5b506100d4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610280565b005b3480156100e257600080fd5b5061010560048036038101908080356000191690602001909291905050506103cb565b005b34801561011357600080fd5b5061011c610542565b60405180826000191660001916815260200191505060405180910390f35b34801561014657600080fd5b5061014f610564565b604051808360001916600019168152602001821515151581526020019250505060405180910390f35b34801561018457600080fd5b506101b9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610582565b005b3480156101c757600080fd5b506101d06106cb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021e57600080fd5b506102276106f1565b005b34801561023557600080fd5b5061023e61085d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ae336000357fffffffff0000000000000000000000000000000000000000000000000000000016610882565b1515610322576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b60008060043591506024359050806000191682600019163373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a46104a4336000357fffffffff0000000000000000000000000000000000000000000000000000000016610882565b1515610518576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b826002816000191690555060018060146101000a81548160ff021916908315150217905550505050565b600080600061054f610564565b9150915080151561055c57fe5b819250505090565b600080600254600160149054906101000a900460ff16915091509091565b6105b0336000357fffffffff0000000000000000000000000000000000000000000000000000000016610882565b1515610624576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060043591506024359050806000191682600019163373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a46107ca336000357fffffffff0000000000000000000000000000000000000000000000000000000016610882565b151561083e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b6000600160146101000a81548160ff0219169083151502179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108c15760019050610af3565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109205760019050610af3565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561097f5760009050610af3565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b158015610ab557600080fd5b505af1158015610ac9573d6000803e3d6000fd5b505050506040513d6020811015610adf57600080fd5b810190808051906020019092919050505090505b929150505600a165627a7a723058202acf456fa2b67abe2ab289c7173213ec3ea935c82e7f1e84a067699a9f4978620029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8E JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x1504460F EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x57DE26A4 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xAC4C25B2 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x229 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x280 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH2 0x542 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x582 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x6F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH2 0x85D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x882 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x322 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 CALLDATALOAD SWAP2 POP PUSH1 0x24 CALLDATALOAD SWAP1 POP DUP1 PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLVALUE PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x4A4 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x882 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x54F PUSH2 0x564 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 ISZERO ISZERO PUSH2 0x55C JUMPI INVALID JUMPDEST DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x5B0 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x882 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 CALLDATALOAD SWAP2 POP PUSH1 0x24 CALLDATALOAD SWAP1 POP DUP1 PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLVALUE PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x7CA CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x882 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x83E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D617574682D756E617574686F72697A6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8C1 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x920 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x97F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB7009613 DUP5 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x2a 0xcf GASLIMIT PUSH16 0xA2B67ABE2AB289C7173213EC3EA935C8 0x2e PUSH32 0x1E84A067699A9F49786200290000000000000000000000000000000000000000 ",
							"sourceMap": "805:468:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:130:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1167:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1095:90:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1095:90:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;963:127;;8:9:-1;5:2;;;30:1;27;20:12;5:2;963:127:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;873:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;873:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:167:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1303:167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1039:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1039:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1190:81:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1190:81:4;;;;;;1005:28:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1005:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:130;1508:33;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1251:6;1243:5;;:14;;;;;;;;;;;;;;;;;;1284:5;;;;;;;;;;;1272:18;;;;;;;;;;;;1167:130;:::o;1095:90:4:-;1003:11:2;1024;1089:1;1076:15;1069:22;;1124:2;1111:16;1104:23;;1181:3;1147:59;;;1176:3;1147:59;;;1164:10;1147:59;;1155:7;;;;1147:59;;;1186:9;1197:8;;1147:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:33:0;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1155:3:4;1149;:9;;;;;;;1174:4;1168:3;;:10;;;;;;;;;;;;;;;;;;1095:90;;;:::o;963:127::-;1000:7;1024:3;1029;1036:6;:4;:6::i;:::-;1019:23;;;;1059:3;1052:11;;;;;;1080:3;1073:10;;963:127;;;:::o;873:85::-;910:7;919:4;943:3;;947;;;;;;;;;;;935:16;;;;873:85;;:::o;1303:167:0:-;1508:33;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1403:10;1391:9;;:22;;;;;;;;;;;;;;;;;;1452:9;;;;;;;;;;;1428:35;;;;;;;;;;;;1303:167;:::o;1039:21::-;;;;;;;;;;;;;:::o;1190:81:4:-;1003:11:2;1024;1089:1;1076:15;1069:22;;1124:2;1111:16;1104:23;;1181:3;1147:59;;;1176:3;1147:59;;;1164:10;1147:59;;1155:7;;;;1147:59;;;1186:9;1197:8;;1147:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:33:0;1521:10;1533:7;;;;1508:12;:33::i;:::-;1500:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1259:5:4;1253:3;;:11;;;;;;;;;;;;;;;;;;1190:81;;:::o;1005:28:0:-;;;;;;;;;;;;;:::o;1590:379::-;1660:4;1695;1680:20;;:3;:20;;;1676:287;;;1723:4;1716:11;;;;1676:287;1755:5;;;;;;;;;;;1748:12;;:3;:12;;;1744:219;;;1783:4;1776:11;;;;1744:219;1841:1;1808:36;;:9;;;;;;;;;;;:36;;;1804:159;;;1867:5;1860:12;;;;1804:159;1910:9;;;;;;;;;;;:17;;;1928:3;1941:4;1948:3;1910:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1910:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1910:42:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1910:42:0;;;;;;;;;;;;;;;;1903:49;;1590:379;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "570600",
								"executionCost": "22008",
								"totalCost": "592608"
							},
							"external": {
								"authority()": "596",
								"owner()": "552",
								"peek()": "818",
								"poke(bytes32)": "infinite",
								"read()": "845",
								"setAuthority(address)": "infinite",
								"setOwner(address)": "infinite",
								"void()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 805,
									"end": 1273,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 805,
									"end": 1273,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 805,
									"end": 1273,
									"name": "MSTORE"
								},
								{
									"begin": 1106,
									"end": 1116,
									"name": "CALLER"
								},
								{
									"begin": 1098,
									"end": 1103,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1098,
									"end": 1103,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "EXP"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP2"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SLOAD"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP2"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "MUL"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "NOT"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "AND"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SWAP1"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "DUP4"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "AND"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "MUL"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "OR"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SWAP1"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "SSTORE"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "POP"
								},
								{
									"begin": 1143,
									"end": 1153,
									"name": "CALLER"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "AND"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "MLOAD"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "MLOAD"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "DUP1"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SWAP2"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SUB"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SWAP1"
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "LOG2"
								},
								{
									"begin": 805,
									"end": 1273,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 805,
									"end": 1273,
									"name": "DUP1"
								},
								{
									"begin": 805,
									"end": 1273,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 805,
									"end": 1273,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 805,
									"end": 1273,
									"name": "CODECOPY"
								},
								{
									"begin": 805,
									"end": 1273,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 805,
									"end": 1273,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058202acf456fa2b67abe2ab289c7173213ec3ea935c82e7f1e84a067699a9f4978620029",
									".code": [
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "MSTORE"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "LT"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "JUMPI"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "SWAP1"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "DIV"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "AND"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "DUP1"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH",
											"value": "13AF4035"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "EQ"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "JUMPI"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "DUP1"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH",
											"value": "1504460F"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "EQ"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "JUMPI"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "DUP1"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH",
											"value": "57DE26A4"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "EQ"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "JUMPI"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "DUP1"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH",
											"value": "59E02DD7"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "EQ"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "JUMPI"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "DUP1"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH",
											"value": "7A9E5E4B"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "EQ"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "JUMPI"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "DUP1"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "EQ"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "JUMPI"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "DUP1"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH",
											"value": "AC4C25B2"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "EQ"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "JUMPI"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "DUP1"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH",
											"value": "BF7E214F"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "EQ"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "JUMPI"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "JUMPDEST"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "DUP1"
										},
										{
											"begin": 805,
											"end": 1273,
											"name": "REVERT"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SUB"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "ADD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "AND"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "ADD"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP3"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "STOP"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "NOT"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "AND"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "SWAP3"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "JUMP"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "STOP"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "JUMPDEST"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "POP"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "JUMP"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "JUMPDEST"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "MLOAD"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "DUP1"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "DUP3"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "NOT"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "AND"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "NOT"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "AND"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "DUP2"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "MSTORE"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "ADD"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "SWAP2"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "POP"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "POP"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "MLOAD"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "DUP1"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "SWAP2"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "SUB"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "SWAP1"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "RETURN"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "JUMPDEST"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "POP"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "JUMP"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "JUMPDEST"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "MLOAD"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "DUP1"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "DUP4"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "NOT"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "AND"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "NOT"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "AND"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "DUP2"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "MSTORE"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "ADD"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "DUP3"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "ISZERO"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "ISZERO"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "ISZERO"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "ISZERO"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "DUP2"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "MSTORE"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "ADD"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "SWAP3"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "POP"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "POP"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "POP"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "MLOAD"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "DUP1"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "SWAP2"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "SUB"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "RETURN"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SUB"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "AND"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP3"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "STOP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP3"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MSTORE"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "ADD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "MLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SUB"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "RETURN"
										},
										{
											"begin": 1190,
											"end": 1271,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1190,
											"end": 1271,
											"name": "JUMPDEST"
										},
										{
											"begin": 1190,
											"end": 1271,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1190,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1190,
											"end": 1271,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1190,
											"end": 1271,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1190,
											"end": 1271,
											"name": "JUMP"
										},
										{
											"begin": 1190,
											"end": 1271,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1190,
											"end": 1271,
											"name": "JUMPDEST"
										},
										{
											"begin": 1190,
											"end": 1271,
											"name": "STOP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP3"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MSTORE"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SUB"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "RETURN"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMPDEST"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1251,
											"end": 1257,
											"name": "DUP1"
										},
										{
											"begin": 1243,
											"end": 1248,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1243,
											"end": 1248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "EXP"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP2"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SLOAD"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP2"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "MUL"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "NOT"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "AND"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SWAP1"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "DUP4"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "AND"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "MUL"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "OR"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SWAP1"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "SSTORE"
										},
										{
											"begin": 1243,
											"end": 1257,
											"name": "POP"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SLOAD"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "EXP"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "DIV"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "AND"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "AND"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "MLOAD"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "MLOAD"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "DUP1"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SWAP2"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SUB"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SWAP1"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "LOG2"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1297,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "JUMPDEST"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1035,
											"name": "DUP1"
										},
										{
											"begin": 1089,
											"end": 1090,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1069,
											"end": 1091,
											"name": "SWAP2"
										},
										{
											"begin": 1069,
											"end": 1091,
											"name": "POP"
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1111,
											"end": 1127,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1104,
											"end": 1127,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1127,
											"name": "POP"
										},
										{
											"begin": 1181,
											"end": 1184,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1176,
											"end": 1179,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1174,
											"name": "CALLER"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "AND"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1186,
											"end": 1195,
											"name": "CALLVALUE"
										},
										{
											"begin": 1197,
											"end": 1205,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1205,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MLOAD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SUB"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MLOAD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SUB"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "LOG4"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1155,
											"end": 1158,
											"name": "DUP3"
										},
										{
											"begin": 1149,
											"end": 1152,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1149,
											"end": 1158,
											"name": "DUP2"
										},
										{
											"begin": 1149,
											"end": 1158,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1149,
											"end": 1158,
											"name": "NOT"
										},
										{
											"begin": 1149,
											"end": 1158,
											"name": "AND"
										},
										{
											"begin": 1149,
											"end": 1158,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1158,
											"name": "SSTORE"
										},
										{
											"begin": 1149,
											"end": 1158,
											"name": "POP"
										},
										{
											"begin": 1174,
											"end": 1178,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1168,
											"end": 1171,
											"name": "DUP1"
										},
										{
											"begin": 1168,
											"end": 1171,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "EXP"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "DUP2"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "SLOAD"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "DUP2"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "MUL"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "NOT"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "AND"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "SWAP1"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "DUP4"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "ISZERO"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "ISZERO"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "MUL"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "OR"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "SWAP1"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "SSTORE"
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1185,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "JUMPDEST"
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1027,
											"name": "DUP1"
										},
										{
											"begin": 1029,
											"end": 1032,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1042,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1036,
											"end": 1042,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1042,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1036,
											"end": 1042,
											"name": "JUMPDEST"
										},
										{
											"begin": 1019,
											"end": 1042,
											"name": "SWAP2"
										},
										{
											"begin": 1019,
											"end": 1042,
											"name": "POP"
										},
										{
											"begin": 1019,
											"end": 1042,
											"name": "SWAP2"
										},
										{
											"begin": 1019,
											"end": 1042,
											"name": "POP"
										},
										{
											"begin": 1059,
											"end": 1062,
											"name": "DUP1"
										},
										{
											"begin": 1052,
											"end": 1063,
											"name": "ISZERO"
										},
										{
											"begin": 1052,
											"end": 1063,
											"name": "ISZERO"
										},
										{
											"begin": 1052,
											"end": 1063,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1052,
											"end": 1063,
											"name": "JUMPI"
										},
										{
											"begin": 1052,
											"end": 1063,
											"name": "INVALID"
										},
										{
											"begin": 1052,
											"end": 1063,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1052,
											"end": 1063,
											"name": "JUMPDEST"
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "DUP2"
										},
										{
											"begin": 1073,
											"end": 1083,
											"name": "SWAP3"
										},
										{
											"begin": 1073,
											"end": 1083,
											"name": "POP"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "POP"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "POP"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "SWAP1"
										},
										{
											"begin": 963,
											"end": 1090,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "JUMPDEST"
										},
										{
											"begin": 910,
											"end": 917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 919,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 943,
											"end": 946,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 943,
											"end": 946,
											"name": "SLOAD"
										},
										{
											"begin": 947,
											"end": 950,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 947,
											"end": 950,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 947,
											"end": 950,
											"name": "SWAP1"
										},
										{
											"begin": 947,
											"end": 950,
											"name": "SLOAD"
										},
										{
											"begin": 947,
											"end": 950,
											"name": "SWAP1"
										},
										{
											"begin": 947,
											"end": 950,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 947,
											"end": 950,
											"name": "EXP"
										},
										{
											"begin": 947,
											"end": 950,
											"name": "SWAP1"
										},
										{
											"begin": 947,
											"end": 950,
											"name": "DIV"
										},
										{
											"begin": 947,
											"end": 950,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 947,
											"end": 950,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SWAP2"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "POP"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SWAP2"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "POP"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "SWAP2"
										},
										{
											"begin": 873,
											"end": 958,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1403,
											"end": 1413,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "EXP"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SLOAD"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "MUL"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "NOT"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP4"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "MUL"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "OR"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SSTORE"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "POP"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DUP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SLOAD"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "EXP"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DIV"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "AND"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "AND"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "MLOAD"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "MLOAD"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "DUP1"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SWAP2"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SUB"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "SWAP1"
										},
										{
											"begin": 1428,
											"end": 1463,
											"name": "LOG2"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1470,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SLOAD"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "EXP"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DIV"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "DUP2"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1190,
											"end": 1271,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1190,
											"end": 1271,
											"name": "JUMPDEST"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1035,
											"name": "DUP1"
										},
										{
											"begin": 1089,
											"end": 1090,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1069,
											"end": 1091,
											"name": "SWAP2"
										},
										{
											"begin": 1069,
											"end": 1091,
											"name": "POP"
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1111,
											"end": 1127,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1104,
											"end": 1127,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1127,
											"name": "POP"
										},
										{
											"begin": 1181,
											"end": 1184,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1176,
											"end": 1179,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1174,
											"name": "CALLER"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "AND"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1186,
											"end": 1195,
											"name": "CALLVALUE"
										},
										{
											"begin": 1197,
											"end": 1205,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1205,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MLOAD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SUB"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP5"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "MLOAD"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP2"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SUB"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "SWAP1"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "LOG4"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ISZERO"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPI"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "64732D617574682D756E617574686F72697A6564000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "ADD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "MLOAD"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "DUP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP2"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SUB"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "SWAP1"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "REVERT"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 1500,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1259,
											"end": 1264,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1256,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1253,
											"end": 1256,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "EXP"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "DUP2"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "SLOAD"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "DUP2"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "MUL"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "NOT"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "AND"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "SWAP1"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "DUP4"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "ISZERO"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "ISZERO"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "MUL"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "OR"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "SWAP1"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "SSTORE"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "POP"
										},
										{
											"begin": 1190,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1190,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1190,
											"end": 1271,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SLOAD"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "EXP"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DIV"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1005,
											"end": 1033,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMPDEST"
										},
										{
											"begin": 1660,
											"end": 1664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1699,
											"name": "ADDRESS"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "AND"
										},
										{
											"begin": 1680,
											"end": 1683,
											"name": "DUP4"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "AND"
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "EQ"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1723,
											"end": 1727,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "SWAP1"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "POP"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "JUMP"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 1676,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SLOAD"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "EXP"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "DIV"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "DUP4"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "EQ"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1783,
											"end": 1787,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "SWAP1"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "POP"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "JUMP"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 1744,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "DUP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SLOAD"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "EXP"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "DIV"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1844,
											"name": "EQ"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "ISZERO"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "JUMPI"
										},
										{
											"begin": 1867,
											"end": 1872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "SWAP1"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "POP"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "JUMP"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1804,
											"end": 1963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SLOAD"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "EXP"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DIV"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "PUSH",
											"value": "B7009613"
										},
										{
											"begin": 1928,
											"end": 1931,
											"name": "DUP5"
										},
										{
											"begin": 1941,
											"end": 1945,
											"name": "ADDRESS"
										},
										{
											"begin": 1948,
											"end": 1951,
											"name": "DUP6"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP5"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MUL"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP5"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP3"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "NOT"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "NOT"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MSTORE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP4"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SUB"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP8"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "GAS"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "CALL"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "MLOAD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP3"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP2"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1910,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1903,
											"end": 1952,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 1952,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMPDEST"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "SWAP3"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "SWAP2"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "POP"
										},
										{
											"begin": 1590,
											"end": 1969,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"authority()": "bf7e214f",
							"owner()": "8da5cb5b",
							"peek()": "59e02dd7",
							"poke(bytes32)": "1504460f",
							"read()": "57de26a4",
							"setAuthority(address)": "7a9e5e4b",
							"setOwner(address)": "13af4035",
							"void()": "ac4c25b2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.23+commit.124ca40d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wut\",\"type\":\"bytes32\"}],\"name\":\"poke\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"read\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"peek\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"void\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ds-value/value.sol\":\"DSValue\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ds-auth/auth.sol\":{\"keccak256\":\"0xc02ed2267e6475942b44a1bc837d7691dc0a9febd53cdcb9b733c75a8868c551\",\"urls\":[\"bzzr://bd3fbf232b415b118f5cefe30a3a8e6853960efa6203a205522e35ab7e474eab\"]},\"contracts/ds-math/math.sol\":{\"keccak256\":\"0x961977c4d8637627cd2426212b1e457720913e52674419e910f25741f5057a11\",\"urls\":[\"bzzr://a54443c33dae485bf186455cd58593cbb5187d41231582087d4bc99157a68396\"]},\"contracts/ds-note/note.sol\":{\"keccak256\":\"0xa16a36d355ac085634345bfa5fd6165736e97403ebf59de78a2f9e3025e0bbb1\",\"urls\":[\"bzzr://c712d0b3aab1e6c2dad18d3f4e0ed1aa4bdd66eedbce3f8d5a6862b9f2f19759\"]},\"contracts/ds-thing/thing.sol\":{\"keccak256\":\"0xd817e0f1080f241ec988c41287ad39700e0167690c283b0f7f238da8721a2595\",\"urls\":[\"bzzr://3dcfb82881d7931ba173dfd75267c126b4a430a347b7cd9ad26730fe95e0255a\"]},\"contracts/ds-value/value.sol\":{\"keccak256\":\"0xcd5298fc9f91c5fffa6e60da9f0fb1e1be4235a3ff0e6621af5d510e51b368b2\",\"urls\":[\"bzzr://daf310e363273ac0415a22beeb2e26c1c4c8a5c7f6c32523e8dcd1fbb1aaedab\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/ds-value/value.sol:29:14: Warning: Use of the \"var\" keyword is deprecated.\n        var (wut, haz) = peek();\n             ^-^\n",
				"message": "Use of the \"var\" keyword is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1027,
					"file": "contracts/ds-value/value.sol",
					"start": 1024
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/ds-value/value.sol:29:19: Warning: Use of the \"var\" keyword is deprecated.\n        var (wut, haz) = peek();\n                  ^-^\n",
				"message": "Use of the \"var\" keyword is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1032,
					"file": "contracts/ds-value/value.sol",
					"start": 1029
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/ds-note/note.sol:37:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data);\n        ^---------------------------------------------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1206,
					"file": "contracts/ds-note/note.sol",
					"start": 1147
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ds-auth/auth.sol": {
				"ast": {
					"absolutePath": "contracts/ds-auth/auth.sol",
					"exportedSymbols": {
						"DSAuth": [
							138
						],
						"DSAuthEvents": [
							22
						],
						"DSAuthority": [
							13
						]
					},
					"id": 139,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "677:25:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "DSAuthority",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 12,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "canCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "758:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "771:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"name": "sig",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "784:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 6,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "784:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "748:52:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "824:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "824:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "823:6:0"
									},
									"scope": 13,
									"src": "732:98:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 139,
							"src": "704:128:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "DSAuthEvents",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 17,
									"name": "LogSetAuthority",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"name": "authority",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "885:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "884:27:0"
									},
									"src": "862:50:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 21,
									"name": "LogSetOwner",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "940:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "939:23:0"
									},
									"src": "917:46:0"
								}
							],
							"scope": 139,
							"src": "834:131:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 23,
										"name": "DSAuthEvents",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "986:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DSAuthEvents_$22",
											"typeString": "contract DSAuthEvents"
										}
									},
									"id": 24,
									"nodeType": "InheritanceSpecifier",
									"src": "986:12:0"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 138,
							"linearizedBaseContracts": [
								138,
								22
							],
							"name": "DSAuth",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 26,
									"name": "authority",
									"nodeType": "VariableDeclaration",
									"scope": 138,
									"src": "1005:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_DSAuthority_$13",
										"typeString": "contract DSAuthority"
									},
									"typeName": {
										"contractScope": null,
										"id": 25,
										"name": "DSAuthority",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 13,
										"src": "1005:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DSAuthority_$13",
											"typeString": "contract DSAuthority"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 28,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 138,
									"src": "1039:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1039:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "1088:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 31,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1098:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 32,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "1106:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1106:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1098:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1098:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 37,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "1143:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1143:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 36,
														"name": "LogSetOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1131:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1131:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "EmitStatement",
												"src": "1126:28:0"
											}
										]
									},
									"documentation": null,
									"id": 42,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1078:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1088:0:0"
									},
									"scope": 138,
									"src": "1067:94:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1233:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 49,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1243:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 50,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "1251:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1243:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1243:14:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 54,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1284:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 53,
														"name": "LogSetOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1272:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1272:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "EmitStatement",
												"src": "1267:23:0"
											}
										]
									},
									"documentation": null,
									"id": 58,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 47,
											"modifierName": {
												"argumentTypes": null,
												"id": 46,
												"name": "auth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 90,
												"src": "1224:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1224:4:0"
										}
									],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "owner_",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1185:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1184:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1233:0:0"
									},
									"scope": 138,
									"src": "1167:130:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "1381:89:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 65,
														"name": "authority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1391:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_DSAuthority_$13",
															"typeString": "contract DSAuthority"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 66,
														"name": "authority_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "1403:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_DSAuthority_$13",
															"typeString": "contract DSAuthority"
														}
													},
													"src": "1391:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_DSAuthority_$13",
														"typeString": "contract DSAuthority"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "1391:22:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 71,
																	"name": "authority",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "1452:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DSAuthority_$13",
																		"typeString": "contract DSAuthority"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DSAuthority_$13",
																		"typeString": "contract DSAuthority"
																	}
																],
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1444:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1444:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 69,
														"name": "LogSetAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1428:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1428:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "EmitStatement",
												"src": "1423:40:0"
											}
										]
									},
									"documentation": null,
									"id": 76,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 63,
											"modifierName": {
												"argumentTypes": null,
												"id": 62,
												"name": "auth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 90,
												"src": "1372:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1372:4:0"
										}
									],
									"name": "setAuthority",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"name": "authority_",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1325:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_DSAuthority_$13",
													"typeString": "contract DSAuthority"
												},
												"typeName": {
													"contractScope": null,
													"id": 59,
													"name": "DSAuthority",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 13,
													"src": "1325:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_DSAuthority_$13",
														"typeString": "contract DSAuthority"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1324:24:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:0:0"
									},
									"scope": 138,
									"src": "1303:167:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1490:94:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 80,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "1521:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 81,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1521:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 82,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "1533:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sig",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1533:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 79,
																"name": "isAuthorized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "1508:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																	"typeString": "function (address,bytes4) view returns (bool)"
																}
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1508:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d617574682d756e617574686f72697a6564",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1543:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_166b1fe4059d096071443d23428666de4ceaca5dfeecf186a801a33a4cdbddd9",
																"typeString": "literal_string \"ds-auth-unauthorized\""
															},
															"value": "ds-auth-unauthorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_166b1fe4059d096071443d23428666de4ceaca5dfeecf186a801a33a4cdbddd9",
																"typeString": "literal_string \"ds-auth-unauthorized\""
															}
														],
														"id": 78,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															593,
															594
														],
														"referencedDeclaration": 594,
														"src": "1500:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1500:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1500:66:0"
											},
											{
												"id": 88,
												"nodeType": "PlaceholderStatement",
												"src": "1576:1:0"
											}
										]
									},
									"documentation": null,
									"id": 90,
									"name": "auth",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:0:0"
									},
									"src": "1476:108:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "1666:303:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 99,
														"name": "src",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "1680:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 101,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "1695:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DSAuth_$138",
																	"typeString": "contract DSAuth"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_DSAuth_$138",
																	"typeString": "contract DSAuth"
																}
															],
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1687:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1687:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1680:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 107,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "1748:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 108,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1755:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1748:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_contract$_DSAuthority_$13",
																"typeString": "contract DSAuthority"
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 113,
																"name": "authority",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1808:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DSAuthority_$13",
																	"typeString": "contract DSAuthority"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1841:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1833:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1833:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "DSAuthority",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1821:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_DSAuthority_$13_$",
																		"typeString": "type(contract DSAuthority)"
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1821:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DSAuthority_$13",
																	"typeString": "contract DSAuthority"
																}
															},
															"src": "1808:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 132,
															"nodeType": "Block",
															"src": "1889:74:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 125,
																				"name": "src",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 92,
																				"src": "1928:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 127,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 607,
																						"src": "1941:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_DSAuth_$138",
																							"typeString": "contract DSAuth"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_DSAuth_$138",
																							"typeString": "contract DSAuth"
																						}
																					],
																					"id": 126,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1933:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": "address"
																				},
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1933:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 129,
																				"name": "sig",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 94,
																				"src": "1948:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 123,
																				"name": "authority",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "1910:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DSAuthority_$13",
																					"typeString": "contract DSAuthority"
																				}
																			},
																			"id": 124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "canCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 12,
																			"src": "1910:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_bytes4_$returns$_t_bool_$",
																				"typeString": "function (address,address,bytes4) view external returns (bool)"
																			}
																		},
																		"id": 130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1910:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 98,
																	"id": 131,
																	"nodeType": "Return",
																	"src": "1903:49:0"
																}
															]
														},
														"id": 133,
														"nodeType": "IfStatement",
														"src": "1804:159:0",
														"trueBody": {
															"id": 122,
															"nodeType": "Block",
															"src": "1846:37:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"hexValue": "66616c7365",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1867:5:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"functionReturnParameters": 98,
																	"id": 121,
																	"nodeType": "Return",
																	"src": "1860:12:0"
																}
															]
														}
													},
													"id": 134,
													"nodeType": "IfStatement",
													"src": "1744:219:0",
													"trueBody": {
														"id": 112,
														"nodeType": "Block",
														"src": "1762:36:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1783:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"functionReturnParameters": 98,
																"id": 111,
																"nodeType": "Return",
																"src": "1776:11:0"
															}
														]
													}
												},
												"id": 135,
												"nodeType": "IfStatement",
												"src": "1676:287:0",
												"trueBody": {
													"id": 106,
													"nodeType": "Block",
													"src": "1702:36:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1723:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 98,
															"id": 105,
															"nodeType": "Return",
															"src": "1716:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 137,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "isAuthorized",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1612:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"name": "sig",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1625:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 93,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1625:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1611:25:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1660:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 96,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1660:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1659:6:0"
									},
									"scope": 138,
									"src": "1590:379:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 139,
							"src": "967:1004:0"
						}
					],
					"src": "677:1294:0"
				},
				"id": 0
			},
			"contracts/ds-math/math.sol": {
				"ast": {
					"absolutePath": "contracts/ds-math/math.sol",
					"exportedSymbols": {
						"DSMath": [
							439
						]
					},
					"id": 440,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 140,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "696:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 439,
							"linearizedBaseContracts": [
								439
							],
							"name": "DSMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "804:42:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 150,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "823:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 151,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 142,
																				"src": "827:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 152,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 144,
																				"src": "831:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "827:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "823:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 155,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "822:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 156,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "837:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "822:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															593,
															594
														],
														"referencedDeclaration": 593,
														"src": "814:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "814:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "814:25:1"
											}
										]
									},
									"documentation": null,
									"id": 161,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "757:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "757:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "765:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "765:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "756:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "796:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "796:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "795:8:1"
									},
									"scope": 439,
									"src": "744:102:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "911:42:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 171,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 168,
																			"src": "930:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 172,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 163,
																				"src": "934:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 173,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 165,
																				"src": "938:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "934:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "930:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 176,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "929:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 177,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "944:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "929:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															593,
															594
														],
														"referencedDeclaration": 593,
														"src": "921:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "921:25:1"
											}
										]
									},
									"documentation": null,
									"id": 182,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "864:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "864:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "872:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "872:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "863:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "903:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "903:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "902:8:1"
									},
									"scope": 439,
									"src": "851:102:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "1018:56:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 192,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "1036:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1041:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1036:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 195,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 189,
																					"src": "1047:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 196,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 184,
																						"src": "1051:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 197,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 186,
																						"src": "1055:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1051:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1047:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 200,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1046:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 201,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 186,
																		"src": "1060:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1046:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 203,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "1065:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1046:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1036:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															593,
															594
														],
														"referencedDeclaration": 593,
														"src": "1028:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1028:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "1028:39:1"
											}
										]
									},
									"documentation": null,
									"id": 209,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "971:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "971:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "979:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "979:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "970:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1010:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1010:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1009:8:1"
									},
									"scope": 439,
									"src": "958:116:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "1140:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 218,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "1157:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 219,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "1162:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1157:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 222,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "1170:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1157:14:1",
													"trueExpression": {
														"argumentTypes": null,
														"id": 221,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1166:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 217,
												"id": 224,
												"nodeType": "Return",
												"src": "1150:21:1"
											}
										]
									},
									"documentation": null,
									"id": 226,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1093:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1093:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1101:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1101:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1092:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1132:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1132:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1131:8:1"
									},
									"scope": 439,
									"src": "1080:98:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "1243:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 235,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "1260:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 236,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "1265:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1260:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 239,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "1273:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1260:14:1",
													"trueExpression": {
														"argumentTypes": null,
														"id": 238,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "1269:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 234,
												"id": 241,
												"nodeType": "Return",
												"src": "1253:21:1"
											}
										]
									},
									"documentation": null,
									"id": 243,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1196:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1196:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1204:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1204:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1195:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1235:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1234:8:1"
									},
									"scope": 439,
									"src": "1183:98:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "1344:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 252,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "1361:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 253,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "1366:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "1361:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 256,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "1374:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1361:14:1",
													"trueExpression": {
														"argumentTypes": null,
														"id": 255,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "1370:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 251,
												"id": 258,
												"nodeType": "Return",
												"src": "1354:21:1"
											}
										]
									},
									"documentation": null,
									"id": 260,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "imin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1300:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 244,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1300:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1307:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 246,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1307:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1299:14:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1337:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 249,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1337:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1336:7:1"
									},
									"scope": 439,
									"src": "1286:96:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1445:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 269,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "1462:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 270,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "1467:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "1462:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 273,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "1475:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1462:14:1",
													"trueExpression": {
														"argumentTypes": null,
														"id": 272,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "1471:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 268,
												"id": 275,
												"nodeType": "Return",
												"src": "1455:21:1"
											}
										]
									},
									"documentation": null,
									"id": 277,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "imax",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1401:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 261,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1401:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1408:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 263,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1408:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1400:14:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1438:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 266,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1438:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1437:7:1"
									},
									"scope": 439,
									"src": "1387:96:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 282,
									"name": "WAD",
									"nodeType": "VariableDeclaration",
									"scope": 439,
									"src": "1489:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 278,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1489:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 281,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 279,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1509:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3138",
											"id": 280,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1515:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "1509:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 287,
									"name": "RAY",
									"nodeType": "VariableDeclaration",
									"scope": 439,
									"src": "1523:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 283,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1523:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 286,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 284,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1543:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3237",
											"id": 285,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1549:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_27_by_1",
												"typeString": "int_const 27"
											},
											"value": "27"
										},
										"src": "1543:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1619:50:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 296,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "1629:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 299,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 289,
																			"src": "1641:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 300,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "1644:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 298,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "1637:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1637:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 302,
																		"name": "WAD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "1648:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1654:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1648:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 297,
																"name": "add",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "1633:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1633:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 306,
															"name": "WAD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1659:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1633:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1629:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1629:33:1"
											}
										]
									},
									"documentation": null,
									"id": 311,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "wmul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1572:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1572:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1580:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1580:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1571:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1611:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1611:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1610:8:1"
									},
									"scope": 439,
									"src": "1558:111:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "1735:50:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 320,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "1745:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 323,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 313,
																			"src": "1757:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 324,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "1760:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 322,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "1753:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1753:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 326,
																		"name": "RAY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "1764:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1770:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1764:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 321,
																"name": "add",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "1749:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1749:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 330,
															"name": "RAY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "1775:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1749:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1745:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "1745:33:1"
											}
										]
									},
									"documentation": null,
									"id": 335,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "rmul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1688:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1688:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1696:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1696:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1687:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1727:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1727:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1726:8:1"
									},
									"scope": 439,
									"src": "1674:111:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1851:48:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 344,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "1861:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 347,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 337,
																			"src": "1873:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 348,
																			"name": "WAD",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "1876:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 346,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "1869:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1869:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 350,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 339,
																		"src": "1882:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1886:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1882:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 345,
																"name": "add",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "1865:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1865:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 354,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "1891:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1865:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1861:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "1861:31:1"
											}
										]
									},
									"documentation": null,
									"id": 359,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "wdiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1804:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1804:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1812:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1812:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1803:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1843:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1843:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1842:8:1"
									},
									"scope": 439,
									"src": "1790:109:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "1965:48:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 368,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "1975:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 371,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 361,
																			"src": "1987:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 372,
																			"name": "RAY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1990:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 370,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "1983:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1983:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 374,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "1996:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2000:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1996:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 369,
																"name": "add",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "1979:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1979:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 378,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "2005:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1979:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1975:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "1975:31:1"
											}
										]
									},
									"documentation": null,
									"id": 383,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "rdiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1918:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1918:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1926:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1926:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1917:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1957:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1957:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1956:8:1"
									},
									"scope": 439,
									"src": "1904:109:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "2637:196:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 392,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2647:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 393,
																	"name": "n",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "2651:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2655:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2651:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2660:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2651:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 399,
															"name": "RAY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "2668:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "2651:20:1",
														"trueExpression": {
															"argumentTypes": null,
															"id": 398,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "2664:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2647:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "2647:24:1"
											},
											{
												"body": {
													"id": 435,
													"nodeType": "Block",
													"src": "2711:116:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 414,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2725:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 416,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 385,
																			"src": "2734:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 417,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 385,
																			"src": "2737:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 415,
																		"name": "rmul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "2729:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2729:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2725:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 420,
															"nodeType": "ExpressionStatement",
															"src": "2725:14:1"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 421,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "2758:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2762:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2758:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2767:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2758:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 434,
															"nodeType": "IfStatement",
															"src": "2754:63:1",
															"trueBody": {
																"id": 433,
																"nodeType": "Block",
																"src": "2770:47:1",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 426,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "2788:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 428,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 390,
																						"src": "2797:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 429,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 385,
																						"src": "2800:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 427,
																					"name": "rmul",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 335,
																					"src": "2792:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2792:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2788:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 432,
																		"nodeType": "ExpressionStatement",
																		"src": "2788:14:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 407,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "2695:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2700:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2695:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 436,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 403,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "2687:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "/=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2692:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2687:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 406,
													"nodeType": "ExpressionStatement",
													"src": "2687:6:1"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 410,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "2703:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "/=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2708:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2703:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 413,
													"nodeType": "ExpressionStatement",
													"src": "2703:6:1"
												},
												"nodeType": "ForStatement",
												"src": "2682:145:1"
											}
										]
									},
									"documentation": null,
									"id": 438,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "rpow",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2590:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2590:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2598:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2598:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2589:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2629:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2629:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2628:8:1"
									},
									"scope": 439,
									"src": "2576:257:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 440,
							"src": "722:2113:1"
						}
					],
					"src": "696:2139:1"
				},
				"id": 1
			},
			"contracts/ds-note/note.sol": {
				"ast": {
					"absolutePath": "contracts/ds-note/note.sol",
					"exportedSymbols": {
						"DSNote": [
							480
						]
					},
					"id": 481,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 441,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "709:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 480,
							"linearizedBaseContracts": [
								480
							],
							"name": "DSNote",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": true,
									"documentation": null,
									"id": 455,
									"name": "LogNote",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"indexed": true,
												"name": "sig",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "780:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 442,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "780:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"name": "guy",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "811:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"indexed": true,
												"name": "foo",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "842:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 446,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"name": "bar",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "873:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 448,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": false,
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "904:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "904:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": false,
												"name": "fax",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "935:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "935:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "770:192:2"
									},
									"src": "757:216:2"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "993:232:2",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"name": "foo",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "1003:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 457,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1003:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 459,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1003:11:2"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"name": "bar",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "1024:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 460,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1024:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 462,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1024:11:2"
											},
											{
												"externalReferences": [
													{
														"foo": {
															"declaration": 458,
															"isOffset": false,
															"isSlot": false,
															"src": "1069:3:2",
															"valueSize": 1
														}
													},
													{
														"bar": {
															"declaration": 461,
															"isOffset": false,
															"isSlot": false,
															"src": "1104:3:2",
															"valueSize": 1
														}
													}
												],
												"id": 463,
												"nodeType": "InlineAssembly",
												"operations": "{\n    foo := calldataload(4)\n    bar := calldataload(36)\n}",
												"src": "1046:108:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "1155:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sig",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1155:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 467,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "1164:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1164:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 469,
															"name": "foo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "1176:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 470,
															"name": "bar",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "1181:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 471,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "1186:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1186:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 473,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "1197:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1197:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 464,
														"name": "LogNote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "1147:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes4_$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (bytes4,address,bytes32,bytes32,uint256,bytes memory)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:59:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "1147:59:2"
											},
											{
												"id": 477,
												"nodeType": "PlaceholderStatement",
												"src": "1217:1:2"
											}
										]
									},
									"documentation": null,
									"id": 479,
									"name": "note",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "993:0:2"
									},
									"src": "979:246:2",
									"visibility": "internal"
								}
							],
							"scope": 481,
							"src": "735:492:2"
						}
					],
					"src": "709:518:2"
				},
				"id": 2
			},
			"contracts/ds-thing/thing.sol": {
				"ast": {
					"absolutePath": "contracts/ds-thing/thing.sol",
					"exportedSymbols": {
						"DSThing": [
							506
						]
					},
					"id": 507,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 482,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "753:24:3"
						},
						{
							"absolutePath": "contracts/ds-auth/auth.sol",
							"file": "../ds-auth/auth.sol",
							"id": 483,
							"nodeType": "ImportDirective",
							"scope": 507,
							"sourceUnit": 139,
							"src": "779:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ds-note/note.sol",
							"file": "../ds-note/note.sol",
							"id": 484,
							"nodeType": "ImportDirective",
							"scope": 507,
							"sourceUnit": 481,
							"src": "809:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ds-math/math.sol",
							"file": "../ds-math/math.sol",
							"id": 485,
							"nodeType": "ImportDirective",
							"scope": 507,
							"sourceUnit": 440,
							"src": "839:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 486,
										"name": "DSAuth",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 138,
										"src": "890:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DSAuth_$138",
											"typeString": "contract DSAuth"
										}
									},
									"id": 487,
									"nodeType": "InheritanceSpecifier",
									"src": "890:6:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 488,
										"name": "DSNote",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 480,
										"src": "898:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DSNote_$480",
											"typeString": "contract DSNote"
										}
									},
									"id": 489,
									"nodeType": "InheritanceSpecifier",
									"src": "898:6:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 490,
										"name": "DSMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 439,
										"src": "906:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DSMath_$439",
											"typeString": "contract DSMath"
										}
									},
									"id": 491,
									"nodeType": "InheritanceSpecifier",
									"src": "906:6:3"
								}
							],
							"contractDependencies": [
								480,
								439,
								138,
								22
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 506,
							"linearizedBaseContracts": [
								506,
								439,
								480,
								138,
								22
							],
							"name": "DSThing",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "972:44:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 500,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "1006:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 499,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "996:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																	"typeString": "function () pure returns (bytes32)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "996:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "989:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": "bytes4"
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "989:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 497,
												"id": 503,
												"nodeType": "Return",
												"src": "982:27:3"
											}
										]
									},
									"documentation": null,
									"id": 505,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "S",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "931:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 492,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "931:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "930:10:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "964:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 495,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "963:8:3"
									},
									"scope": 506,
									"src": "920:96:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 507,
							"src": "870:149:3"
						}
					],
					"src": "753:266:3"
				},
				"id": 3
			},
			"contracts/ds-value/value.sol": {
				"ast": {
					"absolutePath": "contracts/ds-value/value.sol",
					"exportedSymbols": {
						"DSValue": [
							575
						]
					},
					"id": 576,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 508,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "746:24:4"
						},
						{
							"absolutePath": "contracts/ds-thing/thing.sol",
							"file": "../ds-thing/thing.sol",
							"id": 509,
							"nodeType": "ImportDirective",
							"scope": 576,
							"sourceUnit": 507,
							"src": "772:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 510,
										"name": "DSThing",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 506,
										"src": "825:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DSThing_$506",
											"typeString": "contract DSThing"
										}
									},
									"id": 511,
									"nodeType": "InheritanceSpecifier",
									"src": "825:7:4"
								}
							],
							"contractDependencies": [
								506,
								480,
								439,
								138,
								22
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 575,
							"linearizedBaseContracts": [
								575,
								506,
								439,
								480,
								138,
								22
							],
							"name": "DSValue",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 513,
									"name": "has",
									"nodeType": "VariableDeclaration",
									"scope": 575,
									"src": "839:11:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 512,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "839:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 515,
									"name": "val",
									"nodeType": "VariableDeclaration",
									"scope": 575,
									"src": "856:11:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 514,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "856:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "925:33:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 522,
															"name": "val",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "943:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 523,
															"name": "has",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "947:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 524,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "942:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bool_$",
														"typeString": "tuple(bytes32,bool)"
													}
												},
												"functionReturnParameters": 521,
												"id": 525,
												"nodeType": "Return",
												"src": "935:16:4"
											}
										]
									},
									"documentation": null,
									"id": 527,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "peek",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "886:2:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "910:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 517,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "919:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "919:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "909:15:4"
									},
									"scope": 575,
									"src": "873:85:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "1009:81:4",
										"statements": [
											{
												"assignments": [
													532,
													533
												],
												"declarations": [
													{
														"constant": false,
														"id": 532,
														"name": "wut",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "1024:3:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": null,
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 533,
														"name": "haz",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "1029:3:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": null,
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 536,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 534,
														"name": "peek",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "1036:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$_t_bool_$",
															"typeString": "function () view returns (bytes32,bool)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1036:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bool_$",
														"typeString": "tuple(bytes32,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1019:23:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 538,
															"name": "haz",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "1059:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 537,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "1052:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1052:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "1052:11:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 541,
													"name": "wut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 532,
													"src": "1080:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 531,
												"id": 542,
												"nodeType": "Return",
												"src": "1073:10:4"
											}
										]
									},
									"documentation": null,
									"id": 544,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "read",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "976:2:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "1000:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 529,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "999:9:4"
									},
									"scope": 575,
									"src": "963:127:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "1139:46:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 553,
														"name": "val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "1149:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 554,
														"name": "wut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "1155:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1149:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "1149:9:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 557,
														"name": "has",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "1168:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1174:4:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1168:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "1168:10:4"
											}
										]
									},
									"documentation": null,
									"id": 562,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 549,
											"modifierName": {
												"argumentTypes": null,
												"id": 548,
												"name": "note",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 479,
												"src": "1129:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1129:4:4"
										},
										{
											"arguments": null,
											"id": 551,
											"modifierName": {
												"argumentTypes": null,
												"id": 550,
												"name": "auth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 90,
												"src": "1134:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1134:4:4"
										}
									],
									"name": "poke",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"name": "wut",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1109:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 545,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1108:13:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:0:4"
									},
									"scope": 575,
									"src": "1095:90:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "1223:48:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 569,
														"name": "has",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "1253:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1259:5:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1253:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "1253:11:4"
											}
										]
									},
									"documentation": null,
									"id": 574,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 565,
											"modifierName": {
												"argumentTypes": null,
												"id": 564,
												"name": "note",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 479,
												"src": "1213:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1213:4:4"
										},
										{
											"arguments": null,
											"id": 567,
											"modifierName": {
												"argumentTypes": null,
												"id": 566,
												"name": "auth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 90,
												"src": "1218:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1218:4:4"
										}
									],
									"name": "void",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1203:2:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1223:0:4"
									},
									"scope": 575,
									"src": "1190:81:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 576,
							"src": "805:468:4"
						}
					],
					"src": "746:527:4"
				},
				"id": 4
			}
		}
	}
}